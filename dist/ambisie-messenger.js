!function(I,g){"object"==typeof exports&&"object"==typeof module?module.exports=g(require("lodash"),require("moment")):"function"==typeof define&&define.amd?define(["lodash","moment"],g):"object"==typeof exports?exports.AmbisieMessenger=g(require("lodash"),require("moment")):I.AmbisieMessenger=g(I._,I.moment)}(window,(function(__WEBPACK_EXTERNAL_MODULE__5__,__WEBPACK_EXTERNAL_MODULE__20__){return function(I){var g={};function n(e){if(g[e])return g[e].exports;var C=g[e]={i:e,l:!1,exports:{}};return I[e].call(C.exports,C,C.exports,n),C.l=!0,C.exports}return n.m=I,n.c=g,n.d=function(I,g,e){n.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:e})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(I,g){if(1&g&&(I=n(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var C in I)n.d(e,C,function(g){return I[g]}.bind(null,C));return e},n.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(g,"a",g),g},n.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},n.p="dist",n(n.s=18)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.avatarFor = exports.membersExcludingCurrentUserIn = exports.protectFromXSS = exports.uuid4 = exports.toggleClass = exports.removeClass = exports.addClass = exports.appendToFirst = exports.isScrollBottom = exports.createDivEl = exports.getDataInElement = exports.setDataInElement = exports.redirectToIndex = exports.errorAlert = exports.getVariableFromUrl = exports.getCookie = exports.setCookie = exports.isNull = exports.isEmpty = exports.isImage = exports.isUrl = exports.timestampFromNow = exports.timestampToDateString = exports.timestampToTime = undefined;\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _moment = __webpack_require__(20);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _AppState = __webpack_require__(7);\n\nvar _const = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timestampToTime = exports.timestampToTime = function timestampToTime(timestamp) {\n  return _moment2.default.unix(timestamp.toString().length === 13 ? timestamp / 1000 : timestamp).format('dddd, Do MMMM @ h:mma');\n};\n\nvar timestampToDateString = exports.timestampToDateString = function timestampToDateString(timestamp) {\n  return _moment2.default.unix(timestamp.toString().length === 13 ? timestamp / 1000 : timestamp).format('LL');\n};\n\nvar timestampFromNow = exports.timestampFromNow = function timestampFromNow(timestamp) {\n  return (0, _moment2.default)(timestamp).fromNow();\n};\n\nvar isUrl = exports.isUrl = function isUrl(urlString) {\n  var regex = /^(http|https):\\/\\/[^ \"]+$/;\n  return regex.test(urlString);\n};\n\nvar isImage = exports.isImage = function isImage(fileType) {\n  var regex = /^image\\/.+$/;\n  return regex.test(fileType);\n};\n\nvar isEmpty = exports.isEmpty = function isEmpty(value) {\n  return value === null || value === undefined || value.length === 0;\n};\n\nvar isNull = exports.isNull = function isNull(value) {\n  try {\n    return value === null;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar setCookie = exports.setCookie = function setCookie(key, value) {\n  document.cookie = key + '=' + value + '; expires=Fri, 31 Dec 9999 23:59:59 GMT';\n};\n\nvar getCookie = exports.getCookie = function getCookie(key) {\n  var name = key + '=';\n  var ca = document.cookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    if (!c) continue;\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\n\nvar getVariableFromUrl = exports.getVariableFromUrl = function getVariableFromUrl() {\n  var vars = {};\n  var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n  for (var i = 0; i < hashes.length; i++) {\n    var hash = hashes[i].split('=');\n    vars[hash[0]] = hash[1];\n  }\n  return vars;\n};\n\nvar errorAlert = exports.errorAlert = function errorAlert(message) {\n  var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  alert(message);\n  if (reload) {\n    location.reload(true);\n  }\n};\n\nvar redirectToIndex = exports.redirectToIndex = function redirectToIndex(message) {\n  if (message) {\n    errorAlert(message, false);\n  }\n  window.location.href = 'index.html';\n};\n\nvar setDataInElement = exports.setDataInElement = function setDataInElement(target, key, data) {\n  target.dataset['' + key] = data;\n};\n\nvar getDataInElement = exports.getDataInElement = function getDataInElement(target, key) {\n  return target.dataset['' + key];\n};\n\nvar createDivEl = exports.createDivEl = function createDivEl(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      content = _ref.content,\n      background = _ref.background;\n\n  var el = document.createElement('div');\n  if (id) {\n    el.id = id;\n  }\n  if (className) {\n    el.className = Array.isArray(className) ? className.join(' ') : className;\n  }\n  if (content) {\n    el.innerHTML = content;\n  }\n  if (background) {\n    el.style.backgroundImage = 'url(' + background + ')';\n  }\n  return el;\n};\n\nvar isScrollBottom = exports.isScrollBottom = function isScrollBottom(target) {\n  return target.scrollTop + target.offsetHeight >= target.scrollHeight;\n};\n\nvar appendToFirst = exports.appendToFirst = function appendToFirst(target, newElement) {\n  if (target.childNodes.length > 0) {\n    target.insertBefore(newElement, target.childNodes[0]);\n  } else {\n    target.appendChild(newElement);\n  }\n};\n\nvar hasClass = function hasClass(target, className) {\n  return target.classList ? target.classList.contains(className) : new RegExp('(^| )' + className + '( |$)', 'gi').test(target.className);\n};\n\nvar addClass = exports.addClass = function addClass(target, className) {\n  if (target.classList) {\n    if (!(className in target.classList)) {\n      target.classList.add(className);\n    }\n  } else {\n    if (target.className.indexOf(className) < 0) {\n      target.className += ' ' + className;\n    }\n  }\n};\n\nvar removeClass = exports.removeClass = function removeClass(target, className) {\n  if (target.classList) {\n    target.classList.remove(className);\n  } else {\n    target.className = target.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), '');\n  }\n};\n\nvar toggleClass = exports.toggleClass = function toggleClass(target, className) {\n  hasClass(target, className) ? removeClass(target, className) : addClass(target, className);\n};\n\nvar uuid4 = exports.uuid4 = function uuid4() {\n  var d = new Date().getTime();\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar protectFromXSS = exports.protectFromXSS = function protectFromXSS(text) {\n  return typeof text === 'string' ? text.replace(/\\</g, '&lt;').replace(/\\>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\'/g, '&apos;') : text;\n};\n\nvar membersExcludingCurrentUserIn = exports.membersExcludingCurrentUserIn = function membersExcludingCurrentUserIn(channel) {\n  return channel.members.filter(function (member) {\n    return member.userId !== (0, _AppState.getAppState)().currentUserId;\n  });\n};\n\nvar avatarFor = exports.avatarFor = function avatarFor(member) {\n  return (member || {}).profileUrl || (0, _AppState.getAppState)().placeholderAvatarUrl || _const.PLACEHOLDER_AVATAR_URL;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendBirdAction = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _AppState = __webpack_require__(7);\n\nvar _sendbird = __webpack_require__(8);\n\nvar _sendbird2 = _interopRequireDefault(_sendbird);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar SendBirdAction = function () {\n  function SendBirdAction(appId) {\n    _classCallCheck(this, SendBirdAction);\n\n    if (instance) {\n      return instance;\n    }\n    this.sb = new _sendbird2.default({\n      appId: appId\n    });\n    this.userQuery = null;\n    this.openChannelQuery = null;\n    this.groupChannelQuery = null;\n    this.previousMessageQuery = null;\n    this.participantQuery = null;\n    this.blockedQuery = null;\n    instance = this;\n  }\n\n  /**\n   * Connect\n   */\n\n\n  _createClass(SendBirdAction, [{\n    key: 'connect',\n    value: function connect(userId, userApiKey, nickname) {\n      return new Promise(function (resolve, reject) {\n        var sb = _sendbird2.default.getInstance();\n        sb.connect(userId, userApiKey, function (user, error) {\n          if (error) {\n            reject(error);\n          } else {\n            sb.updateCurrentUserInfo(decodeURIComponent(nickname), null, function (user, error) {\n              error ? reject(error) : resolve(user);\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.sb.disconnect(function (response, error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * User\n     */\n\n  }, {\n    key: 'getCurrentUser',\n    value: function getCurrentUser() {\n      return this.sb.currentUser;\n    }\n  }, {\n    key: 'getUserList',\n    value: function getUserList() {\n      var _this2 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (isInit || (0, _utils.isNull)(this.userQuery)) {\n        this.userQuery = this.sb.createApplicationUserListQuery();\n        this.userQuery.limit = 30;\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this2.userQuery.hasNext && !_this2.userQuery.isLoading) {\n          _this2.userQuery.next(function (list, error) {\n            error ? reject(error) : resolve(list);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }, {\n    key: 'isCurrentUser',\n    value: function isCurrentUser(user) {\n      return user.userId === this.sb.currentUser.userId;\n    }\n  }, {\n    key: 'getBlockedList',\n    value: function getBlockedList() {\n      var _this3 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (isInit || (0, _utils.isNull)(this.blockedQuery)) {\n        this.blockedQuery = this.sb.createBlockedUserListQuery();\n        this.blockedQuery.limit = 30;\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this3.blockedQuery.hasNext && !_this3.blockedQuery.isLoading) {\n          _this3.blockedQuery.next(function (blockedList, error) {\n            error ? reject(error) : resolve(blockedList);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }, {\n    key: 'blockUser',\n    value: function blockUser(user) {\n      var _this4 = this;\n\n      var isBlock = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      return new Promise(function (resolve, reject) {\n        if (isBlock) {\n          _this4.sb.blockUser(user, function (response, error) {\n            error ? reject(error) : resolve();\n          });\n        } else {\n          _this4.sb.unblockUser(user, function (response, error) {\n            error ? reject(error) : resolve();\n          });\n        }\n      });\n    }\n\n    /**\n     * Channel\n     */\n\n  }, {\n    key: 'getChannel',\n    value: function getChannel(channelUrl) {\n      var _this5 = this;\n\n      var isOpenChannel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      return new Promise(function (resolve, reject) {\n        if (isOpenChannel) {\n          _this5.sb.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n            error ? reject(error) : resolve(openChannel);\n          });\n        } else {\n          _this5.sb.GroupChannel.getChannel(channelUrl, function (groupChannel, error) {\n            error ? reject(error) : resolve(groupChannel);\n          });\n        }\n      });\n    }\n\n    /**\n     * Open Channel\n     */\n\n  }, {\n    key: 'getOpenChannelList',\n    value: function getOpenChannelList() {\n      var _this6 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var urlKeyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      if (isInit || (0, _utils.isNull)(this.openChannelQuery)) {\n        this.openChannelQuery = this.sb.OpenChannel.createOpenChannelListQuery();\n        this.openChannelQuery.limit = 20;\n        this.openChannelQuery.urlKeyword = urlKeyword;\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this6.openChannelQuery.hasNext && !_this6.openChannelQuery.isLoading) {\n          _this6.openChannelQuery.next(function (list, error) {\n            error ? reject(error) : resolve(list);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }, {\n    key: 'createOpenChannel',\n    value: function createOpenChannel(channelName) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        channelName ? _this7.sb.OpenChannel.createChannel(channelName, null, null, function (openChannel, error) {\n          error ? reject(error) : resolve(openChannel);\n        }) : _this7.sb.OpenChannel.createChannel(function (openChannel, error) {\n          error ? reject(error) : resolve(openChannel);\n        });\n      });\n    }\n  }, {\n    key: 'enter',\n    value: function enter(channelUrl) {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this8.sb.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            openChannel.enter(function (response, error) {\n              error ? reject(error) : resolve();\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'exit',\n    value: function exit(channelUrl) {\n      var _this9 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this9.sb.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            openChannel.exit(function (response, error) {\n              error ? reject(error) : resolve();\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'getParticipantList',\n    value: function getParticipantList(channelUrl) {\n      var _this10 = this;\n\n      var isInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return new Promise(function (resolve, reject) {\n        _this10.sb.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            if (isInit || (0, _utils.isNull)(_this10.participantQuery)) {\n              _this10.participantQuery = openChannel.createParticipantListQuery();\n              _this10.participantQuery.limit = 30;\n            }\n            if (_this10.participantQuery.hasNext && !_this10.participantQuery.isLoading) {\n              _this10.participantQuery.next(function (participantList, error) {\n                error ? reject(error) : resolve(participantList);\n              });\n            } else {\n              resolve([]);\n            }\n          }\n        });\n      });\n    }\n\n    /**\n     * Group Channel\n     */\n\n  }, {\n    key: 'findChannelWithUsers',\n    value: function findChannelWithUsers(userIds) {\n      return this.getGroupChannelList(true).then(function (channels) {\n        return _lodash2.default.find(channels, function (channel) {\n          return _lodash2.default.every(userIds, function (userId) {\n            return !!_lodash2.default.find(channel.members, function (m) {\n              return m.userId === userId;\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'findOrCreateGroupChannelWithUsers',\n    value: function findOrCreateGroupChannelWithUsers(userIds) {\n      var _this11 = this;\n\n      return this.findChannelWithUsers(userIds).then(function (channel) {\n        return channel || _this11.createGroupChannel(userIds);\n      });\n    }\n  }, {\n    key: 'getGroupChannelList',\n    value: function getGroupChannelList() {\n      var _this12 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (isInit || (0, _utils.isNull)(this.groupChannelQuery)) {\n        this.groupChannelQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\n        this.groupChannelQuery.limit = 50;\n        this.groupChannelQuery.includeEmpty = false;\n        this.groupChannelQuery.order = 'latest_last_message';\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this12.groupChannelQuery.hasNext && !_this12.groupChannelQuery.isLoading) {\n          _this12.groupChannelQuery.next(function (list, error) {\n            error ? reject(error) : resolve(list);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }, {\n    key: 'createGroupChannel',\n    value: function createGroupChannel(userIds) {\n      var _this13 = this;\n\n      return new Promise(function (resolve, reject) {\n        var channelNameBits = [(0, _AppState.getAppState)().currentUserId].concat(_toConsumableArray(userIds), [(0, _utils.uuid4)()]).filter(Boolean).map(function (id) {\n          return id.replace(/[^a-z,A-Z,0-9,_,-]/g, '-');\n        });\n        var params = new _this13.sb.GroupChannelParams();\n\n        params.addUserIds(userIds);\n        params.channelUrl = channelNameBits.join('_');\n\n        _this13.sb.GroupChannel.createChannel(params, function (groupChannel, error) {\n          error ? reject(error) : resolve(groupChannel);\n        });\n      });\n    }\n  }, {\n    key: 'inviteGroupChannel',\n    value: function inviteGroupChannel(channelUrl, userIds) {\n      var _this14 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this14.sb.GroupChannel.getChannel(channelUrl, function (groupChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            groupChannel.inviteWithUserIds(userIds, function (groupChannel, error) {\n              error ? reject(error) : resolve(groupChannel);\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'leave',\n    value: function leave(channelUrl) {\n      var _this15 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this15.sb.GroupChannel.getChannel(channelUrl, function (groupChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            groupChannel.leave(function (response, error) {\n              error ? reject(error) : resolve();\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide(channelUrl) {\n      var _this16 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this16.sb.GroupChannel.getChannel(channelUrl, function (groupChannel, error) {\n          if (error) {\n            reject(error);\n          } else {\n            groupChannel.hide(function (response, error) {\n              error ? reject(error) : resolve();\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: 'markAsRead',\n    value: function markAsRead(channel) {\n      channel.markAsRead();\n    }\n\n    /**\n     * Message\n     */\n\n  }, {\n    key: 'getMessageList',\n    value: function getMessageList(channel) {\n      var _this17 = this;\n\n      var isInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (isInit || (0, _utils.isNull)(this.previousMessageQuery)) {\n        this.previousMessageQuery = channel.createPreviousMessageListQuery();\n      }\n      return new Promise(function (resolve, reject) {\n        if (_this17.previousMessageQuery.hasMore && !_this17.previousMessageQuery.isLoading) {\n          _this17.previousMessageQuery.load(50, false, function (messageList, error) {\n            error ? reject(error) : resolve(messageList);\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }, {\n    key: 'getReadReceipt',\n    value: function getReadReceipt(channel, message) {\n      if (this.isCurrentUser(message.sender)) {\n        return channel.getReadReceipt(message);\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: 'sendUserMessage',\n    value: function sendUserMessage(_ref) {\n      var channel = _ref.channel,\n          message = _ref.message,\n          handler = _ref.handler;\n\n      return channel.sendUserMessage(message, function (message, error) {\n        if (handler) handler(message, error);\n      });\n    }\n  }, {\n    key: 'sendFileMessage',\n    value: function sendFileMessage(_ref2) {\n      var channel = _ref2.channel,\n          file = _ref2.file,\n          thumbnailSizes = _ref2.thumbnailSizes,\n          handler = _ref2.handler;\n\n      var fileMessageParams = new this.sb.FileMessageParams();\n      fileMessageParams.file = file;\n      fileMessageParams.thumbnailSizes = thumbnailSizes;\n\n      return channel.sendFileMessage(fileMessageParams, function (message, error) {\n        if (handler) handler(message, error);\n      });\n    }\n  }, {\n    key: 'deleteMessage',\n    value: function deleteMessage(_ref3) {\n      var _this18 = this;\n\n      var channel = _ref3.channel,\n          message = _ref3.message;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this18.isCurrentUser(message.sender)) {\n          reject({\n            message: 'You have not ownership in this message.'\n          });\n        }\n        channel.deleteMessage(message, function (response, error) {\n          error ? reject(error) : resolve(response);\n        });\n      });\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new SendBirdAction();\n    }\n  }]);\n\n  return SendBirdAction;\n}();\n\nexports.SendBirdAction = SendBirdAction;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar USER_ID = exports.USER_ID = 'user_id';\nvar DISPLAY_NONE = exports.DISPLAY_NONE = 'none';\nvar DISPLAY_BLOCK = exports.DISPLAY_BLOCK = 'block';\nvar DISPLAY_FLEX = exports.DISPLAY_FLEX = 'flex';\nvar ACTIVE_CLASSNAME = exports.ACTIVE_CLASSNAME = 'active';\nvar KEY_ENTER = exports.KEY_ENTER = 13;\nvar FILE_ID = exports.FILE_ID = 'attach_file_id';\nvar UPDATE_INTERVAL_TIME = exports.UPDATE_INTERVAL_TIME = 5 * 1000;\nvar COLOR_RED = exports.COLOR_RED = '#DC5960';\nvar MESSAGE_REQ_ID = exports.MESSAGE_REQ_ID = 'reqId';\nvar OPEN_CHANNEL_SEARCH_URL = exports.OPEN_CHANNEL_SEARCH_URL = 'search_open_channel';\nvar PLACEHOLDER_AVATAR_URL = exports.PLACEHOLDER_AVATAR_URL = 'https://www.ambisie.com/images/logo/Badge-Navy@500px.png';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0FtYmlzaWVNZXNzZW5nZXIvLi9zcmMvanMvY29uc3QuanM/ZDAzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgVVNFUl9JRCA9IGV4cG9ydHMuVVNFUl9JRCA9ICd1c2VyX2lkJztcbnZhciBESVNQTEFZX05PTkUgPSBleHBvcnRzLkRJU1BMQVlfTk9ORSA9ICdub25lJztcbnZhciBESVNQTEFZX0JMT0NLID0gZXhwb3J0cy5ESVNQTEFZX0JMT0NLID0gJ2Jsb2NrJztcbnZhciBESVNQTEFZX0ZMRVggPSBleHBvcnRzLkRJU1BMQVlfRkxFWCA9ICdmbGV4JztcbnZhciBBQ1RJVkVfQ0xBU1NOQU1FID0gZXhwb3J0cy5BQ1RJVkVfQ0xBU1NOQU1FID0gJ2FjdGl2ZSc7XG52YXIgS0VZX0VOVEVSID0gZXhwb3J0cy5LRVlfRU5URVIgPSAxMztcbnZhciBGSUxFX0lEID0gZXhwb3J0cy5GSUxFX0lEID0gJ2F0dGFjaF9maWxlX2lkJztcbnZhciBVUERBVEVfSU5URVJWQUxfVElNRSA9IGV4cG9ydHMuVVBEQVRFX0lOVEVSVkFMX1RJTUUgPSA1ICogMTAwMDtcbnZhciBDT0xPUl9SRUQgPSBleHBvcnRzLkNPTE9SX1JFRCA9ICcjREM1OTYwJztcbnZhciBNRVNTQUdFX1JFUV9JRCA9IGV4cG9ydHMuTUVTU0FHRV9SRVFfSUQgPSAncmVxSWQnO1xudmFyIE9QRU5fQ0hBTk5FTF9TRUFSQ0hfVVJMID0gZXhwb3J0cy5PUEVOX0NIQU5ORUxfU0VBUkNIX1VSTCA9ICdzZWFyY2hfb3Blbl9jaGFubmVsJztcbnZhciBQTEFDRUhPTERFUl9BVkFUQVJfVVJMID0gZXhwb3J0cy5QTEFDRUhPTERFUl9BVkFUQVJfVVJMID0gJ2h0dHBzOi8vd3d3LmFtYmlzaWUuY29tL2ltYWdlcy9sb2dvL0JhZGdlLU5hdnlANTAwcHgucG5nJzsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Spinner = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _spinner = __webpack_require__(43);\n\nvar _spinner2 = _interopRequireDefault(_spinner);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar Spinner = function () {\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    if (instance) {\n      return instance;\n    }\n    this.element = this._createSpinner();\n    instance = this;\n  }\n\n  _createClass(Spinner, [{\n    key: '_createSpinner',\n    value: function _createSpinner() {\n      var item = (0, _utils.createDivEl)({ className: _spinner2.default['sb-spinner'] });\n      var bubble = (0, _utils.createDivEl)({ className: _spinner2.default['sb-spinner-bubble'] });\n      item.appendChild(bubble);\n      return item;\n    }\n  }], [{\n    key: 'start',\n    value: function start(target) {\n      var spinnerEl = Spinner.getInstance().element;\n      if (!target.contains(spinnerEl)) {\n        target.appendChild(spinnerEl);\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var spinnerEl = Spinner.getInstance().element;\n      var targetEl = spinnerEl.parentElement;\n      if (targetEl && targetEl.contains(spinnerEl)) {\n        spinnerEl.parentElement.removeChild(spinnerEl);\n      }\n    }\n  }, {\n    key: 'getInstance',\n    value: function getInstance() {\n      return new Spinner();\n    }\n  }]);\n\n  return Spinner;\n}();\n\nexports.Spinner = Spinner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0FtYmlzaWVNZXNzZW5nZXIvLi9zcmMvanMvY29tcG9uZW50cy9TcGlubmVyLmpzPzE0ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TcGlubmVyID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3NwaW5uZXIgPSByZXF1aXJlKCcuLi8uLi9zY3NzL3NwaW5uZXIuc2NzcycpO1xuXG52YXIgX3NwaW5uZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3Bpbm5lcik7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgaW5zdGFuY2UgPSBudWxsO1xuXG52YXIgU3Bpbm5lciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Bpbm5lcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3Bpbm5lcik7XG5cbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5fY3JlYXRlU3Bpbm5lcigpO1xuICAgIGluc3RhbmNlID0gdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTcGlubmVyLCBbe1xuICAgIGtleTogJ19jcmVhdGVTcGlubmVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZVNwaW5uZXIoKSB7XG4gICAgICB2YXIgaXRlbSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfc3Bpbm5lcjIuZGVmYXVsdFsnc2Itc3Bpbm5lciddIH0pO1xuICAgICAgdmFyIGJ1YmJsZSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfc3Bpbm5lcjIuZGVmYXVsdFsnc2Itc3Bpbm5lci1idWJibGUnXSB9KTtcbiAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoYnViYmxlKTtcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnc3RhcnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydCh0YXJnZXQpIHtcbiAgICAgIHZhciBzcGlubmVyRWwgPSBTcGlubmVyLmdldEluc3RhbmNlKCkuZWxlbWVudDtcbiAgICAgIGlmICghdGFyZ2V0LmNvbnRhaW5zKHNwaW5uZXJFbCkpIHtcbiAgICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKHNwaW5uZXJFbCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgdmFyIHNwaW5uZXJFbCA9IFNwaW5uZXIuZ2V0SW5zdGFuY2UoKS5lbGVtZW50O1xuICAgICAgdmFyIHRhcmdldEVsID0gc3Bpbm5lckVsLnBhcmVudEVsZW1lbnQ7XG4gICAgICBpZiAodGFyZ2V0RWwgJiYgdGFyZ2V0RWwuY29udGFpbnMoc3Bpbm5lckVsKSkge1xuICAgICAgICBzcGlubmVyRWwucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChzcGlubmVyRWwpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldEluc3RhbmNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SW5zdGFuY2UoKSB7XG4gICAgICByZXR1cm4gbmV3IFNwaW5uZXIoKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU3Bpbm5lcjtcbn0oKTtcblxuZXhwb3J0cy5TcGlubmVyID0gU3Bpbm5lcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Chat = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chat = __webpack_require__(53);\n\nvar _chat2 = _interopRequireDefault(_chat);\n\nvar _utils = __webpack_require__(0);\n\nvar _AppState = __webpack_require__(7);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nvar _ChatTopMenu = __webpack_require__(25);\n\nvar _ChatMain = __webpack_require__(26);\n\nvar _SendBirdChatEvent = __webpack_require__(33);\n\nvar _Messenger = __webpack_require__(10);\n\nvar _Messenger2 = _interopRequireDefault(_Messenger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar Chat = function () {\n  function Chat(bodyEl) {\n    _classCallCheck(this, Chat);\n\n    if (instance) {\n      return instance;\n    }\n    this.bodyEl = bodyEl;\n    this.targetEl = this.bodyEl.querySelector('.body-center');\n    this.channel = null;\n    this.element = null;\n    this.top = null;\n    this.emptyElement = this._createEmptyElement();\n    this.render();\n    instance = this;\n  }\n\n  _createClass(Chat, [{\n    key: '_createEmptyElement',\n    value: function _createEmptyElement() {\n      var item = (0, _utils.createDivEl)({ className: _chat2.default['chat-empty'] });\n\n      var content = (0, _utils.createDivEl)({ className: _chat2.default['empty-content'] });\n      item.appendChild(content);\n\n      var title = (0, _utils.createDivEl)({ className: _chat2.default['content-title'], content: 'PRIVATE MESSAGES' });\n      content.appendChild(title);\n      var image = (0, _utils.createDivEl)({ className: _chat2.default['content-image'] });\n      content.appendChild(image);\n      var desc = (0, _utils.createDivEl)({\n        className: _chat2.default['content-desc'],\n        content: (0, _AppState.getAppState)().noMessagePlaceholder || 'Find storytellers and make contact'\n      });\n      content.appendChild(desc);\n      return item;\n    }\n  }, {\n    key: 'renderEmptyElement',\n    value: function renderEmptyElement() {\n      this._removeChatElement();\n      this.targetEl.appendChild(this.emptyElement);\n      return Promise.resolve();\n    }\n  }, {\n    key: '_removeEmptyElement',\n    value: function _removeEmptyElement() {\n      if (this.targetEl.contains(this.emptyElement)) {\n        this.targetEl.removeChild(this.emptyElement);\n      }\n    }\n  }, {\n    key: '_createChatElement',\n    value: function _createChatElement(channel) {\n      this.element = (0, _utils.createDivEl)({ className: _chat2.default['chat-root'] });\n\n      this.top = new _ChatTopMenu.ChatTopMenu(channel);\n      this.element.appendChild(this.top.element);\n\n      this.main = new _ChatMain.ChatMain(channel, this.bodyEl);\n    }\n  }, {\n    key: '_addEventHandler',\n    value: function _addEventHandler() {\n      var _this = this;\n\n      var channelEvent = new _SendBirdChatEvent.SendBirdChatEvent();\n      channelEvent.onMessageReceived = function (channel, message) {\n        if (_this.channel.url === channel.url) {\n          _this.main.renderMessages([message], false);\n        }\n      };\n      channelEvent.onMessageUpdated = function (channel, message) {\n        if (_this.channel.url === channel.url) {\n          _this.main.renderMessages([message], false);\n        }\n      };\n      channelEvent.onMessageDeleted = function (channel, messageId) {\n        if (_this.channel.url === channel.url) {\n          _this.main.removeMessage(messageId, false);\n        }\n      };\n\n      if (this.channel.isGroupChannel()) {\n        channelEvent.onReadReceiptUpdated = function (groupChannel) {\n          if (_this.channel.url === groupChannel.url) {\n            _this.main.updateReadReceipt();\n          }\n        };\n        channelEvent.onTypingStatusUpdated = function (groupChannel) {\n          if (_this.channel.url === groupChannel.url) {\n            _this.main.updateTyping(groupChannel.getTypingMembers());\n          }\n        };\n      }\n    }\n  }, {\n    key: '_renderChatElement',\n    value: function _renderChatElement(channelUrl) {\n      var _this2 = this;\n\n      var isOpenChannel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      _Spinner.Spinner.start(this.bodyEl);\n      var sendbirdAction = _SendBirdAction.SendBirdAction.getInstance();\n      this._removeEmptyElement();\n      this._removeChatElement();\n      _ChatLeftMenu.ChatLeftMenu.getInstance().activeChannelItem(channelUrl);\n      return sendbirdAction.getChannel(channelUrl, isOpenChannel).then(function (channel) {\n        _this2.channel = channel;\n        _this2._addEventHandler();\n        _this2._createChatElement(_this2.channel);\n        _this2.targetEl.appendChild(_this2.element);\n        sendbirdAction.getMessageList(_this2.channel, true).then(function (messageList) {\n          _this2.main.renderMessages(messageList);\n          if (_this2.channel.isGroupChannel()) {\n            sendbirdAction.markAsRead(_this2.channel);\n          }\n          _Spinner.Spinner.remove();\n        }).catch(function (error) {\n          (0, _utils.errorAlert)(error.message);\n        });\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: '_removeChatElement',\n    value: function _removeChatElement() {\n      var chatElements = this.targetEl.getElementsByClassName(_chat2.default['chat-root']);\n      Array.prototype.slice.call(chatElements).forEach(function (chatEl) {\n        chatEl.parentNode.removeChild(chatEl);\n      });\n    }\n  }, {\n    key: 'updateChatInfo',\n    value: function updateChatInfo(channel) {\n      if (this.channel && this.channel.url === channel.url) {\n        if (this.top) {\n          this.top.updateTitle(channel);\n        }\n        if (this.main) {\n          this.main.updateMenu(channel);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render(channelUrl) {\n      var isOpenChannel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_Messenger2.default.getInstance().isPhone()) _ChatLeftMenu.ChatLeftMenu.getInstance().hide();\n      return channelUrl ? this._renderChatElement(channelUrl, isOpenChannel) : this.renderEmptyElement();\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh(channel) {\n      this._removeEmptyElement();\n      this._removeChatElement();\n      this.renderEmptyElement();\n      var reconnectChannel = channel ? channel : this.channel;\n      if (reconnectChannel) {\n        this.render(reconnectChannel.url, reconnectChannel.isOpenChannel());\n      }\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new Chat();\n    }\n  }]);\n\n  return Chat;\n}();\n\nexports.Chat = Chat;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE__5__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0FtYmlzaWVNZXNzZW5nZXIvZXh0ZXJuYWwge1wiY29tbW9uanNcIjpcImxvZGFzaFwiLFwiY29tbW9uanMyXCI6XCJsb2Rhc2hcIixcImFtZFwiOlwibG9kYXNoXCIsXCJyb290XCI6XCJfXCJ9P2FjYjYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX181X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatLeftMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _LeftListItem = __webpack_require__(9);\n\nvar _const = __webpack_require__(2);\n\nvar _utils = __webpack_require__(0);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _OpenChannelList = __webpack_require__(13);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _UserList = __webpack_require__(15);\n\nvar _Chat = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar ChatLeftMenu = function () {\n  function ChatLeftMenu(bodyEl) {\n    var _this = this;\n\n    _classCallCheck(this, ChatLeftMenu);\n\n    if (instance) {\n      return instance;\n    }\n    this.bodyEl = bodyEl;\n    this.groupChannelCreateBtn = bodyEl.querySelector('#group_chat_add');\n\n    this.openChannelDefaultItem = bodyEl.querySelector('#default_item_open');\n    this.groupChannelList = bodyEl.querySelector('#group_list');\n    this.groupChannelList.addEventListener('scroll', function () {\n      if ((0, _utils.isScrollBottom)(_this.groupChannelList)) {\n        _this.getGroupChannelList();\n      }\n    });\n    this.groupChannelDefaultItem = bodyEl.querySelector('#default_item_group');\n    this._addEvent();\n    instance = this;\n  }\n\n  _createClass(ChatLeftMenu, [{\n    key: '_addEvent',\n    value: function _addEvent() {\n      this.groupChannelCreateBtn.addEventListener('click', function () {\n        _UserList.UserList.getInstance().render();\n      });\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      var leftMenuEl = this.bodyEl.querySelector('.body-left');\n      (0, _utils.addClass)(leftMenuEl, 'show');\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var leftMenuEl = this.bodyEl.querySelector('.body-left');\n      (0, _utils.removeClass)(leftMenuEl, 'show');\n    }\n  }, {\n    key: 'hasChannels',\n    value: function hasChannels() {\n      var leftMenuEl = this.bodyEl.querySelector('.body-left');\n      return leftMenuEl.querySelectorAll('.list-item').length > 0;\n    }\n  }, {\n    key: 'updateUserInfo',\n    value: function updateUserInfo(user) {\n      var userInfoEl = document.querySelector('#user_info');\n      var nicknameEl = userInfoEl.querySelectorAll('.nickname-content')[0];\n      nicknameEl.innerHTML = (0, _utils.protectFromXSS)(user.nickname);\n    }\n\n    /**\n     * Item\n     */\n\n  }, {\n    key: 'getChannelItem',\n    value: function getChannelItem(channelUrl) {\n      var groupItems = this.groupChannelList.querySelectorAll(\".\" + _LeftListItem.LeftListItem.getItemRootClassName());\n      var checkList = [].concat(_toConsumableArray(groupItems));\n      for (var i = 0; i < checkList.length; i++) {\n        if (checkList[i].id === channelUrl) {\n          return checkList[i];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'activeChannelItem',\n    value: function activeChannelItem(channelUrl) {\n      var groupItems = this.groupChannelList.querySelectorAll(\".\" + _LeftListItem.LeftListItem.getItemRootClassName());\n      var checkList = [].concat(_toConsumableArray(groupItems));\n      for (var i = 0; i < checkList.length; i++) {\n        checkList[i].id === channelUrl ? (0, _utils.addClass)(checkList[i], _const.ACTIVE_CLASSNAME) : (0, _utils.removeClass)(checkList[i], _const.ACTIVE_CLASSNAME);\n      }\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(elementId) {\n      var groupChannelItems = this.groupChannelList.querySelectorAll(\".\" + _LeftListItem.LeftListItem.getItemRootClassName());\n      for (var i = 0; i < groupChannelItems.length; i++) {\n        if (groupChannelItems[i].id === elementId) {\n          return groupChannelItems[i];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: 'updateItem',\n    value: function updateItem(channel) {\n      var isFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var item = this.getItem(channel.url);\n\n      var handler = function handler() {\n        _Chat.Chat.getInstance().render(channel.url, false);\n        ChatLeftMenu.getInstance().activeChannelItem(channel.url);\n      };\n\n      var newItem = new _LeftListItem.LeftListItem({ channel: channel, handler: handler });\n\n      var parentNode = this.groupChannelList;\n      if (isFirst) {\n        if (item) {\n          parentNode.removeChild(item);\n        }\n        (0, _utils.appendToFirst)(parentNode, newItem.element);\n      } else {\n        parentNode.replaceChild(newItem.element, item);\n      }\n      _LeftListItem.LeftListItem.updateUnreadCount();\n    }\n\n    /**\n     * Group Channel\n     */\n\n  }, {\n    key: 'getGroupChannelList',\n    value: function getGroupChannelList() {\n      var _this2 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _Spinner.Spinner.start(this.bodyEl);\n      return _SendBirdAction.SendBirdAction.getInstance().getGroupChannelList(isInit).then(function (groupChannelList) {\n        _this2.toggleGroupChannelDefaultItem(groupChannelList);\n        groupChannelList.forEach(function (channel) {\n          var handler = function handler() {\n            _Chat.Chat.getInstance().render(channel.url, false);\n            ChatLeftMenu.getInstance().activeChannelItem(channel.url);\n          };\n          var item = new _LeftListItem.LeftListItem({ channel: channel, handler: handler });\n          _this2.groupChannelList.appendChild(item.element);\n          _LeftListItem.LeftListItem.updateUnreadCount();\n        });\n        _Spinner.Spinner.remove();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: 'toggleGroupChannelDefaultItem',\n    value: function toggleGroupChannelDefaultItem(items) {\n      if (items) {\n        this.groupChannelDefaultItem.style.display = items && items.length > 0 ? _const.DISPLAY_NONE : _const.DISPLAY_BLOCK;\n      } else {\n        this.groupChannelList.querySelectorAll(\".\" + _LeftListItem.LeftListItem.getItemRootClassName()).length > 0 ? this.groupChannelDefaultItem.style.display = _const.DISPLAY_NONE : this.groupChannelDefaultItem.style.display = _const.DISPLAY_BLOCK;\n      }\n    }\n  }, {\n    key: 'addGroupChannelItem',\n    value: function addGroupChannelItem(element) {\n      var _this3 = this;\n\n      var isFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var listItems = this.groupChannelList.childNodes;\n      var isExist = false;\n      for (var i = 0; i < listItems.length; i++) {\n        if (listItems[i].id === element.id) {\n          isExist = true;\n        }\n      }\n      if (isExist) {\n        _SendBirdAction.SendBirdAction.getInstance().getChannel(element.id, false).then(function (channel) {\n          _this3.updateItem(channel);\n        }).catch(function (error) {\n          (0, _utils.errorAlert)(error.message);\n        });\n      } else {\n        if (isFirst) {\n          (0, _utils.appendToFirst)(this.groupChannelList, element);\n        } else {\n          this.groupChannelList.appendChild(element);\n        }\n      }\n      _LeftListItem.LeftListItem.updateUnreadCount();\n      this.toggleGroupChannelDefaultItem();\n    }\n  }, {\n    key: 'removeGroupChannelItem',\n    value: function removeGroupChannelItem(elementId) {\n      var removeEl = this.getItem(elementId);\n      if (removeEl) {\n        this.groupChannelList.removeChild(removeEl);\n      }\n      this.toggleGroupChannelDefaultItem();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      var groupItems = this.groupChannelList.querySelectorAll(\".\" + _LeftListItem.LeftListItem.getItemRootClassName());\n      var removeItems = [].concat(_toConsumableArray(groupItems));\n      for (var i = 0; i < removeItems.length; i++) {\n        removeItems[i].parentNode.removeChild(removeItems[i]);\n      }\n\n      this.toggleGroupChannelDefaultItem();\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new ChatLeftMenu();\n    }\n  }]);\n\n  return ChatLeftMenu;\n}();\n\nexports.ChatLeftMenu = ChatLeftMenu;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0FtYmlzaWVNZXNzZW5nZXIvLi9zcmMvanMvQ2hhdExlZnRNZW51LmpzP2IyMzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5DaGF0TGVmdE1lbnUgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfbG9kYXNoID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbnZhciBfbG9kYXNoMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xvZGFzaCk7XG5cbnZhciBfTGVmdExpc3RJdGVtID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL0xlZnRMaXN0SXRlbScpO1xuXG52YXIgX2NvbnN0ID0gcmVxdWlyZSgnLi9jb25zdCcpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgX1NwaW5uZXIgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvU3Bpbm5lcicpO1xuXG52YXIgX09wZW5DaGFubmVsTGlzdCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9PcGVuQ2hhbm5lbExpc3QnKTtcblxudmFyIF9TZW5kQmlyZEFjdGlvbiA9IHJlcXVpcmUoJy4vU2VuZEJpcmRBY3Rpb24nKTtcblxudmFyIF9Vc2VyTGlzdCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9Vc2VyTGlzdCcpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuL0NoYXQnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBpbnN0YW5jZSA9IG51bGw7XG5cbnZhciBDaGF0TGVmdE1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENoYXRMZWZ0TWVudShib2R5RWwpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENoYXRMZWZ0TWVudSk7XG5cbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG4gICAgdGhpcy5ib2R5RWwgPSBib2R5RWw7XG4gICAgdGhpcy5ncm91cENoYW5uZWxDcmVhdGVCdG4gPSBib2R5RWwucXVlcnlTZWxlY3RvcignI2dyb3VwX2NoYXRfYWRkJyk7XG5cbiAgICB0aGlzLm9wZW5DaGFubmVsRGVmYXVsdEl0ZW0gPSBib2R5RWwucXVlcnlTZWxlY3RvcignI2RlZmF1bHRfaXRlbV9vcGVuJyk7XG4gICAgdGhpcy5ncm91cENoYW5uZWxMaXN0ID0gYm9keUVsLnF1ZXJ5U2VsZWN0b3IoJyNncm91cF9saXN0Jyk7XG4gICAgdGhpcy5ncm91cENoYW5uZWxMaXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICgoMCwgX3V0aWxzLmlzU2Nyb2xsQm90dG9tKShfdGhpcy5ncm91cENoYW5uZWxMaXN0KSkge1xuICAgICAgICBfdGhpcy5nZXRHcm91cENoYW5uZWxMaXN0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5ncm91cENoYW5uZWxEZWZhdWx0SXRlbSA9IGJvZHlFbC5xdWVyeVNlbGVjdG9yKCcjZGVmYXVsdF9pdGVtX2dyb3VwJyk7XG4gICAgdGhpcy5fYWRkRXZlbnQoKTtcbiAgICBpbnN0YW5jZSA9IHRoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2hhdExlZnRNZW51LCBbe1xuICAgIGtleTogJ19hZGRFdmVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9hZGRFdmVudCgpIHtcbiAgICAgIHRoaXMuZ3JvdXBDaGFubmVsQ3JlYXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBfVXNlckxpc3QuVXNlckxpc3QuZ2V0SW5zdGFuY2UoKS5yZW5kZXIoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Nob3cnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgdmFyIGxlZnRNZW51RWwgPSB0aGlzLmJvZHlFbC5xdWVyeVNlbGVjdG9yKCcuYm9keS1sZWZ0Jyk7XG4gICAgICAoMCwgX3V0aWxzLmFkZENsYXNzKShsZWZ0TWVudUVsLCAnc2hvdycpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hpZGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgdmFyIGxlZnRNZW51RWwgPSB0aGlzLmJvZHlFbC5xdWVyeVNlbGVjdG9yKCcuYm9keS1sZWZ0Jyk7XG4gICAgICAoMCwgX3V0aWxzLnJlbW92ZUNsYXNzKShsZWZ0TWVudUVsLCAnc2hvdycpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hhc0NoYW5uZWxzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzQ2hhbm5lbHMoKSB7XG4gICAgICB2YXIgbGVmdE1lbnVFbCA9IHRoaXMuYm9keUVsLnF1ZXJ5U2VsZWN0b3IoJy5ib2R5LWxlZnQnKTtcbiAgICAgIHJldHVybiBsZWZ0TWVudUVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5saXN0LWl0ZW0nKS5sZW5ndGggPiAwO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZVVzZXJJbmZvJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlVXNlckluZm8odXNlcikge1xuICAgICAgdmFyIHVzZXJJbmZvRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdXNlcl9pbmZvJyk7XG4gICAgICB2YXIgbmlja25hbWVFbCA9IHVzZXJJbmZvRWwucXVlcnlTZWxlY3RvckFsbCgnLm5pY2tuYW1lLWNvbnRlbnQnKVswXTtcbiAgICAgIG5pY2tuYW1lRWwuaW5uZXJIVE1MID0gKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykodXNlci5uaWNrbmFtZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSXRlbVxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdnZXRDaGFubmVsSXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENoYW5uZWxJdGVtKGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciBncm91cEl0ZW1zID0gdGhpcy5ncm91cENoYW5uZWxMaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyBfTGVmdExpc3RJdGVtLkxlZnRMaXN0SXRlbS5nZXRJdGVtUm9vdENsYXNzTmFtZSgpKTtcbiAgICAgIHZhciBjaGVja0xpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGdyb3VwSXRlbXMpKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hlY2tMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChjaGVja0xpc3RbaV0uaWQgPT09IGNoYW5uZWxVcmwpIHtcbiAgICAgICAgICByZXR1cm4gY2hlY2tMaXN0W2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdhY3RpdmVDaGFubmVsSXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFjdGl2ZUNoYW5uZWxJdGVtKGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciBncm91cEl0ZW1zID0gdGhpcy5ncm91cENoYW5uZWxMaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyBfTGVmdExpc3RJdGVtLkxlZnRMaXN0SXRlbS5nZXRJdGVtUm9vdENsYXNzTmFtZSgpKTtcbiAgICAgIHZhciBjaGVja0xpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGdyb3VwSXRlbXMpKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hlY2tMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNoZWNrTGlzdFtpXS5pZCA9PT0gY2hhbm5lbFVybCA/ICgwLCBfdXRpbHMuYWRkQ2xhc3MpKGNoZWNrTGlzdFtpXSwgX2NvbnN0LkFDVElWRV9DTEFTU05BTUUpIDogKDAsIF91dGlscy5yZW1vdmVDbGFzcykoY2hlY2tMaXN0W2ldLCBfY29uc3QuQUNUSVZFX0NMQVNTTkFNRSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0SXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEl0ZW0oZWxlbWVudElkKSB7XG4gICAgICB2YXIgZ3JvdXBDaGFubmVsSXRlbXMgPSB0aGlzLmdyb3VwQ2hhbm5lbExpc3QucXVlcnlTZWxlY3RvckFsbChcIi5cIiArIF9MZWZ0TGlzdEl0ZW0uTGVmdExpc3RJdGVtLmdldEl0ZW1Sb290Q2xhc3NOYW1lKCkpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cENoYW5uZWxJdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZ3JvdXBDaGFubmVsSXRlbXNbaV0uaWQgPT09IGVsZW1lbnRJZCkge1xuICAgICAgICAgIHJldHVybiBncm91cENoYW5uZWxJdGVtc1tpXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGVJdGVtJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlSXRlbShjaGFubmVsKSB7XG4gICAgICB2YXIgaXNGaXJzdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRJdGVtKGNoYW5uZWwudXJsKTtcblxuICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgICBfQ2hhdC5DaGF0LmdldEluc3RhbmNlKCkucmVuZGVyKGNoYW5uZWwudXJsLCBmYWxzZSk7XG4gICAgICAgIENoYXRMZWZ0TWVudS5nZXRJbnN0YW5jZSgpLmFjdGl2ZUNoYW5uZWxJdGVtKGNoYW5uZWwudXJsKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBuZXdJdGVtID0gbmV3IF9MZWZ0TGlzdEl0ZW0uTGVmdExpc3RJdGVtKHsgY2hhbm5lbDogY2hhbm5lbCwgaGFuZGxlcjogaGFuZGxlciB9KTtcblxuICAgICAgdmFyIHBhcmVudE5vZGUgPSB0aGlzLmdyb3VwQ2hhbm5lbExpc3Q7XG4gICAgICBpZiAoaXNGaXJzdCkge1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgIHBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgKDAsIF91dGlscy5hcHBlbmRUb0ZpcnN0KShwYXJlbnROb2RlLCBuZXdJdGVtLmVsZW1lbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQobmV3SXRlbS5lbGVtZW50LCBpdGVtKTtcbiAgICAgIH1cbiAgICAgIF9MZWZ0TGlzdEl0ZW0uTGVmdExpc3RJdGVtLnVwZGF0ZVVucmVhZENvdW50KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR3JvdXAgQ2hhbm5lbFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdnZXRHcm91cENoYW5uZWxMaXN0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0R3JvdXBDaGFubmVsTGlzdCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgaXNJbml0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgICAgX1NwaW5uZXIuU3Bpbm5lci5zdGFydCh0aGlzLmJvZHlFbCk7XG4gICAgICByZXR1cm4gX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uLmdldEluc3RhbmNlKCkuZ2V0R3JvdXBDaGFubmVsTGlzdChpc0luaXQpLnRoZW4oZnVuY3Rpb24gKGdyb3VwQ2hhbm5lbExpc3QpIHtcbiAgICAgICAgX3RoaXMyLnRvZ2dsZUdyb3VwQ2hhbm5lbERlZmF1bHRJdGVtKGdyb3VwQ2hhbm5lbExpc3QpO1xuICAgICAgICBncm91cENoYW5uZWxMaXN0LmZvckVhY2goZnVuY3Rpb24gKGNoYW5uZWwpIHtcbiAgICAgICAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIoKSB7XG4gICAgICAgICAgICBfQ2hhdC5DaGF0LmdldEluc3RhbmNlKCkucmVuZGVyKGNoYW5uZWwudXJsLCBmYWxzZSk7XG4gICAgICAgICAgICBDaGF0TGVmdE1lbnUuZ2V0SW5zdGFuY2UoKS5hY3RpdmVDaGFubmVsSXRlbShjaGFubmVsLnVybCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgICB2YXIgaXRlbSA9IG5ldyBfTGVmdExpc3RJdGVtLkxlZnRMaXN0SXRlbSh7IGNoYW5uZWw6IGNoYW5uZWwsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgICAgICAgX3RoaXMyLmdyb3VwQ2hhbm5lbExpc3QuYXBwZW5kQ2hpbGQoaXRlbS5lbGVtZW50KTtcbiAgICAgICAgICBfTGVmdExpc3RJdGVtLkxlZnRMaXN0SXRlbS51cGRhdGVVbnJlYWRDb3VudCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgX1NwaW5uZXIuU3Bpbm5lci5yZW1vdmUoKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAoMCwgX3V0aWxzLmVycm9yQWxlcnQpKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndG9nZ2xlR3JvdXBDaGFubmVsRGVmYXVsdEl0ZW0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2dnbGVHcm91cENoYW5uZWxEZWZhdWx0SXRlbShpdGVtcykge1xuICAgICAgaWYgKGl0ZW1zKSB7XG4gICAgICAgIHRoaXMuZ3JvdXBDaGFubmVsRGVmYXVsdEl0ZW0uc3R5bGUuZGlzcGxheSA9IGl0ZW1zICYmIGl0ZW1zLmxlbmd0aCA+IDAgPyBfY29uc3QuRElTUExBWV9OT05FIDogX2NvbnN0LkRJU1BMQVlfQkxPQ0s7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmdyb3VwQ2hhbm5lbExpc3QucXVlcnlTZWxlY3RvckFsbChcIi5cIiArIF9MZWZ0TGlzdEl0ZW0uTGVmdExpc3RJdGVtLmdldEl0ZW1Sb290Q2xhc3NOYW1lKCkpLmxlbmd0aCA+IDAgPyB0aGlzLmdyb3VwQ2hhbm5lbERlZmF1bHRJdGVtLnN0eWxlLmRpc3BsYXkgPSBfY29uc3QuRElTUExBWV9OT05FIDogdGhpcy5ncm91cENoYW5uZWxEZWZhdWx0SXRlbS5zdHlsZS5kaXNwbGF5ID0gX2NvbnN0LkRJU1BMQVlfQkxPQ0s7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkR3JvdXBDaGFubmVsSXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEdyb3VwQ2hhbm5lbEl0ZW0oZWxlbWVudCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBpc0ZpcnN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcblxuICAgICAgdmFyIGxpc3RJdGVtcyA9IHRoaXMuZ3JvdXBDaGFubmVsTGlzdC5jaGlsZE5vZGVzO1xuICAgICAgdmFyIGlzRXhpc3QgPSBmYWxzZTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdEl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChsaXN0SXRlbXNbaV0uaWQgPT09IGVsZW1lbnQuaWQpIHtcbiAgICAgICAgICBpc0V4aXN0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzRXhpc3QpIHtcbiAgICAgICAgX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uLmdldEluc3RhbmNlKCkuZ2V0Q2hhbm5lbChlbGVtZW50LmlkLCBmYWxzZSkudGhlbihmdW5jdGlvbiAoY2hhbm5lbCkge1xuICAgICAgICAgIF90aGlzMy51cGRhdGVJdGVtKGNoYW5uZWwpO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAoMCwgX3V0aWxzLmVycm9yQWxlcnQpKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpc0ZpcnN0KSB7XG4gICAgICAgICAgKDAsIF91dGlscy5hcHBlbmRUb0ZpcnN0KSh0aGlzLmdyb3VwQ2hhbm5lbExpc3QsIGVsZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuZ3JvdXBDaGFubmVsTGlzdC5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgX0xlZnRMaXN0SXRlbS5MZWZ0TGlzdEl0ZW0udXBkYXRlVW5yZWFkQ291bnQoKTtcbiAgICAgIHRoaXMudG9nZ2xlR3JvdXBDaGFubmVsRGVmYXVsdEl0ZW0oKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmVHcm91cENoYW5uZWxJdGVtJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlR3JvdXBDaGFubmVsSXRlbShlbGVtZW50SWQpIHtcbiAgICAgIHZhciByZW1vdmVFbCA9IHRoaXMuZ2V0SXRlbShlbGVtZW50SWQpO1xuICAgICAgaWYgKHJlbW92ZUVsKSB7XG4gICAgICAgIHRoaXMuZ3JvdXBDaGFubmVsTGlzdC5yZW1vdmVDaGlsZChyZW1vdmVFbCk7XG4gICAgICB9XG4gICAgICB0aGlzLnRvZ2dsZUdyb3VwQ2hhbm5lbERlZmF1bHRJdGVtKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY2xlYXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIHZhciBncm91cEl0ZW1zID0gdGhpcy5ncm91cENoYW5uZWxMaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyBfTGVmdExpc3RJdGVtLkxlZnRMaXN0SXRlbS5nZXRJdGVtUm9vdENsYXNzTmFtZSgpKTtcbiAgICAgIHZhciByZW1vdmVJdGVtcyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZ3JvdXBJdGVtcykpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZW1vdmVJdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICByZW1vdmVJdGVtc1tpXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHJlbW92ZUl0ZW1zW2ldKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy50b2dnbGVHcm91cENoYW5uZWxEZWZhdWx0SXRlbSgpO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnZ2V0SW5zdGFuY2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbnN0YW5jZSgpIHtcbiAgICAgIHJldHVybiBuZXcgQ2hhdExlZnRNZW51KCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENoYXRMZWZ0TWVudTtcbn0oKTtcblxuZXhwb3J0cy5DaGF0TGVmdE1lbnUgPSBDaGF0TGVmdE1lbnU7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar appState = {\n  noMessagePlaceholder: null,\n  currentUserId: null,\n  currentUserNickname: null,\n  placeholderAvatarUrl: null\n};\n\nvar getAppState = exports.getAppState = function getAppState() {\n  return appState;\n};\n\nvar setAppState = exports.setAppState = function setAppState() {\n  var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  Object.assign(appState, overrides);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0FtYmlzaWVNZXNzZW5nZXIvLi9zcmMvanMvQXBwU3RhdGUuanM/ODQzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIGFwcFN0YXRlID0ge1xuICBub01lc3NhZ2VQbGFjZWhvbGRlcjogbnVsbCxcbiAgY3VycmVudFVzZXJJZDogbnVsbCxcbiAgY3VycmVudFVzZXJOaWNrbmFtZTogbnVsbCxcbiAgcGxhY2Vob2xkZXJBdmF0YXJVcmw6IG51bGxcbn07XG5cbnZhciBnZXRBcHBTdGF0ZSA9IGV4cG9ydHMuZ2V0QXBwU3RhdGUgPSBmdW5jdGlvbiBnZXRBcHBTdGF0ZSgpIHtcbiAgcmV0dXJuIGFwcFN0YXRlO1xufTtcblxudmFyIHNldEFwcFN0YXRlID0gZXhwb3J0cy5zZXRBcHBTdGF0ZSA9IGZ1bmN0aW9uIHNldEFwcFN0YXRlKCkge1xuICB2YXIgb3ZlcnJpZGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBPYmplY3QuYXNzaWduKGFwcFN0YXRlLCBvdmVycmlkZXMpO1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\n/**\n * Copyright (c) 2016 SendBird DBA (Smile Family, Inc.)\n * SendBird JavaScript SDK v3.0.112\n */\n\n!function (e, n) {\n  "object" == ( false ? undefined : _typeof(exports)) && "undefined" != typeof module ? module.exports = n(__webpack_require__(11), __webpack_require__(12)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(11), __webpack_require__(12)], __WEBPACK_AMD_DEFINE_FACTORY__ = (n),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(undefined, function (e, r) {\n  "use strict";\n  function Z(e) {\n    return (Z = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {\n      return typeof e === "undefined" ? "undefined" : _typeof(e);\n    } : function (e) {\n      return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);\n    })(e);\n  }function _(e, n) {\n    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function");\n  }function i(e, n) {\n    for (var t = 0; t < n.length; t++) {\n      var r = n[t];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n    }\n  }function s(e, n, t) {\n    return n && i(e.prototype, n), t && i(e, t), e;\n  }function n(n, e) {\n    var t = Object.keys(n);if (Object.getOwnPropertySymbols) {\n      var r = Object.getOwnPropertySymbols(n);e && (r = r.filter(function (e) {\n        return Object.getOwnPropertyDescriptor(n, e).enumerable;\n      })), t.push.apply(t, r);\n    }return t;\n  }function y(i) {\n    for (var e = 1; e < arguments.length; e++) {\n      var a = null != arguments[e] ? arguments[e] : {};e % 2 ? n(a, !0).forEach(function (e) {\n        var n, t, r;n = i, r = a[t = e], t in n ? Object.defineProperty(n, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : n[t] = r;\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(i, Object.getOwnPropertyDescriptors(a)) : n(a).forEach(function (e) {\n        Object.defineProperty(i, e, Object.getOwnPropertyDescriptor(a, e));\n      });\n    }return i;\n  }function o(e, n) {\n    if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function");e.prototype = Object.create(n && n.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), n && a(e, n);\n  }function u(e) {\n    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    })(e);\n  }function a(e, n) {\n    return (a = Object.setPrototypeOf || function (e, n) {\n      return e.__proto__ = n, e;\n    })(e, n);\n  }function l(e, n, t) {\n    return (l = function () {\n      if ("undefined" == typeof Reflect || !Reflect.construct) return !1;if (Reflect.construct.sham) return !1;if ("function" == typeof Proxy) return !0;try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n      } catch (e) {\n        return !1;\n      }\n    }() ? Reflect.construct : function (e, n, t) {\n      var r = [null];r.push.apply(r, n);var i = new (Function.bind.apply(e, r))();return t && a(i, t.prototype), i;\n    }).apply(null, arguments);\n  }function c(e) {\n    var t = "function" == typeof Map ? new Map() : void 0;return (c = function c(e) {\n      if (null === e || !function (e) {\n        return -1 !== Function.toString.call(e).indexOf("[native code]");\n      }(e)) return e;if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");if (void 0 !== t) {\n        if (t.has(e)) return t.get(e);t.set(e, n);\n      }function n() {\n        return l(e, arguments, u(this).constructor);\n      }return n.prototype = Object.create(e.prototype, { constructor: { value: n, enumerable: !1, writable: !0, configurable: !0 } }), a(n, e);\n    })(e);\n  }function t(e) {\n    if (void 0 === e) throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e;\n  }function d(e, n) {\n    return !n || "object" != (typeof n === "undefined" ? "undefined" : _typeof(n)) && "function" != typeof n ? t(e) : n;\n  }function h(e, n, t) {\n    return (h = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (e, n, t) {\n      var r = function (e, n) {\n        for (; !Object.prototype.hasOwnProperty.call(e, n) && null !== (e = u(e));) {}return e;\n      }(e, n);if (r) {\n        var i = Object.getOwnPropertyDescriptor(r, n);return i.get ? i.get.call(t) : i.value;\n      }\n    })(e, n, t || e);\n  }function p(e) {\n    throw new Error(\'"\' + e + \'" is read-only\');\n  }function g(e, n) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, n) {\n      if (!(Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e))) return;var t = [],\n          r = !0,\n          i = !1,\n          a = void 0;try {\n        for (var s, o = e[Symbol.iterator](); !(r = (s = o.next()).done) && (t.push(s.value), !n || t.length !== n); r = !0) {}\n      } catch (e) {\n        i = !0, a = e;\n      } finally {\n        try {\n          r || null == o.return || o.return();\n        } finally {\n          if (i) throw a;\n        }\n      }return t;\n    }(e, n) || function () {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }();\n  }function E(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var n = 0, t = new Array(e.length); n < e.length; n++) {\n          t[n] = e[n];\n        }return t;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError("Invalid attempt to spread non-iterable instance");\n    }();\n  }e = e && e.hasOwnProperty("default") ? e.default : e, r = r && r.hasOwnProperty("default") ? r.default : r;var f = function () {\n    function e() {\n      _(this, e);\n    }return s(e, null, [{ key: "OS_VERSION", get: function get() {\n        return "undefined" != typeof navigator && navigator.userAgent ? navigator.userAgent.replace(/,/g, ".") : "undefined";\n      } }, { key: "SDK_VERSION", get: function get() {\n        return "3.0.112";\n      } }, { key: "SDK_MAJOR_VERSION", get: function get() {\n        return e.SDK_VERSION.split(".")[0];\n      } }, { key: "COMMAND_ACK_TIMEOUT", get: function get() {\n        return 1e4;\n      } }]), e;\n  }();function m() {\n    try {\n      return "undefined" != typeof navigator && "string" == typeof navigator.userAgent && -1 < navigator.userAgent.indexOf("MSIE 10");\n    } catch (e) {\n      return !1;\n    }\n  }function C() {\n    try {\n      return document && 9 === document.documentMode;\n    } catch (e) {\n      return !1;\n    }\n  }function v() {\n    try {\n      return document && document.documentMode <= 8;\n    } catch (e) {\n      return !1;\n    }\n  }function U() {\n    return "undefined" == typeof window && "undefined" != typeof process;\n  }function b(e) {\n    return "object" === Z(e) && !!e;\n  }function A(e, n) {\n    var t = ["prototype", "caller", "arguments", "length"],\n        r = Object.getOwnPropertyNames(e);for (var i in r) {\n      var a = r[i];t.indexOf(a) < 0 && (n[a] || ("function" == typeof e[a] ? n[a] = e[a].bind(n) : Object.defineProperty(n, a, Object.getOwnPropertyDescriptor(e, a))));\n    }return n;\n  }var N = function () {\n    function e() {\n      _(this, e), this._field = {};\n    }return s(e, [{ key: "has", value: function value(e) {\n        if (b(e)) return e.__wk && "string" == typeof e.__wk && this._field.hasOwnProperty(e.__wk);throw new Error("Invalid value used as weak map key");\n      } }, { key: "get", value: function value(e) {\n        if (b(e)) return e.__wk && "string" == typeof e.__wk ? this._field[e.__wk] : null;throw new Error("Invalid value used as weak map key");\n      } }, { key: "set", value: function value(e, n) {\n        if (!b(e)) throw new Error("Invalid value used as weak map key");e.__wk && "string" == typeof e.__wk || (e.__wk = "__".concat(new Date().getTime(), "-").concat(parseInt(1e8 * Math.random()))), this._field[e.__wk] = n;\n      } }, { key: "delete", value: function value(e) {\n        if (!b(e)) throw new Error("Invalid value used as weak map key");this.has(e) && delete this._field[e.__wk];\n      } }, { key: "length", get: function get() {\n        return 0;\n      } }]), e;\n  }(),\n      S = m() || C() || v() || U() ? N : WeakMap,\n      I = {},\n      k = new S(),\n      $ = function () {\n    function t() {\n      var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};_(this, t), k.set(this, "object" === Z(e) && e ? e : {});\n    }return s(t, [{ key: "get", value: function value(e) {\n        return k.get(this)[e];\n      } }, { key: "set", value: function value(e, n) {\n        k.get(this)[e] = n;\n      } }, { key: "remove", value: function value(e) {\n        var n = k.get(this);n.hasOwnProperty(e) && delete n[e];\n      } }, { key: "container", get: function get() {\n        return k.get(this);\n      } }], [{ key: "create", value: function value(e, n) {\n        return I[e] = new t(n), I[e];\n      } }, { key: "get", value: function value(e) {\n        return e = e || dn.getInstance()._iid, I[e];\n      } }]), t;\n  }(),\n      ee = function () {\n    function r(e, n) {\n      var t;return _(this, r), (t = d(this, u(r).call(this, n))).name = "SendBirdException", t.code = n || 0, t.message = e, t;\n    }return o(r, c(Error)), s(r, null, [{ key: "INVALID_INITIALIZATION", get: function get() {\n        return 800100;\n      } }, { key: "CONNECTION_REQUIRED", get: function get() {\n        return 800101;\n      } }, { key: "CONNECTION_CANCELED", get: function get() {\n        return 800102;\n      } }, { key: "INVALID_PARAMETER", get: function get() {\n        return 800110;\n      } }, { key: "NETWORK_ERROR", get: function get() {\n        return 800120;\n      } }, { key: "NETWORK_ROUTING_ERROR", get: function get() {\n        return 800121;\n      } }, { key: "MALFORMED_DATA", get: function get() {\n        return 800130;\n      } }, { key: "MALFORMED_ERROR_DATA", get: function get() {\n        return 800140;\n      } }, { key: "WRONG_CHANNEL_TYPE", get: function get() {\n        return 800150;\n      } }, { key: "MARK_AS_READ_RATE_LIMIT_EXCEEDED", get: function get() {\n        return 800160;\n      } }, { key: "QUERY_IN_PROGRESS", get: function get() {\n        return 800170;\n      } }, { key: "ACK_TIMEOUT", get: function get() {\n        return 800180;\n      } }, { key: "LOGIN_TIMEOUT", get: function get() {\n        return 800190;\n      } }, { key: "WEBSOCKET_CONNECTION_CLOSED", get: function get() {\n        return 800200;\n      } }, { key: "WEBSOCKET_CONNECTION_FAILED", get: function get() {\n        return 800210;\n      } }, { key: "REQUEST_FAILED", get: function get() {\n        return 800220;\n      } }, { key: "FILE_UPLOAD_CANCEL_FAILED", get: function get() {\n        return 800230;\n      } }, { key: "REQUEST_CANCELED", get: function get() {\n        return 800240;\n      } }]), r;\n  }(),\n      R = function () {\n    function e() {\n      _(this, e), this.sessionKey = null, this.eKey = null;\n    }return s(e, [{ key: "hasSession", value: function value() {\n        return !!this.sessionKey;\n      } }]), e;\n  }(),\n      O = { DEBUG: "debug", PRODUCTION: "production" },\n      T = O.PRODUCTION,\n      ne = function () {\n    function n() {\n      _(this, n);\n    }return s(n, null, [{ key: "log", value: function value() {\n        var e;(e = console).log.apply(e, arguments);\n      } }, { key: "debug", value: function value() {\n        T === n.Mode.DEBUG && n.log.apply(n, arguments);\n      } }, { key: "Mode", get: function get() {\n        return O;\n      } }, { key: "mode", get: function get() {\n        return T;\n      }, set: function set(e) {\n        -1 < Object.keys(n.Mode).map(function (e) {\n          return n.Mode[e];\n        }).indexOf(e) && (T = e);\n      } }]), n;\n  }(),\n      M = {},\n      L = function () {\n    function i(e) {\n      var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};for (var t in _(this, i), this._iid = e, n) {\n        var r = n[t];"function" == typeof r && (this[t] = this.getClonedClass(r));\n      }M[e] = this;\n    }return s(i, [{ key: "getClonedClass", value: function value(n) {\n        var t = this._iid;if (m() || C()) {\n          var e = function e() {\n            Object.defineProperty(this, "_iid", { get: function get() {\n                return t;\n              } }), n.call.apply(n, [this].concat(Array.prototype.slice.call(arguments)));\n          };return (e.prototype = Object.create(n.prototype)).constructor = e, Object.defineProperty(e, "_iid", { get: function get() {\n              return t;\n            } }), A(n, e), e;\n        }return function () {\n          function e() {\n            return _(this, e), d(this, u(e).apply(this, arguments));\n          }return o(e, n), s(e, [{ key: "_iid", get: function get() {\n              return t;\n            } }], [{ key: "_iid", get: function get() {\n              return t;\n            } }, { key: "_name", get: function get() {\n              return n.name;\n            } }]), e;\n        }();\n      } }], [{ key: "get", value: function value(e) {\n        return e ? M[e] : {};\n      } }]), i;\n  }(),\n      w = function () {\n    function n(e) {\n      _(this, n), this.sb = e, this.pingTimer = null, this.pingTimeoutTimer = null;\n    }return s(n, [{ key: "ping", value: function value() {\n        var e = this,\n            n = L.get(this.sb._iid).Command.bPing(),\n            t = $.get(this.sb._iid).container,\n            r = t.wsAdapter,\n            i = t.pongTimeout;r.ws.send(n), ne.debug("PING"), this.pingTimeoutTimer = setTimeout(function () {\n          ne.debug("PING timeout"), e.stop(), r.ws.handler && r.ws.handler.onError();\n        }, i);\n      } }, { key: "pong", value: function value() {\n        clearTimeout(this.pingTimeoutTimer), this.pingTimeoutTimer = null;\n      } }, { key: "start", value: function value() {\n        var e = this,\n            n = $.get(this.sb._iid).container.pingInterval;this.stop(), this.ping(), this.pingTimer = setInterval(function () {\n          e.ping();\n        }, n);\n      } }, { key: "stop", value: function value() {\n        clearInterval(this.pingTimer), this.pingTimer = null, clearTimeout(this.pingTimeoutTimer), this.pingTimeoutTimer = null;\n      } }]), n;\n  }(),\n      P = function () {\n    function e() {\n      _(this, e), this._fields = [];\n    }return s(e, [{ key: "append", value: function value(e, n) {\n        _fields.push({ key: e, value: n });\n      } }, { key: "toString", value: function value() {\n        var e = "--------FormData" + Math.random(),\n            n = "";for (var t in this._fields) {\n          var r = this._fields[t];if (n += (p("body"), "--" + e + "\\r\\n"), r[1].name) {\n            var i = r[1];n += (p("body"), \'Content-Disposition: form-data; name="\' + r[0] + \'"; filename="\' + i.name + \'"\\r\\n\'), n += (p("body"), "Content-Transfer-Encoding: base64\\r\\n"), n += (p("body"), "Content-Type: " + i.type + "\\r\\n\\r\\n"), n += (p("body"), i.base64 + "\\r\\n");\n          } else n += (p("body"), \'Content-Disposition: form-data; name="\' + r[0] + \'";\\r\\n\\r\\n\'), n += (p("body"), r[1] + "\\r\\n");\n        }return n += (p("body"), "--" + e + "--");\n      } }]), e;\n  }(),\n      D = C() || v() || U() ? P : FormData,\n      te = function () {\n    function e() {\n      _(this, e);\n    }return s(e, null, [{ key: "deepEqual", value: function value(e, n) {\n        if (e === n) return !0;var t = y({}, e),\n            r = y({}, n);return (!t.messageId || !r.messageId || t.messageId === r.messageId) && (!t.reqId || !r.reqId || t.reqId === r.reqId) && (t.hasOwnProperty("messageId") && delete t.messageId, t.hasOwnProperty("reqId") && delete t.reqId, r.hasOwnProperty("messageId") && delete r.messageId, r.hasOwnProperty("reqId") && delete r.reqId, JSON.stringify(t) === JSON.stringify(r));\n      } }, { key: "isVideoChatSignalingMessage", value: function value(e) {\n        try {\n          return !(!e.isUserMessage() || "string" != typeof e.customType || 0 !== e.customType.indexOf("SB_VIDEOCHAT") || "SGNL" !== e.data.substring(0, 4));\n        } catch (e) {\n          return !1;\n        }\n      } }, { key: "isFile", value: function value(e) {\n        return "undefined" != typeof Blob ? e instanceof Blob : "object" === Z(e) && null !== e && "string" == typeof e.name;\n      } }]), e;\n  }(),\n      H = function () {\n    function t(e) {\n      if (_(this, t), this.fields = {}, e) for (var n in e) {\n        this.fields[n] = { value: e[n] }, te.isFile(e[n]) && (this.fields[n].filename = e[n].name);\n      }this.upload = { requestId: null, deleteRequest: null, progressHandler: null };\n    }return s(t, [{ key: "add", value: function value(e, n, t) {\n        var r = 2 < arguments.length && void 0 !== t ? t : null;this.fields[e] = { value: n, filename: r };\n      } }, { key: "remove", value: function value(e) {\n        this.fields.hasOwnProperty(e) && delete this.fields[e];\n      } }, { key: "yield", value: function value() {\n        var e = !1;for (var n in this.fields) {\n          if (te.isFile(this.fields[n].value)) {\n            e = !0;break;\n          }\n        }if (e) {\n          var t = new D();for (var r in this.fields) {\n            var i = this.fields[r];te.isFile(i.value) ? t.append(r, i.value, i.filename) : t.append(r, i.value);\n          }return t;\n        }var a = {};for (var s in this.fields) {\n          a[s] = this.fields[s].value;\n        }return a;\n      } }]), t;\n  }(),\n      G = U() ? e : XMLHttpRequest,\n      F = function () {\n    function b(e) {\n      _(this, b), this.sb = e, this.cls = L.get(this.sb._iid);\n    }return s(b, [{ key: "checkRouting", value: function value(e) {\n        if (this.sb.customApiHost && this.sb.customWsHost) "function" == typeof e && e(null, { apiHost: this.sb.customApiHost, wsHost: this.sb.customWsHost });else {\n          var n = this.sb.getApplicationId();e(null, { apiHost: "https://api-".concat(n, ".sendbird.com"), wsHost: "wss://ws-".concat(n, ".sendbird.com") });\n        }\n      } }, { key: "_parseError", value: function value(n) {\n        try {\n          var e = JSON.parse(n.response),\n              t = e ? e.message : "Request failed.",\n              r = e ? e.code : ee.REQUEST_FAILED;return new ee(t, r);\n        } catch (e) {\n          return n instanceof ee ? n : new ee("Request failed.", ee.REQUEST_FAILED);\n        }\n      } }, { key: "_setDefaultHeader", value: function value(e, n) {\n        try {\n          var t = $.get(this.sb._iid).container,\n              r = t.appId,\n              i = t.auth;e.setRequestHeader("SendBird", "JS,".concat(f.OS_VERSION, ",").concat(f.SDK_VERSION, ",").concat(r)), n && e.setRequestHeader("Session-Key", i.sessionKey), e.setRequestHeader("Request-Sent-Timestamp", new Date().getTime().toString());\n        } catch (e) {\n          ne.debug("setting default header is failed. - ", e);\n        }\n      } }, { key: "_setRequestEvent", value: function value(i, a, n) {\n        var s = this;try {\n          a && "function" == typeof a && (i.upload.onprogress = function (e) {\n            n && "function" == typeof n && n(e), e.lengthComputable && e.loaded >= e.total && a();\n          }), i.onreadystatechange = function () {\n            if (i && i.readyState === G.DONE) {\n              var e = i.status,\n                  n = null;if (200 <= e && e < 400) {\n                var t = !0;try {\n                  n = JSON.parse(i.responseText);\n                } catch (e) {\n                  t = !1, n = null;\n                }t ? i.callback(null, n) : i.callback(new ee("Request failed.", ee.REQUEST_FAILED), null), a && "function" == typeof a && a(), i = null;\n              } else {\n                var r = { status: e, statusText: i.statusText, response: i.responseText };ne.debug(r), i && i.isAbort ? i.onabort() : (i.callback(s._parseError(r), null), i = null);\n              }\n            }\n          }, i.onabort = function () {\n            i && (i.callback(new ee("Request has been canceled.", ee.REQUEST_CANCELED), null), a && "function" == typeof a && a()), i = null;\n          }, i.onerror = function () {\n            i && (i.callback(new ee("There was a network error.", ee.NETWORK_ERROR), null), a && "function" == typeof a && a()), i = null;\n          }, i.ontimeout = function () {\n            i && (i.callback(new ee("Request is timeout.", ee.REQUEST_FAILED), null), a && "function" == typeof a && a()), i = null;\n          };\n        } catch (e) {\n          ne.debug("setting request event is failed. - ", e);\n        }\n      } }, { key: "_createWithEncodedGetParams", value: function value(e) {\n        try {\n          var n = "";for (var t in e.data) {\n            if (e.data.hasOwnProperty(t)) {\n              var r = e.data[t];if (null != r) {\n                n += t + "=" + ("object" === Z(r) ? Array.isArray(r) ? r.map(function (e) {\n                  return encodeURIComponent(e);\n                }).join(",") : encodeURIComponent(JSON.stringify(r)) : encodeURIComponent(r)) + "&";\n              }\n            }\n          }n && (e.url = e.url + "?" + n.substring(0, n.length - 1));\n        } catch (e) {\n          ne.debug("createWithEncodedGetParams is failed. - ", e);\n        }\n      } }, { key: "_sendRequest", value: function value(e, n) {\n        try {\n          switch (e) {case "GET":\n              n.send();break;default:\n              void 0 !== D && D && n.data instanceof D ? C() || v() ? (n.setRequestHeader("Content-Type", "multipart/form-data; boundary=" + n.data.boundary), n.send(n.data.toString())) : n.send(n.data) : (n.setRequestHeader("Content-Type", "application/json; charset=utf-8"), n.send(JSON.stringify(n.data)));}\n        } catch (e) {\n          ne.debug("sending a request is failed. - ", e);\n        }\n      } }, { key: "get", value: function value(i, a, s) {\n        var o = this;this.checkRouting(function (e, n) {\n          if (e) s(new ee("Request failed.", ee.REQUEST_FAILED), null);else if (G) {\n            var t = new G();t.url = "".concat(n.apiHost, "/v").concat(f.SDK_MAJOR_VERSION).concat(i), t.data = a ? a.yield() : {}, t.callback = s, o._createWithEncodedGetParams(t), t.open("GET", t.url, !0);var r = $.get(o.sb._iid).container.auth;o._setRequestEvent(t), o._setDefaultHeader(t, r.sessionKey), o._sendRequest("GET", t);\n          } else s(new ee("Request failed. XMLHttpRequest not found.", ee.REQUEST_FAILED), null);\n        });\n      } }, { key: "post", value: function value(s, o, u) {\n        var l = this;this.checkRouting(function (e, n) {\n          if (e) u(new ee("Request failed.", ee.REQUEST_FAILED), null);else if (G) {\n            var t = new G();t.url = "".concat(n.apiHost, "/v").concat(f.SDK_MAJOR_VERSION).concat(s), t.data = o ? o.yield() : {}, t.callback = u, t.open("POST", t.url, !0), o.upload || (o.upload = {});var r = l.cls.FileMessageQueue,\n                i = o.upload.reqId;i && (r.uploadRequest[i] = t);var a = $.get(l.sb._iid).container.auth;l._setRequestEvent(t, o.upload.deleteRequest, o.upload.progressHandler), l._setDefaultHeader(t, a.sessionKey), l._sendRequest("POST", t);\n          } else u(new ee("Request failed. XMLHttpRequest not found.", ee.REQUEST_FAILED), null);\n        });\n      } }, { key: "put", value: function value(i, a, s) {\n        var o = this;this.checkRouting(function (e, n) {\n          if (e) s(new ee("Request failed.", ee.REQUEST_FAILED), null);else if (G) {\n            var t = new G();t.url = "".concat(n.apiHost, "/v").concat(f.SDK_MAJOR_VERSION).concat(i), t.data = a ? a.yield() : {}, t.callback = s, t.open("PUT", t.url, !0);var r = $.get(o.sb._iid).container.auth;o._setRequestEvent(t), o._setDefaultHeader(t, r.sessionKey), o._sendRequest("PUT", t);\n          } else s(new ee("Request failed. XMLHttpRequest not found.", ee.REQUEST_FAILED), null);\n        });\n      } }, { key: "delete", value: function value(i, a, s) {\n        var o = this;this.checkRouting(function (e, n) {\n          if (e) s(new ee("Request failed.", ee.REQUEST_FAILED), null);else if (G) {\n            var t = new G();t.url = "".concat(n.apiHost, "/v").concat(f.SDK_MAJOR_VERSION).concat(i), t.data = a ? a.yield() : {}, t.callback = s, o._createWithEncodedGetParams(t), t.open("DELETE", t.url, !0);var r = $.get(o.sb._iid).container.auth;o._setRequestEvent(t), o._setDefaultHeader(t, r.sessionKey), o._sendRequest("DELETE", t);\n          } else s(new ee("Request failed. XMLHttpRequest not found.", ee.REQUEST_FAILED), null);\n        });\n      } }, { key: "updateCurrentUserInfo", value: function value(e, i) {\n        var a = this,\n            s = e.nickname,\n            o = e.profileUrl,\n            u = e.profileImage,\n            l = e.preferredLanguages;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H();s && r.add("nickname", s), o && r.add("profile_url", o), u && r.add("profile_file", u, u.name), l && r.add("preferred_languages", l), a.put(t, r, i);\n          }\n        });\n      } }, { key: "getMyGroupChannelChangeLogs", value: function value(e, i) {\n        var a = this,\n            s = e.ts,\n            o = e.token,\n            u = e.customTypes,\n            l = e.includeEmpty;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_MY_GROUP_CHANNEL_CHANGELOGS.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ show_read_receipt: !0, show_member: !0 });o && r.add("token", o), s && r.add("change_ts", s), u && 0 < u.length && r.add("custom_types", u), "boolean" == typeof l && r.add("show_empty", l), a.get(t, r, i);\n          }\n        });\n      } }, { key: "getChannelInvitationPreference", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_GROUP_CHANNEL_INVITATION_PREFERENCE.replace("%s", encodeURIComponent(n.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "getGroupChannelCount", value: function value(e, s) {\n        var o = this,\n            u = e.memberStateFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) s(e, null);else {\n            var t = o.cls.GroupChannel,\n                r = b.Path.USERS_USERID_GROUP_CHANNEL_COUNT.replace("%s", encodeURIComponent(o.sb.currentUser.userId)),\n                i = "";switch (u) {case t.MemberStateFilter.JOINED:\n                i = "joined";break;case t.MemberStateFilter.INVITED:\n                i = "invited";break;case t.MemberStateFilter.INVITED_BY_FRIEND:\n                i = "invited_by_friend";break;case t.MemberStateFilter.INVITED_BY_NON_FRIEND:\n                i = "invited_by_non_friend";break;default:\n                i = "all";}var a = new H({ state: i });o.get(r, a, s);\n          }\n        });\n      } }, { key: "getUnreadItemCount", value: function value(e, i) {\n        var a = this,\n            s = e.keys;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_UNREAD_ITEM_COUNT.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ item_keys: s });a.get(t, r, i);\n          }\n        });\n      } }, { key: "getTotalUnreadMessageCount", value: function value(e, i) {\n        var a = this,\n            s = e.customTypesFilter,\n            o = e.superChannelFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_UNREAD_MESSAGE_COUNT.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ super_mode: o });null !== s && 0 < s.length && r.add("custom_types", s), a.get(t, r, i);\n          }\n        });\n      } }, { key: "getTotalUnreadChannelCount", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_UNREAD_CHANNEL_COUNT.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "markAsReadAll", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrls;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_MARKASREADALL.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H();s && r.add("channel_urls", s), a.put(t, r, i);\n          }\n        });\n      } }, { key: "setChannelInvitationPreference", value: function value(e, i) {\n        var a = this,\n            s = e.isAutoAccept;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_GROUP_CHANNEL_INVITATION_PREFERENCE.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ auto_accept: s });a.put(t, r, i);\n          }\n        });\n      } }, { key: "blockUser", value: function value(e, i) {\n        var a = this,\n            s = e.blockedUserId;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_BLOCK.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ target_id: s });a.post(t, r, i);\n          }\n        });\n      } }, { key: "unblockUser", value: function value(e, r) {\n        var i = this,\n            a = e.unblockedUserId;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_BLOCK_TARGETID.replace("%s", encodeURIComponent(i.sb.currentUser.userId)).replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "getPushTriggerOption", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(n.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "setPushTriggerOption", value: function value(e, i) {\n        var a = this,\n            s = e.pushTriggerOption;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ push_trigger_option: s });a.put(t, r, i);\n          }\n        });\n      } }, { key: "getPushTokens", value: function value(e, i) {\n        var a = this,\n            s = e.ts,\n            o = e.token,\n            u = e.type;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_DEVICE_TOKENS.replace("%s", encodeURIComponent(n.userId)).replace("%s", encodeURIComponent(u)),\n                r = new H();o && r.add("token", o), s && r.add("created_ts", s), a.get(t, r, i);\n          }\n        });\n      } }, { key: "getPushTemplate", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_TEMPLATE.replace("%s", encodeURIComponent(n.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "setPushTemplate", value: function value(e, i) {\n        var a = this,\n            s = e.templateName;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_TEMPLATE.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ name: s });a.put(t, r, i);\n          }\n        });\n      } }, { key: "getDoNotDisturb", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "setDoNotDisturb", value: function value(e, i) {\n        var a = this,\n            s = e.doNotDisturbOn,\n            o = e.startHour,\n            u = e.startMin,\n            l = e.endHour,\n            c = e.endMin,\n            d = e.timezone;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ do_not_disturb: s, start_hour: o, start_min: u, end_hour: l, end_min: c, timezone: d });a.put(t, r, i);\n          }\n        });\n      } }, { key: "getSnoozePeriod", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.get(t, null, r);\n          }\n        });\n      } }, { key: "setSnoozePeriod", value: function value(e, i) {\n        var a = this,\n            s = e.snoozeOn,\n            o = e.startTs,\n            u = e.endTs;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ snooze_enabled: s, snooze_start_ts: o, snooze_end_ts: u });a.put(t, r, i);\n          }\n        });\n      } }, { key: "registerGCMPushToken", value: function value(e, i) {\n        var a = this,\n            s = e.token;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_GCM.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ gcm_reg_token: s });a.post(t, r, i);\n          }\n        });\n      } }, { key: "unregisterGCMPushToken", value: function value(e, r) {\n        var i = this,\n            a = e.token;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_GCM_TOKEN.replace("%s", encodeURIComponent(i.sb.currentUser.userId)).replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "unregisterAllGCMPushTokens", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_GCM.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "registerAPNSPushToken", value: function value(e, i) {\n        var a = this,\n            s = e.token;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_APNS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ apns_device_token: s });a.post(t, r, i);\n          }\n        });\n      } }, { key: "unregisterAPNSPushToken", value: function value(e, r) {\n        var i = this,\n            a = e.token;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_APNS_TOKEN.replace("%s", encodeURIComponent(i.sb.currentUser.userId)).replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "unregisterAllAPNSPushTokens", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH_APNS.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "unregisterAllPushTokens", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSH.replace("%s", encodeURIComponent(i.sb.currentUser.userId));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "loadFriendList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.FRIENDS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ limit: o, token: s });a.get(t, r, i);\n          }\n        });\n      } }, { key: "getFriendChangeLogsByToken", value: function value(e, i) {\n        var a = this,\n            s = e.token;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.FRIENDS_CHANGE_LOGS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H();s && r.add("token", s), a.get(t, r, i);\n          }\n        });\n      } }, { key: "addFriends", value: function value(e, i) {\n        var a = this,\n            s = e.userIds;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.FRIENDS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ user_ids: s });a.post(t, r, i);\n          }\n        });\n      } }, { key: "deleteFriends", value: function value(e, i) {\n        var a = this,\n            s = e.userIds;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.FRIENDS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ user_ids: s });a.delete(t, r, i);\n          }\n        });\n      } }, { key: "uploadFriendDiscoveries", value: function value(e, a) {\n        var s = this,\n            o = e.discoveries;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) a(e, null);else {\n            var t = b.Path.FRIENDS_DISCOVERIES.replace("%s", encodeURIComponent(s.sb.currentUser.userId)),\n                r = [];o.forEach(function (e) {\n              r.push({ friend_discovery_key: e.friendDiscoveryKey, friend_name: "string" == typeof e.friendName || e.friendName ? e.friendName : null });\n            });var i = new H({ friend_discoveries: r });s.put(t, i, a);\n          }\n        });\n      } }, { key: "deleteFriendDiscoveries", value: function value(e, i) {\n        var a = this,\n            s = e.discoveryKeys;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.FRIENDS_DISCOVERIES.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ friend_discovery_keys: s });a.delete(t, r, i);\n          }\n        });\n      } }, { key: "loadUserList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.userIdsFilter,\n            l = e.metaDataKeyFilter,\n            c = e.metaDataValuesFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS,\n                r = new H({ token: s, limit: o });u && 0 < u.length && r.add("user_ids", u), l && c && 0 < c.length && (r.add("metadatakey", l), r.add("metadatavalues_in", c)), a.get(t, r, i);\n          }\n        });\n      } }, { key: "loadBlockedUserList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.userIdsFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_BLOCK.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ token: s, limit: o });u && 0 < u.length && r.add("user_ids", u), a.get(t, r, i);\n          }\n        });\n      } }, { key: "createUserMetaData", value: function value(e, i) {\n        var a = this,\n            s = e.metaData;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_METADATA.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ metadata: s });a.post(t, r, i);\n          }\n        });\n      } }, { key: "updateUserMetaData", value: function value(e, i) {\n        var a = this,\n            s = e.metaData,\n            o = e.upsert;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_METADATA.replace("%s", encodeURIComponent(n.userId)),\n                r = new H({ metadata: s, upsert: o });a.put(t, r, i);\n          }\n        });\n      } }, { key: "deleteUserMetaData", value: function value(e, r) {\n        var i = this,\n            a = e.metaDataKey;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_METADATA_KEY.replace("%s", encodeURIComponent(n.userId)).replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "deleteAllUserMetaData", value: function value(e, r) {\n        var i = this;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_METADATA.replace("%s", encodeURIComponent(n.userId));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "getMessageChangeLogs", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.ts,\n            u = e.token,\n            l = e.isOpenChannel,\n            c = e.includeMetaArray;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = l ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES_CHANGELOGS.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES_CHANGELOGS.replace("%s", encodeURIComponent(s)),\n                r = new H();u && r.add("token", u), o && r.add("change_ts", o), "boolean" == typeof c && r.add("with_sorted_meta_array", c), a.get(t, r, i);\n          }\n        });\n      } }, { key: "getMyMutedInfo", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.userId,\n            o = e.isGroupChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = o ? b.Path.GROUPCHANNELS_CHANNELURL_MUTE_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_MUTE_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s));i.get(t, null, r);\n          }\n        });\n      } }, { key: "loadBannedUserList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.channelUrl,\n            l = e.isOpenChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = l ? b.Path.OPENCHANNELS_CHANNELURL_BAN.replace("%s", encodeURIComponent(u)) : b.Path.GROUPCHANNELS_CHANNELURL_BAN.replace("%s", encodeURIComponent(u)),\n                r = new H({ token: s, limit: o });a.get(t, r, i);\n          }\n        });\n      } }, { key: "loadMutedUserList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.channelUrl,\n            l = e.isOpenChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = l ? b.Path.OPENCHANNELS_CHANNELURL_MUTE.replace("%s", encodeURIComponent(u)) : b.Path.GROUPCHANNELS_CHANNELURL_MUTE.replace("%s", encodeURIComponent(u)),\n                r = new H({ token: s, limit: o });a.get(t, r, i);\n          }\n        });\n      } }, { key: "getMessageList", value: function value(e, i) {\n        var a = this,\n            s = e.channel,\n            o = e.token,\n            u = e.tokenType,\n            l = e.isInclusive,\n            n = e.prevResultSize,\n            c = void 0 === n ? 0 : n,\n            t = e.nextResultSize,\n            d = void 0 === t ? 0 : t,\n            h = e.shouldReverse,\n            p = e.messageType,\n            f = e.customType,\n            _ = e.senderUserIds,\n            y = e.includeMetaArray;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = s.isOpenChannel() ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES.replace("%s", s.url) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES.replace("%s", s.url),\n                r = new H({ is_sdk: String(!0), prev_limit: String(c), next_limit: String(d), include: String(l), reverse: String(h) });"timestamp" === u ? r.add("message_ts", o) : "messageId" === u && r.add("message_id", String(o)), p && r.add("message_type", String(p)), f && r.add("custom_type", String(f)), Array.isArray(_) && 0 < _.length && r.add("sender_ids", _), "boolean" == typeof y && r.add("with_sorted_meta_array", y), a.get(t, r, i);\n          }\n        });\n      } }, { key: "translateUserMessage", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.messageId,\n            l = e.translationTargetLanguages;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES_MESSAGEID_TRANSLATION.replace("%s", encodeURIComponent(s)).replace("%s", u) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES_MESSAGEID_TRANSLATION.replace("%s", encodeURIComponent(s)).replace("%s", u),\n                r = new H({ target_langs: l });a.post(t, r, i);\n          }\n        });\n      } }, { key: "deleteMessage", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.isOpenChannel,\n            o = e.messageId;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = s ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES_MESSAGEID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(o)) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES_MESSAGEID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(o));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "muteUser", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.userId,\n            u = e.description,\n            l = e.seconds,\n            c = e.isGroupChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = c ? b.Path.GROUPCHANNELS_CHANNELURL_MUTE.replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_MUTE.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: o });l && (0 < l || -1 !== l) && r.add("seconds", l), u && r.add("description", u), a.post(t, r, i);\n          }\n        });\n      } }, { key: "unmuteUser", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.userId,\n            o = e.isGroupChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = o ? b.Path.GROUPCHANNELS_CHANNELURL_MUTE_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_MUTE_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "banUser", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.userId,\n            u = e.description,\n            l = e.seconds,\n            c = e.isGroupChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = c ? b.Path.GROUPCHANNELS_CHANNELURL_BAN.replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_BAN.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: o });u && r.add("description", u), r.add("seconds", String(l)), a.post(t, r, i);\n          }\n        });\n      } }, { key: "unbanUser", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.userId,\n            o = e.isGroupChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = o ? b.Path.GROUPCHANNELS_CHANNELURL_BAN_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_BAN_USERID.replace("%s", encodeURIComponent(a)).replace("%s", encodeURIComponent(s));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "getMetaCounters", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.keys;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)),\n                r = new H({ keys: u });a.get(t, r, i);\n          }\n        });\n      } }, { key: "createMetaCounters", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.metaCounter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)),\n                r = new H({ metacounter: u });a.post(t, r, i);\n          }\n        });\n      } }, { key: "updateMetaCounters", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.metaCounter,\n            l = e.upsert,\n            c = e.mode;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(s)),\n                r = new H({ metacounter: u, upsert: l, mode: c });a.put(t, r, i);\n          }\n        });\n      } }, { key: "deleteMetaCounter", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.isOpenChannel,\n            o = e.key;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = s ? b.Path.OPENCHANNELS_CHANNELURL_METACOUNTER_KEY.replace("%s", encodeURIComponent(a)).replace("%s", o) : b.Path.GROUPCHANNELS_CHANNELURL_METACOUNTER_KEY.replace("%s", encodeURIComponent(a)).replace("%s", o);i.delete(t, null, r);\n          }\n        });\n      } }, { key: "deleteAllMetaCounters", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.isOpenChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = s ? b.Path.OPENCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(a)) : b.Path.GROUPCHANNELS_CHANNELURL_METACOUNTER.replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "getMetaData", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.keys;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)),\n                r = new H({ keys: u });a.get(t, r, i);\n          }\n        });\n      } }, { key: "createMetaData", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.metaData;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)),\n                r = new H({ metadata: u });a.post(t, r, i);\n          }\n        });\n      } }, { key: "updateMetaData", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.metaData,\n            l = e.upsert;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(s)),\n                r = new H({ metadata: u, upsert: l });a.put(t, r, i);\n          }\n        });\n      } }, { key: "deleteMetaData", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.isOpenChannel,\n            o = e.key;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = s ? b.Path.OPENCHANNELS_CHANNELURL_METADATA_KEY.replace("%s", encodeURIComponent(a)).replace("%s", o) : b.Path.GROUPCHANNELS_CHANNELURL_METADATA_KEY.replace("%s", encodeURIComponent(a)).replace("%s", o);i.delete(t, null, r);\n          }\n        });\n      } }, { key: "deleteAllMetaData", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl,\n            s = e.isOpenChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = s ? b.Path.OPENCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(a)) : b.Path.GROUPCHANNELS_CHANNELURL_METADATA.replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "loadOperatorList", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.token,\n            l = e.limit;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.OPENCHANNELS_OPERATORS.replace("%s", encodeURIComponent(s)) : b.Path.GROUPCHANNELS_OPERATORS.replace("%s", encodeURIComponent(s)),\n                r = new H({ token: u, limit: l });a.get(t, r, i);\n          }\n        });\n      } }, { key: "getOpenChannel", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.OPENCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(a));i.get(t, null, r);\n          }\n        });\n      } }, { key: "loadOpenChannelList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.nameKeyword,\n            l = e.urlKeyword,\n            c = e.customTypes;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.OPENCHANNELS,\n                r = new H({ token: s, limit: o });u && r.add("name_contains", u), l && r.add("url_contains", l), c && 0 < c.length && r.add("custom_types", c), a.get(t, r, i);\n          }\n        });\n      } }, { key: "loadParticipantList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.OPENCHANNELS_CHANNELURL_PARTICIPANTS.replace("%s", encodeURIComponent(u)),\n                r = new H({ token: s, limit: o });a.get(t, r, i);\n          }\n        });\n      } }, { key: "createOpenChannel", value: function value(e, i) {\n        var a = this,\n            s = e.name,\n            o = e.coverUrlOrImage,\n            u = e.data,\n            l = e.operatorUserIds,\n            c = e.customType;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.OPENCHANNELS,\n                r = new H();"string" == typeof o && r.add("cover_url", o), te.isFile(o) && r.add("cover_file", o), null !== s && "string" == typeof s && r.add("name", s), u && r.add("data", u), l && (Array.isArray(l) ? r.add("operators", l) : r.add("operators", [l])), c && r.add("custom_type", c), a.post(t, r, i);\n          }\n        });\n      } }, { key: "updateOpenChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.name,\n            u = e.coverUrlOrImage,\n            l = e.data,\n            c = e.operatorUserIds,\n            d = e.customType;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.OPENCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(s)),\n                r = new H();"string" == typeof u && r.add("cover_url", u), te.isFile(u) && r.add("cover_file", u, u.name), null !== o && "string" == typeof o && r.add("name", o), null !== l && "string" == typeof l && r.add("data", l), null !== c && (Array.isArray(c) ? r.add("operators", c) : r.add("operators", [c])), null !== d && "string" == typeof d && r.add("custom_type", d), a.put(t, r, i);\n          }\n        });\n      } }, { key: "deleteOpenChannel", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.OPENCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "getGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.showMember,\n            u = e.showReadReceipt;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(s)),\n                r = new H({ show_member: o, show_read_receipt: u });a.get(t, r, i);\n          }\n        });\n      } }, { key: "loadGroupChannelList", value: function value(e, i) {\n        var a = this,\n            s = e.token,\n            o = e.limit,\n            u = e.includeEmpty,\n            l = e.order,\n            c = e.userIdsFilter,\n            d = e.nicknameContainsFilter,\n            h = e.channelNameContainsFilter,\n            p = e.channelUrlsFilter,\n            f = e.customTypesFilter,\n            _ = e.customTypeStartsWithFilter,\n            y = e.memberStateFilter,\n            g = e.superChannelFilter,\n            m = e.publicChannelFilter,\n            C = e.unreadChannelFilter,\n            v = e.metadataOrderKeyFilter,\n            E = e.hiddenChannelFilter,\n            U = e.searchFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.MYGROUPCHANNELS.replace("%s", encodeURIComponent(a.sb.currentUser.userId)),\n                r = new H({ token: s, limit: o, order: l, show_member: !0, show_read_receipt: !0, show_empty: String(u), member_state_filter: y });f && 0 < f.length && r.add("custom_types", f), d && r.add("members_nickname_contains", d), h && r.add("name_contains", h), U.hasOwnProperty("search_query") && U.hasOwnProperty("search_fields") && (r.add("search_query", U.search_query), r.add("search_fields", U.search_fields)), c.userIds && 0 < c.userIds.length && (c.includeMode ? (r.add("members_include_in", c.userIds), r.add("query_type", c.queryType.toUpperCase())) : r.add("members_exactly_in", c.userIds)), p && 0 < p.length && r.add("channel_urls", p), r.add("super_mode", g), r.add("public_mode", m), r.add("unread_filter", C), v && r.add("metadata_order_key", v), _ && r.add("custom_type_startswith", _), E && r.add("hidden_mode", E), a.get(t, r, i);\n          }\n        });\n      } }, { key: "loadPublicGroupChannelList", value: function value(e, a) {\n        var s = this,\n            o = e.token,\n            u = e.limit,\n            l = e.includeEmpty,\n            c = e.order,\n            d = e.channelNameContainsFilter,\n            h = e.channelUrlsFilter,\n            p = e.customTypesFilter,\n            f = e.customTypeStartsWithFilter,\n            _ = e.superChannelFilter,\n            y = e.membershipFilter,\n            g = e.metadataOrderKeyFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) a(e, null);else {\n            var t = s.cls.GroupChannel,\n                r = b.Path.GROUPCHANNELS,\n                i = new H({ token: o, limit: u, order: c, show_member: !0, show_read_receipt: !0, show_empty: String(l), public_mode: t.PublicChannelFilter.PUBLIC, public_membership_mode: y });p && 0 < p.length && i.add("custom_types", p), d && i.add("name_contains", d), h && 0 < h.length && i.add("channel_urls", h), i.add("super_mode", _), g && i.add("metadata_order_key", g), f && i.add("custom_type_startswith", f), s.get(r, i, a);\n          }\n        });\n      } }, { key: "createGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.isDistinct,\n            o = e.isSuper,\n            u = e.isPublic,\n            l = e.channelUrl,\n            c = e.isDiscoverable,\n            d = e.isStrict,\n            h = e.name,\n            p = e.data,\n            f = e.customType,\n            _ = e.coverUrl,\n            y = e.coverImage,\n            g = e.accessCode,\n            m = e.isEphemeral,\n            n = e._invitedUserIds,\n            C = void 0 === n ? [] : n,\n            v = e.operatorUserIds;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS,\n                r = new H({ user_ids: [n.userId].concat(E(C)).filter(function (e, n, t) {\n                return n === t.indexOf(e);\n              }) });null !== _ && "string" == typeof _ && r.add("cover_url", _), te.isFile(y) && r.add("cover_file", y, y.name), null !== l && r.add("channel_url", l), null !== s && r.add("is_distinct", s), null !== o && r.add("is_super", o), null !== u && r.add("is_public", u), null !== c && r.add("is_discoverable", c), null !== d && r.add("strict", d), null !== m && r.add("is_ephemeral", m), g && r.add("access_code", g), null !== h && "string" == typeof h && r.add("name", h), p && r.add("data", p), f && r.add("custom_type", f), Array.isArray(v) && 0 < v.length && r.add("operator_ids", v), a.post(t, r, i);\n          }\n        });\n      } }, { key: "updateGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.isDistinct,\n            o = e.isPublic,\n            u = e.channelUrl,\n            l = e.isDiscoverable,\n            c = e.name,\n            d = e.data,\n            h = e.customType,\n            p = e.coverUrl,\n            f = e.coverImage,\n            _ = e.accessCode;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(u)),\n                r = new H();null !== s && r.add("is_distinct", s), null !== o && r.add("is_public", o), null !== l && r.add("is_discoverable", l), null !== _ && r.add("access_code", _), null !== p && "string" == typeof p && r.add("cover_url", p), te.isFile(f) && r.add("cover_file", f, f.name), null !== c && "string" == typeof c && r.add("name", c), null !== d && "string" == typeof d && r.add("data", d), null !== h && "string" == typeof h && r.add("custom_type", h), a.put(t, r, i);\n          }\n        });\n      } }, { key: "inviteToGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.userIds;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_INVITE.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_ids: o });a.post(t, r, i);\n          }\n        });\n      } }, { key: "acceptInvitation", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.accessCode;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_ACCEPT_INVITATION.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: a.sb.currentUser.userId });o && r.add("access_code", o), a.put(t, r, i);\n          }\n        });\n      } }, { key: "declineInvitation", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_DECLINE_INVITATION.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: a.sb.currentUser.userId });a.put(t, r, i);\n          }\n        });\n      } }, { key: "joinGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.accessCode;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_JOIN.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: a.sb.currentUser.userId });o && r.add("access_code", o), a.put(t, r, i);\n          }\n        });\n      } }, { key: "leaveGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_LEAVE.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: a.sb.currentUser.userId });a.put(t, r, i);\n          }\n        });\n      } }, { key: "hideGroupChannel", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.hidePreviousMessages,\n            u = e.allowAutoUnhide;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_HIDE.replace("%s", encodeURIComponent(s)),\n                r = new H({ user_id: a.sb.currentUser.userId, hide_previous_messages: o, allow_auto_unhide: u });a.put(t, r, i);\n          }\n        });\n      } }, { key: "unhideGroupChannel", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL_HIDE.replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "freeze", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isGroupChannel,\n            u = e.freezing;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = o ? b.Path.GROUPCHANNELS_CHANNELURL_FREEZE.replace("%s", encodeURIComponent(s)) : b.Path.OPENCHANNELS_CHANNELURL_FREEZE.replace("%s", encodeURIComponent(s)),\n                r = new H({ freeze: u });a.put(t, r, i);\n          }\n        });\n      } }, { key: "deleteGroupChannel", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.GROUPCHANNELS_CHANNELURL.replace("%s", encodeURIComponent(a));i.delete(t, null, r);\n          }\n        });\n      } }, { key: "loadMemberList", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.token,\n            u = e.limit,\n            l = e.mutedMemberFilter,\n            c = e.order,\n            d = e.memberStateFilter,\n            h = e.nicknameStartsWithFilter;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.GROUPCHANNELS_MEMBERS.replace("%s", encodeURIComponent(s)),\n                r = new H({ token: o, limit: u, order: c.toLowerCase(), muted_member_filter: l.toLowerCase(), member_state_filter: d });h && r.add("nickname_startswith", h), a.get(t, r, i);\n          }\n        });\n      } }, { key: "report", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.reportCategory,\n            l = e.reportingUserId,\n            c = e.reportDescription;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.REPORT_CHANNELS.replace("%s", encodeURIComponent(o ? "open_channels" : "group_channels")).replace("%s", encodeURIComponent(s)),\n                r = new H({ report_category: u });null != l && r.add("reporting_user_id", l), null != c && r.add("report_description", c), a.post(t, r, i);\n          }\n        });\n      } }, { key: "reportUser", value: function value(e, i) {\n        var a = this,\n            s = e.offendingUserId,\n            o = e.channelUrl,\n            u = e.isOpenChannel,\n            l = e.reportCategory,\n            c = e.reportingUserId,\n            d = e.reportDescription;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.REPORT_USERS.replace("%s", encodeURIComponent(s)),\n                r = new H({ channel_url: o, channel_type: u ? "open_channels" : "group_channels", report_category: l });null != c && r.add("reporting_user_id", c), null != d && r.add("report_description", d), a.post(t, r, i);\n          }\n        });\n      } }, { key: "reportMessage", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.isOpenChannel,\n            u = e.messageId,\n            l = e.reportCategory,\n            c = e.reportingUserId,\n            d = e.reportDescription,\n            h = e.offendingUserId;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.REPORT_MESSAGES.replace("%s", encodeURIComponent(o ? "open_channels" : "group_channels")).replace("%s", encodeURIComponent(s)).replace("%s", encodeURIComponent(u)),\n                r = new H({ report_category: l, offending_user_id: h });null != c && r.add("reporting_user_id", c), null != d && r.add("report_description", d), a.post(t, r, i);\n          }\n        });\n      } }, { key: "sendUserMessage", value: function value(e, a) {\n        var s = this,\n            o = e.channelUrl,\n            u = e.isOpenChannel,\n            l = e.message,\n            c = e.data,\n            d = e.customType,\n            h = e.translationTargetLanguages,\n            p = e.metaArrays,\n            f = e.mentionType,\n            _ = e.mentionedUserIds,\n            y = e.pushNotificationDeliveryOption;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) a(e, null);else {\n            var t = s.cls.FileMessageParams,\n                r = u ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES.replace("%s", encodeURIComponent(o)) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES.replace("%s", encodeURIComponent(o)),\n                i = new H({ message_type: "MESG", user_id: s.sb.currentUser.userId, message: l, mention_type: f, mentioned_user_ids: [] });null != c && i.add("data", c), null != d && i.add("custom_type", d), h && i.add("translation_target_langs", h), p && 0 < p.length && i.add("sorted_metaarray", p.map(function (e) {\n              return e.encode();\n            })), f === s.cls.BaseMessageParams.MentionType.CHANNEL ? i.add("mentioned_user_ids", []) : Array.isArray(_) && 0 < _.length && i.add("mentioned_user_ids", _), y && y !== t.PushNotificationDeliveryOption.DEFAULT && i.add("push_option", y), s.post(r, i, a);\n          }\n        });\n      } }, { key: "sendFileMessage", value: function value(e, a) {\n        var s = this,\n            o = e.channelUrl,\n            u = e.isOpenChannel,\n            l = e.fileUrl,\n            c = e.fileName,\n            d = e.fileSize,\n            h = e.fileType,\n            p = e.data,\n            f = e.customType,\n            _ = e.thumbnailSizes,\n            y = e.requireAuth,\n            g = e.metaArrays,\n            m = e.mentionType,\n            C = e.mentionedUserIds,\n            v = e.pushNotificationDeliveryOption;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) a(e, null);else {\n            var t = s.cls.FileMessageParams,\n                r = u ? b.Path.OPENCHANNELS_CHANNELURL_MESSAGES.replace("%s", encodeURIComponent(o)) : b.Path.GROUPCHANNELS_CHANNELURL_MESSAGES.replace("%s", encodeURIComponent(o)),\n                i = new H({ message_type: "FILE", user_id: s.sb.currentUser.userId, url: l, mention_type: m, mentioned_user_ids: [] });null != c && i.add("file_name", c), null != d && i.add("file_size", d), null != h && i.add("file_type", h), null != p && i.add("custom_field", p), null != f && i.add("custom_type", f), _ && i.add("thumbnails", _), y && i.add("require_auth", y), g && 0 < g.length && i.add("sorted_metaarray", g.map(function (e) {\n              return e.encode();\n            })), m === s.cls.BaseMessageParams.MentionType.CHANNEL ? i.add("mentioned_user_ids", []) : Array.isArray(C) && 0 < C.length && i.add("mentioned_user_ids", C), v && v !== t.PushNotificationDeliveryOption.DEFAULT && i.add("push_option", v), s.post(r, i, a);\n          }\n        });\n      } }, { key: "uploadFile", value: function value(e, a) {\n        var s = this,\n            o = e.file,\n            u = e.fileType,\n            l = e.thumbnailSizes,\n            c = e.channelUrl,\n            d = e.progressHandler,\n            h = e.reqId;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) a(e, null);else {\n            var t = b.Path.STORAGE_FILE,\n                r = new H();if (u && "undefined" != typeof Blob && (te.isFile(o) || "string" == typeof o || Array.isArray(o) || o.hasOwnProperty("isRNFetchBlobPolyfill")) ? r.add("file", new Blob([o], { type: u }), o.name) : r.add("file", o, o.name), c && "string" == typeof c && r.add("channel_url", c), l) for (var i = 0; i < l.length; i++) {\n              r.add("thumbnail" + (i + 1), l[i].maxWidth + "," + l[i].maxHeight);\n            }r.upload.reqId = h, r.upload.deleteRequest = function () {\n              var e = s.cls.FileMessageQueue;e.uploadRequest[h] && delete e.uploadRequest[h];\n            }, r.upload.progressHandler = function (e) {\n              d && "function" == typeof d && d(e, h);\n            }, s.post(t, r, a);\n          }\n        });\n      } }, { key: "registerScheduledUserMessage", value: function value(e, i) {\n        var a = this,\n            s = e.groupChannelParams,\n            o = e.channelUrl,\n            u = e.isOpenChannel;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = u ? b.Path.OPENCHANNELS_CHANNELURL_SCHEDULED_MESSAGES.replace("%s", encodeURIComponent(o)) : b.Path.GROUPCHANNELS_CHANNELURL_SCHEDULED_MESSAGES.replace("%s", encodeURIComponent(o)),\n                r = new H({ scheduled_dt: s._getScheduleString(), user_id: a.sb.currentUser.userId, message: s.message, data: s.data });s.customType && r.add("custom_type", s.customType), s.metaArrayKeys && 0 < Object.keys(s.metaArrayKeys).length && r.add("metaarray", s.metaArrayKeys), s.mentionType && r.add("mention_type", s._mentionType), s._mentionType === a.cls.BaseMessageParams.MentionType.CHANNEL ? r.add("mentioned_user_ids", []) : Array.isArray(s._mentionedUserIds) && 0 < s._mentionedUserIds.length && r.add("mentioned_user_ids", s._mentionedUserIds), s.translationTargetLanguages && 0 < s.translationTargetLanguages.length && r.add("translation_target_langs", s.translationTargetLanguages), s.pushNotificationDeliveryOption && s.pushNotificationDeliveryOption !== a.cls.BaseMessageParams.PushNotificationDeliveryOption.DEFAULT && r.add("push_option", s.pushNotificationDeliveryOption), a.post(t, r, i);\n          }\n        });\n      } }, { key: "getMyPushTriggerOption", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE_CHANNELURL.replace("%s", encodeURIComponent(i.sb.currentUser.userId)).replace("%s", encodeURIComponent(a));i.get(t, null, r);\n          }\n        });\n      } }, { key: "setMyPushTriggerOption", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.pushTriggerOption,\n            u = e.enable;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_USERID_PUSHPREFERENCE_CHANNELURL.replace("%s", encodeURIComponent(a.sb.currentUser.userId)).replace("%s", encodeURIComponent(s)),\n                r = new H();o && r.add("push_trigger_option", o), "boolean" == typeof u && r.add("enable", u), a.put(t, r, i);\n          }\n        });\n      } }, { key: "setMyCountPreference", value: function value(e, i) {\n        var a = this,\n            s = e.channelUrl,\n            o = e.countPreference;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) i(e, null);else {\n            var t = b.Path.USERS_COUNT_PREFERENCE.replace("%s", encodeURIComponent(a.sb.currentUser.userId)).replace("%s", encodeURIComponent(s)),\n                r = new H({ count_preference: o });a.put(t, r, i);\n          }\n        });\n      } }, { key: "resetMyHistory", value: function value(e, r) {\n        var i = this,\n            a = e.channelUrl;this.sb.ConnectionManager.ready(function (e, n) {\n          if (e) r(e, null);else {\n            var t = b.Path.GROUPCHANNELS_RESET_USER_HISTORY.replace("%s", encodeURIComponent(a));i.put(t, null, r);\n          }\n        });\n      } }], [{ key: "Path", get: function get() {\n        return { USERS: "/users", USERS_USERID: "/users/%s", USERS_USERID_LOGIN: "/users/%s/login", USERS_USERID_METADATA: "/users/%s/metadata", USERS_USERID_METADATA_KEY: "/users/%s/metadata/%s", USERS_USERID_MARKASREADALL: "/users/%s/mark_as_read_all", USERS_USERID_MY_GROUP_CHANNEL_CHANGELOGS: "/users/%s/my_group_channels/changelogs", USERS_USERID_UNREAD_ITEM_COUNT: "/users/%s/unread_item_count", USERS_USERID_UNREAD_MESSAGE_COUNT: "/users/%s/unread_message_count", USERS_USERID_UNREAD_CHANNEL_COUNT: "/users/%s/unread_channel_count", USERS_USERID_PUSH_GCM_TOKEN: "/users/%s/push/gcm/%s", USERS_USERID_PUSH_GCM: "/users/%s/push/gcm", USERS_USERID_PUSH_DEVICE_TOKENS: "/users/%s/push/%s/device_tokens", USERS_USERID_PUSHPREFERENCE_CHANNELURL: "/users/%s/push_preference/%s", USERS_USERID_PUSHPREFERENCE: "/users/%s/push_preference/", USERS_USERID_PUSH_TEMPLATE: "/users/%s/push/template", USERS_USERID_BLOCK: "/users/%s/block", USERS_USERID_BLOCK_TARGETID: "/users/%s/block/%s", USERS_USERID_PUSH_APNS_TOKEN: "/users/%s/push/apns/%s", USERS_USERID_PUSH_APNS: "/users/%s/push/apns", USERS_USERID_PUSH: "/users/%s/push", USERS_USERID_GROUP_CHANNEL_INVITATION_PREFERENCE: "/users/%s/channel_invitation_preference", USERS_USERID_GROUP_CHANNEL_COUNT: "/users/%s/group_channel_count", USERS_COUNT_PREFERENCE: "/users/%s/count_preference/%s", OPENCHANNELS: "/open_channels", OPENCHANNELS_CHANNELURL: "/open_channels/%s", OPENCHANNELS_CHANNELURL_MESSAGES: "/open_channels/%s/messages", OPENCHANNELS_CHANNELURL_MESSAGES_MESSAGEID: "/open_channels/%s/messages/%s", OPENCHANNELS_CHANNELURL_MESSAGES_MESSAGEID_TRANSLATION: "/open_channels/%s/messages/%s/translation", OPENCHANNELS_CHANNELURL_SCHEDULED_MESSAGES: "/open_channels/%s/scheduled_messages", OPENCHANNELS_CHANNELURL_PARTICIPANTS: "/open_channels/%s/participants", OPENCHANNELS_CHANNELURL_METADATA: "/open_channels/%s/metadata", OPENCHANNELS_CHANNELURL_METADATA_KEY: "/open_channels/%s/metadata/%s", OPENCHANNELS_CHANNELURL_METACOUNTER: "/open_channels/%s/metacounter", OPENCHANNELS_CHANNELURL_METACOUNTER_KEY: "/open_channels/%s/metacounter/%s", OPENCHANNELS_CHANNELURL_BAN: "/open_channels/%s/ban", OPENCHANNELS_CHANNELURL_BAN_USERID: "/open_channels/%s/ban/%s", OPENCHANNELS_CHANNELURL_MUTE: "/open_channels/%s/mute", OPENCHANNELS_CHANNELURL_MUTE_USERID: "/open_channels/%s/mute/%s", OPENCHANNELS_CHANNELURL_FREEZE: "/open_channels/%s/freeze", GROUPCHANNELS: "/group_channels", MYGROUPCHANNELS: "/users/%s/my_group_channels", GROUPCHANNELS_CHANNELURL: "/group_channels/%s", GROUPCHANNELS_CHANNELURL_INVITE: "/group_channels/%s/invite", GROUPCHANNELS_CHANNELURL_ACCEPT_INVITATION: "/group_channels/%s/accept", GROUPCHANNELS_CHANNELURL_DECLINE_INVITATION: "/group_channels/%s/decline", GROUPCHANNELS_CHANNELURL_HIDE: "/group_channels/%s/hide", GROUPCHANNELS_CHANNELURL_LEAVE: "/group_channels/%s/leave", GROUPCHANNELS_CHANNELURL_JOIN: "/group_channels/%s/join", GROUPCHANNELS_CHANNELURL_MESSAGES: "/group_channels/%s/messages", GROUPCHANNELS_CHANNELURL_MESSAGES_MARKASREAD: "/group_channels/%s/messages/mark_as_read", GROUPCHANNELS_CHANNELURL_MESSAGES_TOTALCOUNT: "/group_channels/%s/messages/total_count", GROUPCHANNELS_CHANNELURL_MESSAGES_UNREADCOUNT: "/group_channels/%s/messages/unread_count", GROUPCHANNELS_CHANNELURL_MESSAGES_MESSAGEID: "/group_channels/%s/messages/%s", GROUPCHANNELS_CHANNELURL_MESSAGES_MESSAGEID_TRANSLATION: "/group_channels/%s/messages/%s/translation", GROUPCHANNELS_CHANNELURL_SCHEDULED_MESSAGES: "/group_channels/%s/scheduled_messages", GROUPCHANNELS_CHANNELURL_MEMBERS: "/group_channels/%s/members", GROUPCHANNELS_CHANNELURL_METADATA: "/group_channels/%s/metadata", GROUPCHANNELS_CHANNELURL_METADATA_KEY: "/group_channels/%s/metadata/%s", GROUPCHANNELS_CHANNELURL_METACOUNTER: "/group_channels/%s/metacounter", GROUPCHANNELS_CHANNELURL_METACOUNTER_KEY: "/group_channels/%s/metacounter/%s", GROUPCHANNELS_RESET_USER_HISTORY: "/group_channels/%s/reset_user_history", GROUPCHANNELS_MEMBERS: "/group_channels/%s/members", GROUPCHANNELS_CHANNELURL_BAN: "/group_channels/%s/ban", GROUPCHANNELS_CHANNELURL_BAN_USERID: "/group_channels/%s/ban/%s", GROUPCHANNELS_CHANNELURL_MUTE: "/group_channels/%s/mute", GROUPCHANNELS_CHANNELURL_MUTE_USERID: "/group_channels/%s/mute/%s", GROUPCHANNELS_CHANNELURL_FREEZE: "/group_channels/%s/freeze", STORAGE_FILE: "/storage/file", STORAGE_PROFILE: "/storage/profile_image", OPENCHANNELS_CHANNELURL_MESSAGES_CHANGELOGS: "/open_channels/%s/messages/changelogs", GROUPCHANNELS_CHANNELURL_MESSAGES_CHANGELOGS: "/group_channels/%s/messages/changelogs", FRIENDS: "/users/%s/friends", FRIENDS_CHANGE_LOGS: "/users/%s/friends/changelogs", FRIENDS_DISCOVERIES: "/users/%s/friend_discoveries", GROUPCHANNELS_OPERATORS: "/group_channels/%s/operators", OPENCHANNELS_OPERATORS: "/open_channels/%s/operators", REPORT_USERS: "/report/users/%s", REPORT_CHANNELS: "/report/%s/%s", REPORT_MESSAGES: "/report/%s/%s/messages/%s" };\n      } }]), b;\n  }(),\n      q = function () {\n    function t(e, n) {\n      _(this, t), this.sb = e, this.ws = null, this.wsHost = null, this.WebSocket = null, this.handler = n || new t.ConnectionHandler(), this.explicitDisconnect = !1, this.lastActiveMillis = 0;try {\n        this.WebSocket = "undefined" == typeof WebSocket ? r : WebSocket;\n      } catch (e) {\n        this.WebSocket = WebSocket;\n      }\n    }return s(t, [{ key: "connect", value: function value(e, n, t) {\n        var i = this;ne.debug("WSClient connect called");var r = $.get(this.sb._iid).container,\n            a = r.pinger,\n            s = r.auth;this.wsHost = t;try {\n          var o = "/?p=JS&pv=" + encodeURIComponent(f.OS_VERSION) + "&sv=" + encodeURIComponent(f.SDK_VERSION) + "&ai=" + encodeURIComponent(this.sb.getApplicationId());if (s.sessionKey ? o += "&key=" + encodeURIComponent(s.sessionKey) : o += "&user_id=" + encodeURIComponent(e) + "&access_token=" + encodeURIComponent(n), o += "&active=1", o += "&Request-Sent-Timestamp=" + new Date().getTime().toString(), this.ws = new this.WebSocket(this.wsHost + o), !this.ws) return this.sb.isReconnectingOnError = !0, void this.handler.onError("ws does not exist.");\n        } catch (e) {\n          return this.sb.isReconnectingOnError = !0, void this.handler.onError(e);\n        }try {\n          this.sb.getDebugMode() && "undefined" != typeof window && (window.ws = this.ws);\n        } catch (e) {\n          ne.debug("window object does not exist.");\n        }var u = !1;this.ws.onopen = function (e) {\n          ne.debug("WSClient onopen called"), i.handler.onOpen(e);\n        }, this.ws.onmessage = function (e) {\n          i.active();var n = e.data.split("\\n");for (var t in n) {\n            var r = n[t];if (r && "string" == typeof r) {\n              try {\n                if ("PONG" === r.substring(0, 4)) {\n                  a.pong();continue;\n                }\n              } catch (e) {\n                ne.debug("ws.onmessage-command check error: ", e);\n              }i.handler.onMessage(r);\n            }\n          }\n        }, this.ws.onerror = function (e) {\n          ne.debug("WSClient ws.onerror called: ", e), a && a.stop(), u = !0, i.sb.isReconnectingOnError = !0, i.handler.onError(e);\n        }, this.ws.onclose = function (e) {\n          ne.debug("WSClient ws.onclose called - e, explicitDisconnect: ", e, i.explicitDisconnect), a && a.stop(), i.explicitDisconnect ? i.handler.onClose(e) : u || i.handler.onError(e), i.explicitDisconnect = !1;\n        };\n      } }, { key: "disconnect", value: function value(e, n) {\n        ne.debug("WSClient disconnect called [explicit]: ", e);var t = $.get(this.sb._iid).container.pinger;t && t.stop(), this.explicitDisconnect = !0 === e, this.ws && (this.ws.onopen = function () {}, this.ws.onmessage = function () {}, this.ws.onclose = function () {\n          n && n();\n        }, this.ws.onerror = function () {}, this.ws.close(), this.ws = null), this.explicitDisconnect ? this.handler.onClose() : this.handler.onError(), this.explicitDisconnect = !1;\n      } }, { key: "send", value: function value(e, n) {\n        1 !== this.ws.readyState ? n && n(new ee("Connection is not valid. Please reconnect.", ee.WEBSOCKET_CONNECTION_CLOSED), null) : (this.ws.send(e.encode()), n && n(null, null));\n      } }, { key: "active", value: function value() {\n        this.lastActiveMillis = new Date().getTime();\n      } }, { key: "getConnectionState", value: function value() {\n        try {\n          return 1 === this.ws.readyState ? this.sb.ConnectionState.OPEN : 0 === this.ws.readyState ? this.sb.ConnectionState.CONNECTING : this.sb.ConnectionState.CLOSED;\n        } catch (e) {\n          return this.sb.ConnectionState.CLOSED;\n        }\n      } }]), t;\n  }();q.ConnectionHandler = function () {\n    return function e() {\n      _(this, e), this.onReady = function () {}, this.onOpen = function () {}, this.onClose = function () {}, this.onMessage = function () {}, this.onError = function () {};\n    };\n  }();var B = function () {\n    function n(e) {\n      _(this, n), this.sb = e, this.cls = L.get(this.sb._iid), this.ws = new q(this.sb), this.reconnectParams = { interval: 3, retryCount: 3, multiplier: 2, maxInterval: 24 }, this.reconnectCount = 0, this.reconnectDelay = 0;\n    }return s(n, [{ key: "connect", value: function value(t, r) {\n        var i = this,\n            e = $.get(this.sb._iid).container,\n            n = e.auth,\n            a = e.apiClient,\n            s = e.commandHandler,\n            o = this.cls.GroupChannel,\n            u = new q.ConnectionHandler();this.ws = new q(this.sb, u), u.onMessage = function (e) {\n          s.onRawCommandReceived(e);\n        }, this.sb.loginHandler = function (e, n) {\n          if (i.sb.connecting = !1, e) i.disconnect({ clearSession: !0, err: e }, null);else {\n            clearInterval(i.sb.globalTimer);var t = function t() {\n              if (o.cachedChannels) for (var e in o.cachedChannels) {\n                var n = o.cachedChannels[e];if (n.invalidateTypingStatus()) for (var t in i.sb.channelHandlers) {\n                  i.sb.channelHandlers[t].onTypingStatusUpdated(n);\n                }\n              }\n            };t(), i.sb.globalTimer = setInterval(function () {\n              return t();\n            }, 1e3), i.flushConnectionCallbacks(null, n), i.sb.connecting = !1, i.sb.reconnecting = !1, i.sb.ConnectionManager.processAllReadyHandler(null);\n          }\n        }, u.onOpen = function () {\n          i.sb.loginTimer = setTimeout(function () {\n            i.sb.loginTimer = null, i.sb.onLoginTimerCancel = null, i.flushConnectionCallbacks(new ee("Connection timeout.", ee.LOGIN_TIMEOUT), null), i.sb.disconnect(null);\n          }, f.COMMAND_ACK_TIMEOUT), i.sb.onLoginTimerCancel = function () {\n            i.flushConnectionCallbacks(new ee("Connection has been canceled.", ee.REQUEST_FAILED), null);\n          }, i.sb.connecting = !1;\n        }, u.onError = function (e) {\n          ne.debug("WebSocketClient.ConnectionHandler.onError", e), n.sessionKey ? (i.sb.isReconnectingOnError = !0, i.sb.ConnectionManager.errorAllReadyHandler(), i.reconnect(t, !0)) : i.flushConnectionCallbacks(new ee("Websocket connection failed.", ee.WEBSOCKET_CONNECTION_FAILED), null), i.sb.connecting = !1;\n        }, u.onClose = function () {\n          ne.debug("WebSocketClient.ConnectionHandler.onClose"), i.sb.connecting = !1;\n        }, a.checkRouting(function (e, n) {\n          if (e) return i.sb.connecting = !1, void i.flushConnectionCallbacks(new ee("Connection routing failed.", ee.REQUEST_FAILED), null);a.get("/", null, function () {}), i.ws.connect(t, r, n.wsHost);\n        });\n      } }, { key: "reconnect", value: function value(t, e) {\n        var i = this,\n            n = !(1 < arguments.length && void 0 !== e) || e,\n            r = $.get(this.sb._iid).container,\n            a = r.auth,\n            s = r.apiClient,\n            o = r.commandHandler,\n            u = this.cls.OpenChannel;if (this.sb.reconnecting = !0, this.sb.reconnectTimer) ne.debug("still reconnecting");else {\n          if (this.reconnectCount += 1, this.reconnectCount <= 1) {\n            if (n) for (var l in this.sb.connectionHandlers) {\n              this.sb.connectionHandlers[l].onReconnectStarted();\n            }this.reconnectDelay = 0;\n          } else this.reconnectDelay = Math.min(1e3 * this.reconnectParams.interval * Math.pow(this.reconnectParams.multiplier, this.reconnectCount - 2), 0 < this.reconnectParams.maxInterval ? 1e3 * this.reconnectParams.maxInterval : Number.MAX_SAFE_INTEGER);if (!t || !a.sessionKey || 0 < this.reconnectParams.retryCount && this.reconnectCount > this.reconnectParams.retryCount) {\n            for (var c in this.disconnect({ clearSession: !1, err: new ee("Websocket connection failed.", ee.WEBSOCKET_CONNECTION_FAILED) }, null), this.reconnectCount = 0, this.sb.connectionHandlers) {\n              this.sb.connectionHandlers[c].onReconnectFailed();\n            }return this.sb.connecting = !1, this.sb.reconnecting = !1, this.sb.isReconnectingOnError = !1, void this.sb.ConnectionManager.errorAllReadyHandler();\n          }this.sb.onReconnectTimerCancel = function () {\n            i.reconnectCount = 0;\n          }, this.sb.reconnectTimer = setTimeout(function () {\n            i.sb.reconnectTimer = null, i.sb.onReconnectTimerCancel = null, i.ws && i.ws.disconnect(!0);var e = new q.ConnectionHandler();i.ws = new q(i.sb, e), i.sb.loginHandler = function () {\n              for (var e in i.reconnectCount = 0, i.sb.connecting = !1, i.sb.reconnecting = !1, i.sb.isReconnectingOnError = !1, i.sb.connectionHandlers) {\n                i.sb.connectionHandlers[e].onReconnectSucceeded();\n              }if (i.sb.ConnectionManager.processAllReadyHandler(null), i.sb.isReconnectingOnError) for (var n in i.sb.ConnectionManager.networkHandlers) {\n                i.sb.ConnectionManager.networkHandlers[n].onReconnected();\n              }Object.keys(u.enteredChannels).forEach(function (r) {\n                u.enteredChannels[r].enter(function (e, n) {\n                  if (e) {\n                    var t = i.cls.FileMessageQueue;delete u.enteredChannels[r], t.delete(r);\n                  }\n                });\n              });\n            }, e.onOpen = function () {\n              ne.debug("reconnect onOpen"), i.sb.loginTimer = setTimeout(function () {\n                ne.debug("reconnect loginTimer timeout"), i.sb.loginTimer = null, i.reconnect(t, !0);\n              }, f.COMMAND_ACK_TIMEOUT), i.sb.onLoginTimerCancel = null, i.sb.reconnecting = !1;\n            }, e.onMessage = function (e) {\n              o.onRawCommandReceived(e);\n            }, e.onError = function (e) {\n              ne.debug("reconnect onError", e), i.sb.isReconnectingOnError = !0, i.sb.ConnectionManager.errorAllReadyHandler(), i.reconnect(t, !0);\n            }, e.onClose = function () {\n              ne.debug("reconnect onClose"), i.sb.reconnecting = !1;\n            }, s.checkRouting(function (e, n) {\n              e ? i.reconnect(t, !0) : (i.sb.getCurrentApiHost() !== n.apiHost && s.get("/", null, function () {}), i.ws.connect(t, null, n.wsHost));\n            });\n          }, this.reconnectDelay);\n        }\n      } }, { key: "disconnect", value: function value(e, n) {\n        var t = $.get(this.sb._iid),\n            r = t.container.ackStateMap,\n            i = this.cls,\n            a = i.GroupChannel,\n            s = i.OpenChannel,\n            o = e.clearSession,\n            u = e.err;if (this.sb.loginTimer && (clearTimeout(this.sb.loginTimer), this.sb.onLoginTimerCancel && (this.sb.onLoginTimerCancel(), this.sb.onLoginTimerCancel = null), this.sb.loginTimer = null), this.sb.reconnectTimer && (clearTimeout(this.sb.reconnectTimer), this.sb.onReconnectTimerCancel && (this.sb.onReconnectTimerCancel(), this.sb.onReconnectTimerCancel = null), this.sb.reconnectTimer = null), this.ws && (this.reconnectCount = 0, this.ws.disconnect(!0), this.ws = null), o) {\n          for (var l in s.clearEnteredChannels(), s.clearCache(), a.clearCache(), this.sb.globalTimer && (clearInterval(this.sb.globalTimer), this.sb.globalTimer = null), r) {\n            clearTimeout(r[l].timer);\n          }this.sb.currentUser = null, t.set("ackStateMap", {}), t.set("subscribedUnreadMessageCount", { all: 0, custom_types: {}, ts: 0 }), t.set("auth", new R());\n        }u && (this.flushConnectionCallbacks(u, null), this.sb.connecting = !1, this.sb.reconnecting = !1, this.sb.isReconnectingOnError = !1), n && n(null, null);\n      } }, { key: "flushConnectionCallbacks", value: function value(n, t) {\n        var e = this.sb.connectionCallbacks;this.sb.connectionCallbacks = [], e.forEach(function (e) {\n          return e(n, t);\n        });\n      } }]), n;\n  }(),\n      Q = function () {\n    function f(e) {\n      var n = e.type,\n          t = e.nullable,\n          r = void 0 !== t && t,\n          i = e.optional,\n          a = void 0 !== i && i,\n          s = e.optionalIf,\n          o = void 0 === s ? null : s,\n          u = e.ignoreIf,\n          l = void 0 === u ? null : u,\n          c = e.defaultValue,\n          d = void 0 === c ? null : c,\n          h = e.constraint,\n          p = void 0 === h ? null : h;_(this, f), this.type = n, this.nullable = r, this.optional = a, this.optionalIf = o, this.ignoreIf = l, this.defaultValue = d, this.constraint = p;\n    }return s(f, [{ key: "isMatchingType", value: function value(t) {\n        function n(e, n) {\n          return "string" == typeof n ? Z(e) === n || "array" === n && Array.isArray(e) || "file" === n && te.isFile(e) || "null" === n && null === e || "date" === n && e instanceof Date : "function" == typeof n ? e instanceof n : "object" === Z(n) && -1 < Object.keys(n).map(function (e) {\n            return n[e];\n          }).indexOf(t);\n        }return n(t, this.type) || Array.isArray(this.type) && this.type.some(function (e) {\n          return n(t, e);\n        }) || this.nullable && null === t;\n      } }], [{ key: "parse", value: function value(e, n) {\n        for (e = f.toArray(e); void 0 === e[e.length - 1];) {\n          e.pop();\n        }var t = !1,\n            r = null;"callback" === n[n.length - 1].type && ("function" == typeof e[e.length - 1] && (r = e.pop()), n.pop(), t = !0);var i = [],\n            a = null,\n            s = 0;for (var o in n) {\n          var u = n[o];"function" == typeof u.ignoreIf && u.ignoreIf(e) ? i.push(u.hasOwnProperty("defaultValue") ? u.defaultValue : null) : u.isMatchingType(e[s]) ? (u.nullable && null === e[s] || !u.constraint || u.constraint(e[s]) || (a = f.error), i.push(e[s]), s++) : u.optional || "function" == typeof u.optionalIf && u.optionalIf(e) ? i.push(u.hasOwnProperty("defaultValue") ? u.defaultValue : null) : (a = f.error, i.push(e[s]), s++);\n        }return t && r && i.push(r), e.length !== s && (a = f.error), [a].concat(i);\n      } }, { key: "toArray", value: function value(e) {\n        for (var n = [], t = 0; t < e.length; t++) {\n          n.push(e[t]);\n        }return n;\n      } }, { key: "error", get: function get() {\n        return new ee("Invalid parameter.", ee.INVALID_PARAMETER);\n      } }]), f;\n  }(),\n      x = function () {\n    function n(e) {\n      _(this, n), this.sb = e, this.authCount = 0, this.readyHandlers = [], this.networkHandlers = {}, this.authenticateTimer = 1e4, this.authInfoRequester = null;\n    }return s(n, [{ key: "addReadyHandler", value: function value(e) {\n        e && "function" == typeof e && this.readyHandlers.push(e);\n      } }, { key: "ready", value: function value(e, n) {\n        var t = !(1 < arguments.length && void 0 !== n) || n,\n            r = $.get(this.sb._iid).container,\n            i = r.auth,\n            a = r.isInBackground;t && i.hasSession() ? e && (e(null, this.sb.currentUser), this.sb.getConnectionState() !== this.sb.ConnectionState.CLOSED || a || this.sb.reconnect()) : (this.addReadyHandler(e), this.sb.isReconnectingOnError ? this.errorAllReadyHandler() : this.sb.getConnectionState() === this.sb.ConnectionState.OPEN ? this.processAllReadyHandler(null) : this.sb.getConnectionState() === this.sb.ConnectionState.CONNECTING || this.errorAllReadyHandler());\n      } }, { key: "processAllReadyHandler", value: function value(n) {\n        var t = this;if (0 < this.readyHandlers.length) {\n          var e = this.readyHandlers;this.readyHandlers = [], e.forEach(function (e) {\n            e && "function" == typeof e && e(n, t.sb.currentUser);\n          });\n        }\n      } }, { key: "errorAllReadyHandler", value: function value() {\n        this.processAllReadyHandler(new ee("Connection should be made first.", ee.CONNECTION_REQUIRED));\n      } }, { key: "NetworkHandler", value: function value() {\n        this.onReconnected = function () {};\n      } }, { key: "addNetworkHandler", value: function value(e, n) {\n        this.networkHandlers[e] = n;\n      } }, { key: "removeNetworkHandler", value: function value(e) {\n        delete this.networkHandlers[e];\n      } }, { key: "removeAllNetworkHandler", value: function value() {\n        this.networkHandlers = {};\n      } }, { key: "authenticate", value: function value(t) {\n        var r = this;if (this.sb.getConnectionState() === this.sb.ConnectionState.OPEN || this.sb.reconnecting) this.sb.connecting = !1, t(null, this.sb.currentUser);else if (this.authInfoRequester && "function" == typeof this.authInfoRequester) {\n          this.sb.connecting = !0, this.authCount++;var i = setTimeout(function () {\n            i = null, r.authCount--, 0 === r.authCount && 0 === r.sb.connectionCallbacks.length && (r.sb.connecting = !1), r.errorAllReadyHandler(), t(new ee("Connection should be made first.", ee.CONNECTION_REQUIRED), null);\n          }, this.authenticateTimer);this.authInfoRequester(function (e) {\n            if (i) {\n              clearTimeout(i), i = null, r.authCount--;var n = function n(e, _n) {\n                r.sb.connecting = !1, t(e, null);\n              };e && e.hasOwnProperty("userId") ? e.accessToken ? e.apiHost && e.wsHost ? r.sb.connect(e.userId, e.accessToken, e.apiHost, e.wsHost, n) : r.sb.connect(e.userId, e.accessToken, n) : e.apiHost && e.wsHost ? r.sb.connect(e.userId, e.apiHost, e.wsHost, n) : r.sb.connect(e.userId, n) : t(Q.error, null);\n            }\n          });\n        } else t(Q.error, null);\n      } }]), n;\n  }(),\n      z = function () {\n    function n(e) {\n      _(this, n), this.sb = e;\n    }return s(n, [{ key: "onlineWorker", value: function value() {\n        try {\n          if ("undefined" != typeof navigator && navigator.onLine) {\n            var e = $.get(this.sb._iid).container.auth;this.sb.reconnecting || this.sb.connecting || !e.sessionKey || this.sb.getConnectionState() === this.sb.ConnectionState.OPEN || this.sb.reconnect();\n          }\n        } catch (e) {\n          ne.debug("There is no window.addEventListener.ononline or navigator.onLine");\n        }\n      } }, { key: "offlineWorker", value: function value() {\n        try {\n          if ("undefined" != typeof navigator && !navigator.onLine) {\n            var e = $.get(this.sb._iid).container,\n                n = e.auth,\n                t = e.pinger;this.sb.reconnecting || this.sb.connecting || !n.sessionKey || (t && t.stop(), this.sb.reconnect());\n          }\n        } catch (e) {\n          ne.debug("There is no window.addEventListener.ononline or navigator.onLine");\n        }\n      } }, { key: "start", value: function value() {\n        try {\n          "undefined" != typeof window && window.addEventListener && "ononline" in window && "onoffline" in window && "undefined" != typeof navigator && "boolean" == typeof navigator.onLine && (window.addEventListener("online", this.onlineWorker), window.addEventListener("offline", this.offlineWorker));\n        } catch (e) {\n          ne.debug("There is no window.addEventListener.ononline or navigator.onLine");\n        }\n      } }, { key: "stop", value: function value() {\n        try {\n          window.removeEventListener("online", this.onlineWorker, !1), window.removeEventListener("offline", this.offlineWorker, !1);\n        } catch (e) {\n          ne.debug("There is no window.addEventListener.ononline or navigator.onLine");\n        }\n      } }]), n;\n  }(),\n      j = new Date().getTime(),\n      Y = function () {\n    function i(e, n) {\n      var t = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;switch (_(this, i), this.command = e, this.requestId = t, arguments.length) {case 1:\n          if (!e || e.length <= 4) this.command = "NOOP", this.payload = "{}";else if (this.decode(e), this.isRequestIdCommand) {\n            var r = this.getJsonElement();r && (this.requestId = r.req_id || "");\n          }break;case 2:case 3:\n          !this.requestId && this.isRequestIdCommand && (this.requestId = i.generateRequestId()), n.req_id = this.requestId || "", this.payload = JSON.stringify(n);}\n    }return s(i, [{ key: "encode", value: function value() {\n        return this.command + this.payload + "\\n";\n      } }, { key: "decode", value: function value(e) {\n        e = e.trim(), this.command = e.substring(0, 4), this.payload = e.substring(4);\n      } }, { key: "getJsonElement", value: function value() {\n        return JSON.parse(this.payload);\n      } }, { key: "isRequestIdCommand", get: function get() {\n        return this.isAckRequired || "EROR" === this.command;\n      } }, { key: "isAckRequired", get: function get() {\n        return "MESG" === this.command || "FILE" === this.command || "ENTR" === this.command || "EXIT" === this.command || "READ" === this.command || "MEDI" === this.command || "FEDI" === this.command;\n      } }], [{ key: "bPing", value: function value() {\n        return new this("PING", { id: new Date().getTime(), active: 1 });\n      } }, { key: "bMessage", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.message,\n            r = e.data,\n            i = e.customType,\n            a = e.metaArrays,\n            s = e.mentionType,\n            o = e.mentionedUserIds,\n            u = e.translationTargetLanguages,\n            l = e.pushNotificationDeliveryOption,\n            c = e.requestId,\n            d = void 0 === c ? null : c,\n            h = L.get(this._iid),\n            p = h.UserMessageParams,\n            f = h.BaseMessageParams,\n            _ = {};return _.channel_url = n, _.message = t, _.data = r, a && 0 < a.length && (_.metaarray = a.map(function (e) {\n          return e.encode();\n        })), s && (_.mention_type = s), _.mentioned_user_ids = [], s === f.MentionType.CHANNEL ? _.mentioned_user_ids = [] : Array.isArray(o) && 0 < o.length && (_.mentioned_user_ids = o), i && (_.custom_type = i), u && 0 < u.length && (_.target_langs = u), l && l !== p.PushNotificationDeliveryOption.DEFAULT && (_.push_option = l), new this("MESG", _, d);\n      } }, { key: "bFile", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.url,\n            r = e.name,\n            i = e.type,\n            a = e.size,\n            s = e.data,\n            o = e.customType,\n            u = e.thumbnailSizes,\n            l = e.requireAuth,\n            c = e.metaArrays,\n            d = e.mentionType,\n            h = e.mentionedUserIds,\n            p = e.pushNotificationDeliveryOption,\n            f = e.requestId,\n            _ = void 0 === f ? null : f,\n            y = L.get(this._iid),\n            g = y.BaseMessageParams,\n            m = y.FileMessageParams,\n            C = {};return C.channel_url = n, C.url = t, C.name = r || "", C.type = i || "", C.size = a || 0, C.custom = s, o && (C.custom_type = o), u && (C.thumbnails = u), l && (C.require_auth = l), c && 0 < c.length && (C.metaarray = c.map(function (e) {\n          return e.encode();\n        })), d && (C.mention_type = d), C.mentioned_user_ids = [], d === g.MentionType.CHANNEL ? C.mentioned_user_ids = [] : Array.isArray(h) && 0 < h.length && (C.mentioned_user_ids = h), p && p !== m.PushNotificationDeliveryOption.DEFAULT && (C.push_option = p), new this("FILE", C, _);\n      } }, { key: "bUpdateUserMessage", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.messageId,\n            r = e.message,\n            i = void 0 === r ? null : r,\n            a = e.data,\n            s = void 0 === a ? null : a,\n            o = e.customType,\n            u = void 0 === o ? null : o,\n            l = e.mentionType,\n            c = void 0 === l ? null : l,\n            d = e.mentionedUserIds,\n            h = void 0 === d ? null : d,\n            p = e.metaArrayParams,\n            f = void 0 === p ? null : p,\n            _ = L.get(this._iid).BaseMessageParams,\n            y = {};return y.channel_url = n, y.msg_id = t, null != i && void 0 !== i && (y.message = i), null != s && void 0 !== s && (y.data = s), null != u && void 0 !== u && (y.custom_type = u), c && (y.mention_type = c), c === _.MentionType.CHANNEL ? y.mentioned_user_ids = [] : Array.isArray(h) && 0 < h.length && (y.mentioned_user_ids = h), f && (y.metaarray = f), new this("MEDI", y);\n      } }, { key: "bUpdateFileMessage", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.messageId,\n            r = e.data,\n            i = void 0 === r ? null : r,\n            a = e.customType,\n            s = void 0 === a ? null : a,\n            o = e.mentionType,\n            u = void 0 === o ? null : o,\n            l = e.mentionedUserIds,\n            c = void 0 === l ? null : l,\n            d = e.metaArrayParams,\n            h = void 0 === d ? null : d,\n            p = L.get(this._iid).BaseMessageParams,\n            f = {};return f.channel_url = n, f.msg_id = t, null != i && void 0 !== i && (f.data = i), null != s && void 0 !== s && (f.custom_type = s), u && (f.mention_type = u), u === p.MentionType.CHANNEL ? f.mentioned_user_ids = [] : Array.isArray(c) && 0 < c.length && (f.mentioned_user_ids = c), h && (f.metaarray = h), new this("FEDI", f);\n      } }, { key: "bRead", value: function value(e) {\n        var n = e.channelUrl,\n            t = {};return t.channel_url = n, new this("READ", t);\n      } }, { key: "bTypeStart", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.time,\n            r = {};return r.channel_url = n, r.time = t, new this("TPST", r);\n      } }, { key: "bTypeEnd", value: function value(e) {\n        var n = e.channelUrl,\n            t = e.time,\n            r = {};return r.channel_url = n, r.time = t, new this("TPEN", r);\n      } }, { key: "bEnter", value: function value(e) {\n        var n = e.channelUrl,\n            t = {};return t.channel_url = n, new this("ENTR", t);\n      } }, { key: "bExit", value: function value(e) {\n        var n = e.channelUrl,\n            t = {};return t.channel_url = n, new this("EXIT", t);\n      } }, { key: "generateRequestId", value: function value() {\n        return String(++j);\n      } }]), i;\n  }();function K(t, e, r) {\n    return void 0 === r ? new ae(function (t, r) {\n      e(function (e, n) {\n        return e ? r(e) : t(n);\n      });\n    }) : e(function (e, n) {\n      r && ($.get(t).container.isErrorFirstInCallback ? r(e, n) : r(n, e));\n    });\n  }var V = function () {\n    function e() {\n      _(this, e);\n    }return s(e, null, [{ key: "serialize", value: function value(e, n) {\n        var t = 1 < arguments.length && void 0 !== n ? n : null,\n            r = JSON.parse(JSON.stringify(e));return t && t(r), function n(t) {\n          return Object.keys(t).forEach(function (e) {\n            t[e] && "object" === Z(t[e]) && n(t[e]);\n          }), Object.freeze(t);\n        }(r);\n      } }, { key: "deserialize", value: function value(e, n) {\n        var t = 1 < arguments.length && void 0 !== n ? n : null,\n            r = JSON.parse(JSON.stringify(e));return t && t(r), r;\n      } }]), e;\n  }(),\n      W = function () {\n    function n(e) {\n      _(this, n), this.messageId = 0, this.messageType = n.MESSAGE_TYPE_BASE, this.channelUrl = "", this.data = null, this.customType = null, this.createdAt = 0, this.updatedAt = 0, this.channelType = null, this.metaArrays = [], this.mentionType = null, this.mentionedUsers = [], e && this.__update(e);\n    }return s(n, [{ key: "serialize", value: function value() {\n        return V.serialize(this, function (e) {\n          e.hasOwnProperty("_sender") && (e.sender = e._sender, delete e._sender);\n        });\n      } }, { key: "isIdentical", value: function value(e) {\n        return !("object" !== Z(e) || !e.hasOwnProperty("messageId")) && (0 !== this.messageId && 0 !== e.messageId ? this.messageId === e.messageId : this.reqId === e.reqId);\n      } }, { key: "isEqual", value: function value(e) {\n        return te.deepEqual(this, e);\n      } }, { key: "isOpenChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this.channelType === e.CHANNEL_TYPE_OPEN;\n      } }, { key: "isGroupChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this.channelType === e.CHANNEL_TYPE_GROUP;\n      } }, { key: "isUserMessage", value: function value() {\n        return this.messageType === n.MESSAGE_TYPE_USER;\n      } }, { key: "isAdminMessage", value: function value() {\n        return this.messageType === n.MESSAGE_TYPE_ADMIN;\n      } }, { key: "isFileMessage", value: function value() {\n        return this.messageType === n.MESSAGE_TYPE_FILE;\n      } }, { key: "__update", value: function value(e) {\n        var t = this,\n            n = L.get(this._iid),\n            r = n.User,\n            i = n.BaseChannel,\n            a = n.BaseMessageParams,\n            s = n.MessageMetaArray;e.hasOwnProperty("msg_id") && (this.messageId = parseInt(e.msg_id)), e.hasOwnProperty("message_id") && (this.messageId = parseInt(e.message_id)), this.channelUrl = e.hasOwnProperty("channel_url") ? String(e.channel_url) : "", this.data = e.hasOwnProperty("data") ? String(e.data) : "", this.customType = e.hasOwnProperty("custom_type") ? String(e.custom_type) : "", this.createdAt = e.hasOwnProperty("ts") ? parseInt(e.ts) : 0, e.hasOwnProperty("created_at") && (this.createdAt = parseInt(e.created_at)), this.updatedAt = e.hasOwnProperty("updated_at") ? parseInt(e.updated_at) : 0, this.channelType = e.hasOwnProperty("channel_type") ? String(e.channel_type) : i.CHANNEL_TYPE_GROUP;var o = e.hasOwnProperty("metaarray") ? e.metaarray : {},\n            u = e.hasOwnProperty("metaarray_key_order") ? e.metaarray_key_order : Object.keys(o).sort(function (e, n) {\n          return e.localeCompare(n);\n        });this.metaArrays = [];for (var l = 0; l < u.length; l++) {\n          var c = u[l];this.metaArrays.push(new s(c, o[c] || []));\n        }this.mentionType = e.hasOwnProperty("mention_type") ? e.mention_type : a.MentionType.USERS, this.mentionedUsers = [], e.hasOwnProperty("mentioned_users") && e.mentioned_users.forEach(function (e) {\n          var n = new r(e);t.mentionedUsers.push(n);\n        });\n      } }, { key: "getMetaArraysByKeys", value: function value(n) {\n        return Array.isArray(n) ? this.metaArrays.filter(function (e) {\n          return -1 < n.indexOf(e.key);\n        }) : [];\n      } }, { key: "getMetaArrayByKeys", value: function value(e) {\n        var n = {};return this.getMetaArraysByKeys(e).forEach(function (e) {\n          n[e.key] = e.value;\n        }), n;\n      } }, { key: "metaArray", get: function get() {\n        var n = {};return this.metaArrays.forEach(function (e) {\n          n[e.key] = e.value;\n        }), n;\n      }, set: function set(e) {\n        if ("object" === Z(e) && e) {\n          var n = L.get(this._iid).MessageMetaArray,\n              t = [];for (var r in e) {\n            t.push(new n(r, e[r]));\n          }this.metaArrays = t;\n        }\n      } }], [{ key: "MESSAGE_TYPE_BASE", get: function get() {\n        return "base";\n      } }, { key: "MESSAGE_TYPE_ADMIN", get: function get() {\n        return "admin";\n      } }, { key: "MESSAGE_TYPE_USER", get: function get() {\n        return "user";\n      } }, { key: "MESSAGE_TYPE_FILE", get: function get() {\n        return "file";\n      } }, { key: "MessageRequestState", get: function get() {\n        return { NONE: "none", PENDING: "pending", FAILED: "failed", SUCCEEDED: "succeeded" };\n      } }]), n;\n  }(),\n      J = 0,\n      X = 1,\n      re = 2,\n      ie = function () {\n    function u(e) {\n      var n = this;_(this, u), this.state = J, this._value = null, this._reason = null;e(function (e) {\n        n.state === J && (n.state = X, n._value = e);\n      }, function (e) {\n        n.state === J && (n.state = re, n._reason = e);\n      });\n    }return s(u, [{ key: "then", value: function value(e, n) {\n        var t = this,\n            r = this;switch (this.state) {case J:\n            setTimeout(function () {\n              return t.then(e, n);\n            }, 100);break;case X:\n            e && "function" == typeof e && (r = e(this._value));break;case re:\n            n && "function" == typeof n && (r = n(this._reason));}return r instanceof u ? r : this;\n      } }, { key: "catch", value: function value(e) {\n        var n = this,\n            t = this;switch (this.state) {case J:\n            setTimeout(function () {\n              return n.catch(e);\n            }, 100);break;case X:\n            break;case re:\n            t = e(this._reason);}return t instanceof u ? t : this;\n      } }, { key: "finally", value: function value(e) {\n        var n = this,\n            t = this;switch (this.state) {case J:\n            setTimeout(function () {\n              return n.finally(e);\n            }, 100);break;case X:case re:\n            t = e();}return t instanceof u ? t : this;\n      } }, { key: "length", get: function get() {\n        return 1;\n      } }], [{ key: "all", value: function value(o) {\n        return new u(function (a, s) {\n          Array.isArray(o) || "string" == typeof o ? function () {\n            var e = [];for (var n in o) {\n              o[n] instanceof Promise ? e.push(o[n]) : e.push(u.resolve(o[n]));\n            }var t = e.length;function r(e, n) {\n              --t <= 0 ? a(n) : e && s(e);\n            }for (var i in e) {\n              e[i].then(function (e) {\n                r(null, e);\n              }).catch(function (e) {\n                t++, r(e, null);\n              });\n            }\n          }() : s(new Error("Uncaught (in promise) TypeError: ".concat(Z(o), " ").concat(o, " is not iterable")));\n        });\n      } }, { key: "resolve", value: function value(t) {\n        return new u(function (e, n) {\n          e(t);\n        });\n      } }, { key: "reject", value: function value(t) {\n        return new u(function (e, n) {\n          n(t);\n        });\n      } }]), u;\n  }(),\n      ae = function () {\n    try {\n      return "undefined" != typeof navigator && "string" == typeof navigator.userAgent && -1 < navigator.userAgent.indexOf("Trident/7");\n    } catch (e) {\n      return !1;\n    }\n  }() || m() || C() || v() ? ie : Promise,\n      se = function () {\n    function n(e) {\n      _(this, n), this.nickname = "", this.profileUrl = "", this.userId = "", this.connectionStatus = "", this.lastSeenAt = null, this.metaData = {}, this.isActive = !0, this.friendDiscoveryKey = null, this.friendName = null, this._preferredLanguages = null, e && this.__update(e);\n    }return s(n, [{ key: "__update", value: function value(e) {\n        e.hasOwnProperty("guest_id") && (this.userId = String(e.guest_id)), e.hasOwnProperty("user_id") && (this.userId = String(e.user_id)), e.hasOwnProperty("name") && (this.nickname = String(e.name)), e.hasOwnProperty("nickname") && (this.nickname = String(e.nickname)), e.hasOwnProperty("image") && (this.profileUrl = String(e.image)), e.hasOwnProperty("profile_url") && (this.profileUrl = String(e.profile_url)), e.hasOwnProperty("is_online") ? e.is_online === n.NON_AVAILABLE ? this.connectionStatus = n.NON_AVAILABLE : this.connectionStatus = e.is_online ? n.ONLINE : n.OFFLINE : this.connectionStatus = n.NON_AVAILABLE, e.hasOwnProperty("last_seen_at") ? this.lastSeenAt = parseInt(e.last_seen_at) : this.lastSeenAt = 0, e.hasOwnProperty("metadata") ? this.metaData = e.metadata : this.metaData = {}, e.hasOwnProperty("is_active") ? this.isActive = void 0 === e.is_active || e.is_active : this.isActive = !0, e.hasOwnProperty("friend_discovery_key") ? this.friendDiscoveryKey = e.friend_discovery_key : this.friendDiscoveryKey = null, e.hasOwnProperty("friend_name") ? this.friendName = e.friend_name : this.friendName = null, e.hasOwnProperty("preferred_languages") ? this._preferredLanguages = e.preferred_languages : this._preferredLanguages = null;\n      } }, { key: "_updateMetaData", value: function value(e, n) {\n        var t = 1 < arguments.length && void 0 !== n && n,\n            r = L.get(this._iid).GroupChannel;for (var i in e) {\n          t ? delete this.metaData[i] : this.metaData[i] = e[i];\n        }for (var a in r.cachedChannels) {\n          if (r.cachedChannels.hasOwnProperty(a)) {\n            var s = r.cachedChannels[a];if (s.memberMap.hasOwnProperty(this.userId)) s.memberMap[this.userId].metaData = this.metaData;\n          }\n        }\n      } }, { key: "serialize", value: function value() {\n        return V.serialize(this, function (e) {\n          e.hasOwnProperty("_preferredLanguages") && (e.preferredLanguages = e._preferredLanguages, delete e._preferredLanguages);\n        });\n      } }, { key: "getOriginalProfileUrl", value: function value() {\n        var e = "";if ((-1 < (e = (e = -1 < this.profileUrl.indexOf("://") ? this.profileUrl.split("/")[2] : this.profileUrl.split("/")[0]).split("?")[0]).indexOf("sendbird.com") || -1 < e.indexOf("intoz.com")) && -1 < this.profileUrl.indexOf(e + "/profile_images/")) {\n          var n = this.profileUrl.replace("profile_images/", "");return n === this.profileUrl ? "" : n;\n        }return "";\n      } }, { key: "createMetaData", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(e) {\n            return 0 < Object.keys(e).length && !Array.isArray(e);\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.createUserMetaData({ metaData: e }, function (e, n) {\n            e || i._updateMetaData(n), t(e, n);\n          });\n        }, n);\n      } }, { key: "updateMetaData", value: function value(e, n, t) {\n        var r,\n            i = this,\n            a = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 4);return r = a[0], e = a[1], n = a[2], t = a[3], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.updateUserMetaData({ metaData: e, upsert: n }, function (e, n) {\n            e || i._updateMetaData(n), t(e, n);\n          });\n        }, t);\n      } }, { key: "deleteMetaData", value: function value(e, n) {\n        var i,\n            a = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return i = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          if (i) t(i, null);else {\n            var r = {};r[e] = "", $.get(a._iid).container.apiClient.deleteUserMetaData({ metaDataKey: e }, function (e, n) {\n              e || a._updateMetaData(r, !0), t(e, n);\n            });\n          }\n        }, n);\n      } }, { key: "deleteAllMetaData", value: function value(e) {\n        var i = this;return K(this._iid, function (t) {\n          var r = i.metaData;$.get(i._iid).container.apiClient.deleteAllUserMetaData({}, function (e, n) {\n            e || i._updateMetaData(r, !0), t(e, n);\n          });\n        }, e);\n      } }, { key: "preferredLanguages", get: function get() {\n        return this._preferredLanguages;\n      } }], [{ key: "build", value: function value(e, n, t, r, i, a, s, o, u, l) {\n        return { user_id: e, nickname: n, profile_url: t, is_online: r, last_seen_at: i, metadata: a, is_active: s, friend_discovery_key: o, friend_name: u, preferred_languages: l };\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid).User,\n            t = V.deserialize(e);return new n(n.build.apply(n, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName", "preferredLanguages"].map(function (e) {\n          return t[e];\n        }))));\n      } }, { key: "NON_AVAILABLE", get: function get() {\n        return "nonavailable";\n      } }, { key: "ONLINE", get: function get() {\n        return "online";\n      } }, { key: "OFFLINE", get: function get() {\n        return "offline";\n      } }]), n;\n  }(),\n      oe = { TIMESTAMP: "timestamp", MESSAGE_ID: "messageId" },\n      ue = function () {\n    function n(e) {\n      _(this, n), this.url = "", this.channelType = n.CHANNEL_TYPE_BASE, this.name = "", this.coverUrl = "", this.createdAt = 0, this.data = null, this.customType = null, this.isFrozen = !1, this.isEphemeral = !1, e && (this.__update(e), e.__wk && (this.__wk = e.__wk));\n    }return s(n, [{ key: "__update", value: function value(e) {\n        this.url = e.hasOwnProperty("channel_url") ? String(e.channel_url) : "", this.name = e.hasOwnProperty("name") ? String(e.name) : "", this.coverUrl = e.hasOwnProperty("cover_url") ? String(e.cover_url) : "", this.createdAt = e.hasOwnProperty("created_at") ? 1e3 * e.created_at : 0, this.data = e.hasOwnProperty("data") ? String(e.data) : "", this.customType = e.hasOwnProperty("custom_type") ? e.custom_type : "", this.isFrozen = !!e.hasOwnProperty("freeze") && e.freeze, this.isEphemeral = !!e.hasOwnProperty("is_ephemeral") && e.is_ephemeral;\n      } }, { key: "_getMessageList", value: function value(e, n, t, r, a, s, o, u, l, c, d, i) {\n        var h,\n            p = this,\n            f = g(Q.parse(arguments, [new Q({ type: "object" }), new Q({ type: "number" }), new Q({ type: oe }), new Q({ type: "boolean" }), new Q({ type: "number" }), new Q({ type: "number" }), new Q({ type: "boolean" }), new Q({ type: "string", nullable: !0, constraint: function constraint(e) {\n            return -1 < ["", "MESG", "FILE", "ADMM"].indexOf(e);\n          } }), new Q({ type: "string" }), new Q({ type: "array", optional: !0, defaultValue: [], constraint: function constraint(e) {\n            return e.reduce(function (e, n) {\n              return e && "string" == typeof n;\n            }, !0);\n          } }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 13);return h = f[0], e = f[1], n = f[2], t = f[3], r = f[4], a = f[5], s = f[6], o = f[7], u = f[8], l = f[9], c = f[10], d = f[11], i = f[12], K(this._iid, function (i) {\n          h ? i(h, null) : $.get(p._iid).container.apiClient.getMessageList({ channel: e, token: n, tokenType: t, isInclusive: r, prevResultSize: a, nextResultSize: s, shouldReverse: o, messageType: u, customType: l, senderUserIds: c, includeMetaArray: d }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(p._iid).BaseChannel;t = n.messages.map(function (e) {\n                return r.buildMessage(e, p);\n              }).filter(function (e) {\n                return null !== e;\n              });\n            }i(e, t);\n          });\n        }, i);\n      } }, { key: "isGroupChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this.channelType === e.CHANNEL_TYPE_GROUP;\n      } }, { key: "isOpenChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this.channelType === e.CHANNEL_TYPE_OPEN;\n      } }, { key: "createOperatorListQuery", value: function value() {\n        return new (L.get(this._iid).OperatorListQuery)(this);\n      } }, { key: "createMessageListQuery", value: function value() {\n        return new (L.get(this._iid).MessageListQuery)(this);\n      } }, { key: "createPreviousMessageListQuery", value: function value() {\n        return new (L.get(this._iid).PreviousMessageListQuery)(this);\n      } }, { key: "serialize", value: function value() {\n        return V.serialize(this, function (e) {\n          if (null !== e.lastMessage && "object" === Z(e.lastMessage)) {\n            var n = e.lastMessage;n.hasOwnProperty("_sender") && (n.sender = n._sender, delete n._sender, e.lastMessage = n);\n          }e.hasOwnProperty("_messageOffsetTimestamp") && (e.messageOffsetTimestamp = e._messageOffsetTimestamp, delete e._messageOffsetTimestamp);\n        });\n      } }, { key: "getMessageChangeLogsByTimestamp", value: function value(e, n, t) {\n        var r,\n            a = this,\n            i = g(Q.parse(arguments, [new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e;\n          } }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 4);return r = i[0], e = i[1], n = i[2], t = i[3], K(this._iid, function (i) {\n          r ? i(r, null) : $.get(a._iid).container.apiClient.getMessageChangeLogs({ channelUrl: a.url, ts: e, token: null, isOpenChannel: a.isOpenChannel(), includeMetaArray: n }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).BaseChannel;t = { updatedMessages: n.updated.map(function (e) {\n                  return r.buildMessage(e, a);\n                }), deletedMessageIds: n.deleted.map(function (e) {\n                  return e.message_id;\n                }), hasMore: n.has_more, token: n.next };\n            }i(e, t);\n          });\n        }, t);\n      } }, { key: "getMessageChangeLogsByToken", value: function value(e, n, t) {\n        var r,\n            a = this,\n            i = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0 }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 4);return r = i[0], e = i[1], n = i[2], t = i[3], K(this._iid, function (i) {\n          r ? i(r, null) : $.get(a._iid).container.apiClient.getMessageChangeLogs({ channelUrl: a.url, ts: null, token: e, isOpenChannel: a.isOpenChannel(), includeMetaArray: n }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).BaseChannel;t = { updatedMessages: n.updated.map(function (e) {\n                  return r.buildMessage(e, a);\n                }), deletedMessageIds: n.deleted.map(function (e) {\n                  return e.message_id;\n                }), hasMore: n.has_more, token: n.next };\n            }i(e, t);\n          });\n        }, t);\n      } }, { key: "getMyMutedInfo", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getMyMutedInfo({ channelUrl: n.url, userId: dn.getInstance(n._iid).currentUser.userId, isGroupChannel: n.isGroupChannel() }, function (e, n) {\n            var t = null;e || (t = { isMuted: n.is_muted, startAt: n.start_at, endAt: n.end_at, remainingDuration: n.remaining_duration, description: n.description }), r(e, t);\n          });\n        }, e);\n      } }, { key: "getPreviousMessagesByTimestamp", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.TIMESTAMP, n, t, 0, r, i, a, s, o, u);\n      } }, { key: "getNextMessagesByTimestamp", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.TIMESTAMP, n, 0, t, r, i, a, s, o, u);\n      } }, { key: "getPreviousAndNextMessagesByTimestamp", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.TIMESTAMP, !0, n, t, r, i, a, s, o, u);\n      } }, { key: "getPreviousMessagesByID", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.MESSAGE_ID, n, t, 0, r, i, a, s, o, u);\n      } }, { key: "getNextMessagesByID", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.MESSAGE_ID, n, 0, t, r, i, a, s, o, u);\n      } }, { key: "getPreviousAndNextMessagesByID", value: function value(e, n, t, r, i, a, s, o, u) {\n        return this._getMessageList(this, e, oe.MESSAGE_ID, !0, n, t, r, i, a, s, o, u);\n      } }, { key: "_sendUserMessage", value: function value(e) {\n        var r = this,\n            n = e.message,\n            t = e.data,\n            i = e.customType,\n            a = e.metaArrays,\n            s = e.mentionType,\n            o = e.mentionedUserIds,\n            u = e.translationTargetLanguages,\n            l = e.pushNotificationDeliveryOption,\n            c = e.reqId,\n            d = e.callback,\n            h = L.get(this._iid),\n            p = h.Command,\n            f = h.GroupChannel,\n            _ = h.UserMessage;c = c || p.generateRequestId();var y = dn.getInstance(this._iid),\n            g = _.build(c, 0, y.currentUser, this, n, t, i, u, !1, new Date().getTime(), 0, a, s, null, o),\n            m = new _(g);if (m.requestState = y.MessageRequestState.PENDING, m.requestedMentionUserIds = o, !y.currentUser) {\n          var C = new _(g);return C.requestState = y.MessageRequestState.FAILED, C.requestedMentionUserIds = o, d(new ee("Connection should be made first.", ee.CONNECTION_REQUIRED), C), m;\n        }var v = p.bMessage({ channelUrl: this.url, message: n, data: t, customType: i, metaArrays: a, mentionType: s, mentionedUserIds: o, translationTargetLanguages: u, pushNotificationDeliveryOption: l, requestId: c });(m.reqId = v.requestId, this.isGroupChannel() && y.getConnectionState() !== y.ConnectionState.OPEN && y.currentUser && !y.connecting && !y.reconnecting && "string" == typeof i && 0 === i.indexOf("SB_VIDEOCHAT")) ? $.get(y._iid).container.apiClient.sendUserMessage({ channelUrl: this.url, isOpenChannel: this.isOpenChannel(), message: n, data: t, customType: i, translationTargetLanguages: u, metaArrays: a, mentionType: s, mentionedUserIds: o, pushNotificationDeliveryOption: l }, function (e, n) {\n          var t = null;e ? ((t = new _(g)).requestState = y.MessageRequestState.FAILED, t.requestedMentionUserIds = o) : (t = new _(n)).requestState = y.MessageRequestState.SUCCEEDED, d(e, t);\n        }) : y.sendCommand(v).then(function (e) {\n          var t = new _(e.getJsonElement()),\n              n = y.currentUser;n && t._sender && n.userId === t._sender.userId && (n.nickname !== t._sender.nickname && (n.nickname = t._sender.nickname), n.profileUrl !== t._sender.profileUrl && (n.profileUrl = t._sender.profileUrl), te.deepEqual(n.metaData, t._sender.metaData) || (n.metaData = t._sender.metaData)), r.isGroupChannel() ? f.getChannel(r.url).then(function (e) {\n            if (!te.isVideoChatSignalingMessage(t)) for (var n in e.lastMessage = t, y.channelHandlers) {\n              y.channelHandlers[n].onChannelChanged(e);\n            }t.requestState = y.MessageRequestState.SUCCEEDED, d(null, t);\n          }).catch(function (e) {\n            t.requestState = y.MessageRequestState.SUCCEEDED, d(e, t);\n          }) : (t.requestState = y.MessageRequestState.SUCCEEDED, d(null, t));\n        }).catch(function (e) {\n          var n = new _(g);n.reqId = v.requestId, n.requestState = y.MessageRequestState.FAILED, n.requestedMentionUserIds = o, d(new ee(e.message, e.code), n);\n        });return m;\n      } }, { key: "sendUserMessage", value: function value() {\n        var e = Q.toArray(arguments),\n            t = e.pop(),\n            n = null,\n            r = null,\n            i = L.get(this._iid),\n            a = i.UserMessageParams,\n            s = i.MessageMetaArray;if ("function" == typeof t) {\n          if (e[0] instanceof a) null === (r = e[0]).data && (r.data = ""), null === r.customType && (r.customType = "");else if ("string" == typeof e[0]) switch ((r = new a()).message = e[0], e.length) {case 1:\n              break;case 2:\n              r.data = e[1] || "";break;case 3:\n              r.data = e[1] || "", r.customType = e[2] || "";break;case 4:\n              r.data = e[1] || "", r.customType = e[2] || "", r.translationTargetLanguages = Array.isArray(e[3]) ? e[3] : [e[3]];break;default:\n              n = Q.error;} else n = Q.error;\n        } else n = Q.error;var o = $.get(this._iid).container.isErrorFirstInCallback;if (!n && r._validate() && r.message) {\n          for (var u = [], l = 0; l < r.metaArrayKeys.length; l++) {\n            var c = r.metaArrayKeys[l];u.push(new s(c, []));\n          }return this._sendUserMessage(y({}, r, { metaArrays: u, mentionType: r.mentionType, mentionedUserIds: r._mentionedUserIds, translationTargetLanguages: r._translationTargetLanguages, callback: function callback(e, n) {\n              o ? t(e, n) : t(n, e);\n            } }));\n        }return o ? t(Q.error, null) : t(null, Q.error), null;\n      } }, { key: "resendUserMessage", value: function value(t, e) {\n        var r,\n            i = this,\n            n = L.get(this._iid),\n            a = n.BaseMessage,\n            s = n.UserMessage,\n            o = n.UserMessageParams,\n            u = g(Q.parse(arguments, [new Q({ type: s, constraint: function constraint(e) {\n            return 0 === e.messageId && e.requestState === a.MessageRequestState.FAILED && e.reqId && e.channelUrl === i.url && "string" == typeof e.message && "string" == typeof e.data && "string" == typeof e.customType && Array.isArray(e.translations);\n          } }), new Q({ type: "callback" })]), 3);return r = u[0], t = u[1], e = u[2], K(this._iid, function (e) {\n          if (r) e(r, null);else {\n            var n = o.PushNotificationDeliveryOption.DEFAULT;i._sendUserMessage(y({}, t, { mentionedUserIds: t.requestedMentionUserIds, translationTargetLanguages: t.translations, pushNotificationDeliveryOption: n, reqId: t.reqId, callback: e }));\n          }\n        }, e);\n      } }, { key: "updateUserMessage", value: function value(n, e, t, r, i) {\n        var a = this,\n            s = L.get(this._iid),\n            o = s.Command,\n            u = s.UserMessage,\n            l = s.UserMessageParams,\n            c = arguments,\n            d = null,\n            h = null;if ("number" == typeof n) switch (c.length) {case 3:\n            var p = g(Q.parse(c, [new Q({ type: "number" }), new Q({ type: l }), new Q({ type: "callback" })]), 4);d = p[0], n = p[1], h = p[2], i = p[3];break;case 5:\n            h = new l();var f = g(Q.parse(c, [new Q({ type: "number" }), new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "callback" })]), 6);d = f[0], n = f[1], e = f[2], t = f[3], r = f[4], i = f[5], h.message = e, h.data = t, h.customType = r;}return K(this._iid, function (t) {\n          if (!d && h && h._validate()) {\n            var e = o.bUpdateUserMessage(y({ channelUrl: a.url, messageId: n }, h, { mentionType: h._mentionType, mentionedUserIds: h._mentionedUserIds }));dn.getInstance(a._iid).sendCommand(e).then(function (e) {\n              var n = new u(e.getJsonElement());t(null, n);\n            }).catch(function (e) {\n              t(e, null);\n            });\n          } else t(Q.error, null);\n        }, i);\n      } }, { key: "translateUserMessage", value: function value(e, n, t) {\n        var i,\n            a = this,\n            r = L.get(this._iid),\n            s = r.BaseMessage,\n            o = r.UserMessage,\n            u = g(Q.parse(arguments, [new Q({ type: o, constraint: function constraint(e) {\n            return e.channelUrl === a.url && e.requestState === s.MessageRequestState.SUCCEEDED;\n          } }), new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 4);return i = u[0], e = u[1], n = u[2], t = u[3], K(this._iid, function (r) {\n          i ? r(i, null) : $.get(a._iid).container.apiClient.translateUserMessage({ channelUrl: a.url, isOpenChannel: a.isOpenChannel(), messageId: e.messageId, translationTargetLanguages: n }, function (e, n) {\n            var t = null;e || (t = new o(n)), r(e, t);\n          });\n        }, t);\n      } }, { key: "_parseFileMessageArguments", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.BaseMessageParams,\n            r = n.FileMessageParams,\n            i = n.MessageMetaArray,\n            a = { error: null, file: null, name: null, type: null, size: null, data: "", customType: "", thumbnailSizes: [], metaArrays: [], mentionType: t.MentionType.USERS, mentionedUserIds: [], pushNotificationDeliveryOption: r.PushNotificationDeliveryOption.DEFAULT, progressHandler: null, callback: null };if ("function" == typeof e[e.length - 1] && (a.callback = e.pop()), "function" == typeof e[e.length - 1] && (a.progressHandler = e.pop()), e[0] instanceof r) {\n          if (a.file = e[0].file || e[0].fileUrl, a.name = e[0].fileName, a.type = e[0].mimeType, a.size = e[0].fileSize, a.data = e[0].data, a.customType = e[0].customType, a.thumbnailSizes = e[0].thumbnailSizes, Array.isArray(e[0].metaArrayKeys)) for (var s = 0; s < e[0].metaArrayKeys.length; s++) {\n            var o = e[0].metaArrayKeys[s];"string" == typeof o && a.metaArrays.push(new i(o, []));\n          }a.mentionType = e[0]._mentionType, a.mentionedUserIds = e[0]._mentionedUserIds, a.pushNotificationDeliveryOption = e[0].pushNotificationDeliveryOption ? e[0].pushNotificationDeliveryOption : r.PushNotificationDeliveryOption.DEFAULT, e[0]._validate() || (a.error = Q.error);\n        } else if (te.isFile(e[0]) || "string" == typeof e[0]) {\n          switch (a.file = e[0], e.length) {case 1:\n              break;case 2:\n              a.data = e[1];break;case 3:\n              a.data = e[1], a.customType = e[2];break;case 4:\n              a.data = e[1], a.customType = e[2], a.thumbnailSizes = e[3];break;case 5:\n              a.name = e[1], a.type = e[2], a.size = e[3], a.data = e[4];break;case 6:\n              a.name = e[1], a.type = e[2], a.size = e[3], a.data = e[4], a.customType = e[5];break;case 7:\n              a.name = e[1], a.type = e[2], a.size = e[3], a.data = e[4], a.customType = e[5], a.thumbnailSizes = e[6];}var u = g(Q.parse([a.file, a.name, a.type, a.size, a.data, a.customType, a.thumbnailSizes], [new Q({ type: ["file", "string"] }), new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "number", nullable: !0, constraint: function constraint(e) {\n              return 0 <= e;\n            } }), new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "array" })]), 8);a.error = u[0], a.file = u[1], a.name = u[2], a.type = u[3], a.size = u[4], a.data = u[5], a.customType = u[6], a.thumbnailSizes = u[7];\n        } else a.error = Q.error;return te.isFile(a.file) && (a.name = a.name || a.file.name, a.type = a.type || a.file.type, a.size = a.size || a.file.size), a;\n      } }, { key: "_createTempFileMessage", value: function value(e) {\n        try {\n          var n = dn.getInstance(this._iid),\n              t = L.get(this._iid),\n              r = t.Command,\n              i = t.BaseMessage,\n              a = t.FileMessage;return new a(a.build(r.generateRequestId(), 0, n.currentUser, this, "string" == typeof e.file ? e.file : "", e.name, e.type, e.size, e.data, e.customType, !1, new Date().getTime(), e.thumbnailSizes.map(function (e) {\n            return { url: "", width: e.maxWidth, height: e.maxHeight, real_width: 0, real_height: 0 };\n          }), e.requireAuth, null, e.metaArrays, e.mentionType, null, e.mentionedUserIds, i.MessageRequestState.PENDING));\n        } catch (e) {\n          return null;\n        }\n      } }, { key: "sendFileMessage", value: function value() {\n        var e = this._parseFileMessageArguments(Q.toArray(arguments)),\n            n = null,\n            t = L.get(this._iid).Command.generateRequestId();e.error || ((n = this._createTempFileMessage(e)).requestedMentionUserIds = e.mentionedUserIds, t = n.reqId);var r = dn.getInstance(this._iid);r && r.currentUser || (e.error = new ee("Connection should be made first.", ee.CONNECTION_REQUIRED));var i = L.get(this._iid).FileMessageQueue;return i.create(this).addJob(new i.Job({ fileInfo: e, pendingMessage: n, requestId: t, error: e.error, response: null })), n;\n      } }, { key: "sendFileMessages", value: function value(r, e) {\n        var n = this,\n            t = 1 < arguments.length && void 0 !== e ? e : {},\n            i = t.progress ? t.progress : function () {},\n            a = t.sent ? t.sent : function () {},\n            s = t.complete ? t.complete : function () {};if (Array.isArray(r) && 0 < r.length && r.length <= 20) {\n          var o = [];return r.forEach(function (e, t) {\n            o.push(n.sendFileMessage(e, i, function (e, n) {\n              a(e, n), t === r.length - 1 && s(null);\n            }));\n          }), o;\n        }return s(Q.error), null;\n      } }, { key: "resendFileMessage", value: function value(t, r, e) {\n        var i,\n            a = this,\n            n = L.get(this._iid),\n            s = n.BaseMessage,\n            o = n.FileMessage,\n            u = n.FileMessageParams,\n            l = g(Q.parse(arguments, [new Q({ type: o, constraint: function constraint(e) {\n            return e.requestState === s.MessageRequestState.FAILED && e.reqId && e.channelUrl === a.url && "string" == typeof e.data && "string" == typeof e.customType && Array.isArray(e.thumbnails);\n          } }), new Q({ type: "file", optionalIf: function optionalIf(e) {\n            return !!e[0].url;\n          }, defaultValue: null }), new Q({ type: "callback" })]), 4);return i = l[0], t = l[1], r = l[2], e = l[3], K(this._iid, function (e) {\n          if (i) e(i, null);else {\n            var n = new u();t.url ? n.fileUrl = t.url : n.file = r, n.fileName = t.name, n.fileSize = t.size, n.mimeType = t.type, n.data = t.data, n.customType = t.customType, n.mentionType = t.mentionType, n.mentionedUserIds = t.requestedMentionUserIds, n.metaArrayKeys = t.metaArrays.map(function (e) {\n              return e.key;\n            }), n.thumbnailSizes = t.thumbnails.map(function (e) {\n              return { maxWidth: e.width, maxHeight: e.height };\n            }), a.sendFileMessage(n, e);\n          }\n        }, e);\n      } }, { key: "updateFileMessage", value: function value(n, e, t, r) {\n        var i = this,\n            a = L.get(this._iid),\n            s = a.Command,\n            o = a.FileMessage,\n            u = a.FileMessageParams,\n            l = arguments,\n            c = null,\n            d = null;if ("number" == typeof n) switch (l.length) {case 3:\n            var h = g(Q.parse(l, [new Q({ type: "number" }), new Q({ type: u }), new Q({ type: "callback" })]), 4);c = h[0], n = h[1], d = h[2], r = h[3], d && (d._isUpdate = !0);break;case 4:\n            d = new u();var p = g(Q.parse(l, [new Q({ type: "number" }), new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "callback" })]), 5);c = p[0], n = p[1], e = p[2], t = p[3], r = p[4], d.data = e, d.customType = t, d._isUpdate = !0;}return K(this._iid, function (t) {\n          if (!c && d && d._validate()) {\n            var e = s.bUpdateFileMessage(y({ channelUrl: i.url, messageId: n }, d, { mentionType: d._mentionType, mentionedUserIds: d._mentionedUserIds }));dn.getInstance(i._iid).sendCommand(e).then(function (e) {\n              var n = new o(e.getJsonElement());t(null, n);\n            }).catch(function (e) {\n              t(e, null);\n            });\n          } else t(Q.error, null);\n        }, r);\n      } }, { key: "cancelUploadingFileMessage", value: function value(e, t) {\n        var n,\n            r = g(Q.parse(arguments, [new Q({ type: ["number", "string"] }), new Q({ type: "callback" })]), 3);n = r[0], e = r[1], t = r[2];var i = $.get(this._iid).container.isErrorFirstInCallback;return n ? (i ? t(n, null) : t(null, n), !1) : L.get(this._iid).FileMessageQueue.create(this).cancelUploadItemByRequestId(e, function (e, n) {\n          return i ? t(e, n) : t(n, e);\n        });\n      } }, { key: "deleteMessage", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(e) {\n            return !Array.isArray(e) && null !== e && e.hasOwnProperty("messageId");\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.deleteMessage({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), messageId: e.messageId }, function (e, n) {\n            return t(e, null);\n          });\n        }, n);\n      } }, { key: "getMetaCounters", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(n) {\n            return Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.getMetaCounters({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), keys: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "getAllMetaCounters", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.getMetaCounters({ channelUrl: n.url, isOpenChannel: n.isOpenChannel(), keys: [] }, function (e, n) {\n            return t(e, n);\n          });\n        }, e);\n      } }, { key: "createMetaCounters", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "number" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.createMetaCounters({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), metaCounter: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "updateMetaCounters", value: function value(e, n, t) {\n        var r,\n            i = this,\n            a = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "number" == typeof e;\n            });\n          } }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 4);return r = a[0], e = a[1], n = a[2], t = a[3], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.updateMetaCounters({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), metaCounter: e, upsert: n, mode: "set" }, function (e, n) {\n            return t(e, n);\n          });\n        }, t);\n      } }, { key: "increaseMetaCounters", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "number" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.updateMetaCounters({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), metaCounter: e, upsert: !1, mode: "increase" }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "decreaseMetaCounters", value: function value(e, n) {\n        var t,\n            r = this,\n            i = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "number" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return t = i[0], e = i[1], n = i[2], K(this._iid, function (i) {\n          t ? i(t, null) : $.get(r._iid).container.apiClient.updateMetaCounters({ channelUrl: r.url, isOpenChannel: r.isOpenChannel(), metaCounter: e, upsert: !1, mode: "decrease" }, function (e, n) {\n            var t = null;if (!e) for (var r in t = {}, n) {\n              t[r] = n[r];\n            }i(e, t);\n          });\n        }, n);\n      } }, { key: "deleteMetaCounter", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.deleteMetaCounter({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), key: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "deleteAllMetaCounters", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.deleteAllMetaCounters({ channelUrl: n.url, isOpenChannel: n.isOpenChannel() }, function (e, n) {\n            return t(e, n);\n          });\n        }, e);\n      } }, { key: "getMetaData", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(n) {\n            return Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.getMetaData({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), keys: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "getAllMetaData", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.getMetaData({ channelUrl: n.url, isOpenChannel: n.isOpenChannel(), keys: [] }, function (e, n) {\n            return t(e, n);\n          });\n        }, e);\n      } }, { key: "createMetaData", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.createMetaData({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), metaData: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "updateMetaData", value: function value(e, n, t) {\n        var r,\n            i = this,\n            a = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(n) {\n            return n && !Array.isArray(n) && 0 < Object.keys(n).length && Object.keys(n).map(function (e) {\n              return n[e];\n            }).every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "callback" })]), 4);return r = a[0], e = a[1], n = a[2], t = a[3], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.updateMetaData({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), metaData: e, upsert: n }, function (e, n) {\n            return t(e, n);\n          });\n        }, t);\n      } }, { key: "deleteMetaData", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.deleteMetaData({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), key: e }, function (e, n) {\n            return t(e, n);\n          });\n        }, n);\n      } }, { key: "deleteAllMetaData", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.deleteAllMetaData({ channelUrl: n.url, isOpenChannel: n.isOpenChannel() }, function (e, n) {\n            return t(e, n);\n          });\n        }, e);\n      } }, { key: "_updateMessageMetaArray", value: function value(o, u, l, e) {\n        var c = this;return K(this._iid, function (t) {\n          var e = L.get(c._iid),\n              n = e.Command,\n              r = e.UserMessage,\n              i = e.FileMessage,\n              a = e.AdminMessage,\n              s = null;u.isUserMessage() ? s = n.bUpdateUserMessage({ channelUrl: o, messageId: u.messageId, metaArrayParams: l }) : u.isFileMessage() && (s = n.bUpdateFileMessage({ channelUrl: o, messageId: u.messageId, metaArrayParams: l })), s ? dn.getInstance(c._iid).sendCommand(s).then(function (e) {\n            var n = null;u.isUserMessage() ? n = new r(e.getJsonElement()) : u.isFileMessage() ? n = new i(e.getJsonElement()) : u.isAdminMessage() && (n = new a(e.getJsonElement())), t(null, n);\n          }).catch(function (e) {\n            t(e, null);\n          }) : t(Q.error, null);\n        }, e);\n      } }, { key: "createMessageMetaArrayKeys", value: function value(e, n, t) {\n        var r,\n            i = L.get(this._iid).MessageMetaArray,\n            a = g(Q.parse(arguments, [new Q({ type: W }), new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e && "" !== e;\n            });\n          } }), new Q({ type: "callback" })]), 4);if (r = a[0], e = a[1], n = a[2], t = a[3], r) return K(this._iid, function (e) {\n          e(r, null);\n        }, t);var s = [];if (Array.isArray(n)) for (var o = 0; o < n.length; o++) {\n          var u = n[o];s.push(new i(u, []));\n        }return this._updateMessageMetaArray(this.url, e, { array: s.map(function (e) {\n            return e.encode();\n          }), mode: "add", upsert: !0 }, t);\n      } }, { key: "deleteMessageMetaArrayKeys", value: function value(e, n, t) {\n        var r,\n            i = L.get(this._iid).MessageMetaArray,\n            a = g(Q.parse(arguments, [new Q({ type: W }), new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e && "" !== e;\n            });\n          } }), new Q({ type: "callback" })]), 4);if (r = a[0], e = a[1], n = a[2], t = a[3], r) return K(this._iid, function (e) {\n          e(r, null);\n        }, t);var s = [];if (Array.isArray(n)) for (var o = 0; o < n.length; o++) {\n          var u = n[o];s.push(new i(u, []));\n        }return this._updateMessageMetaArray(this.url, e, { array: s.map(function (e) {\n            return e.encode();\n          }), mode: "remove", upsert: !0 }, t);\n      } }, { key: "addMessageMetaArrayValues", value: function value(e, n, t) {\n        var r,\n            i = L.get(this._iid).MessageMetaArray,\n            a = g(Q.parse(arguments, [new Q({ type: W }), new Q({ type: "object", constraint: function constraint(n) {\n            return n && (Array.isArray(n) && n.every(function (e) {\n              return e instanceof i;\n            }) || Object.keys(n).every(function (e) {\n              return Array.isArray(n[e]) && n[e].every(function (e) {\n                return "string" == typeof e && 0 < e.length;\n              });\n            }));\n          } }), new Q({ type: "callback" })]), 4);if (r = a[0], e = a[1], n = a[2], t = a[3], r) return K(this._iid, function (e) {\n          e(r, null);\n        }, t);var s = Array.isArray(n) ? n.map(function (e) {\n          return e.encode();\n        }) : Object.keys(n).map(function (e) {\n          return { key: e, value: n[e] };\n        });return this._updateMessageMetaArray(this.url, e, { array: s, mode: "add", upsert: !0 }, t);\n      } }, { key: "removeMessageMetaArrayValues", value: function value(e, n, t) {\n        var r,\n            i = L.get(this._iid).MessageMetaArray,\n            a = g(Q.parse(arguments, [new Q({ type: W }), new Q({ type: "object", constraint: function constraint(n) {\n            return n && (Array.isArray(n) && n.every(function (e) {\n              return e instanceof i;\n            }) || Object.keys(n).every(function (e) {\n              return Array.isArray(n[e]) && n[e].every(function (e) {\n                return "string" == typeof e && 0 < e.length;\n              });\n            }));\n          } }), new Q({ type: "callback" })]), 4);return r = a[0], e = a[1], n = a[2], t = a[3], r ? K(this._iid, function (e) {\n          e(r, null);\n        }, t) : this._updateMessageMetaArray(this.url, e, { array: n.map(function (e) {\n            return e.encode();\n          }), mode: "remove", upsert: !0 }, t);\n      } }, { key: "report", value: function value(e, n, t) {\n        var r,\n            i = this,\n            a = L.get(this._iid).BaseChannel,\n            s = g(Q.parse(arguments, [new Q({ type: a.ReportCategory }), new Q({ type: "string" }), new Q({ type: "callback" })]), 4);return r = s[0], e = s[1], n = s[2], t = s[3], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.report({ channelUrl: i.url, isOpenChannel: i.isOpenChannel(), reportCategory: e, reportingUserId: dn.getInstance(i._iid).currentUser.userId, reportDescription: n }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "reportUser", value: function value(e, n, r, t) {\n        var i,\n            a = this,\n            s = L.get(this._iid).BaseChannel,\n            o = g(Q.parse(arguments, [new Q({ type: se }), new Q({ type: s.ReportCategory }), new Q({ type: "string" }), new Q({ type: "callback" })]), 5);return i = o[0], e = o[1], n = o[2], r = o[3], t = o[4], K(this._iid, function (t) {\n          i ? t(i, null) : $.get(a._iid).container.apiClient.reportUser({ channelUrl: a.url, isOpenChannel: a.isOpenChannel(), reportCategory: n, offendingUserId: e.userId, reportingUserId: dn.getInstance(a._iid).currentUser.userId, reportDescription: r }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "reportMessage", value: function value(e, n, r, t) {\n        var i,\n            a = this,\n            s = L.get(this._iid).BaseChannel,\n            o = g(Q.parse(arguments, [new Q({ type: W }), new Q({ type: s.ReportCategory }), new Q({ type: "string" }), new Q({ type: "callback" })]), 5);return i = o[0], e = o[1], n = o[2], r = o[3], t = o[4], K(this._iid, function (t) {\n          i ? t(i, null) : $.get(a._iid).container.apiClient.reportMessage({ messageId: e.messageId, channelUrl: a.url, isOpenChannel: a.isOpenChannel(), reportCategory: n, offendingUserId: e.sender.userId, reportingUserId: dn.getInstance(a._iid).currentUser.userId, reportDescription: r }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }], [{ key: "buildMessage", value: function value(e, n) {\n        var t = L.get(this._iid),\n            r = t.Sender,\n            i = t.UserMessage,\n            a = t.FileMessage,\n            s = t.AdminMessage,\n            o = t.BaseMessageParams,\n            u = t.MessageMetaArray;if (e) switch (e.type) {case "MESG":\n            return new i(i.build(e.req_id, parseInt(e.message_id), new r(e.user), n, e.message, e.data || "", e.custom_type || "", e.translations || {}, e.is_global_block || !1, parseInt(e.created_at), parseInt(e.updated_at), e.sorted_metaarray ? e.sorted_metaarray.map(function (e) {\n              return new u(e.key, e.value || []);\n            }) : [], e.mention_type || o.MentionType.USERS, e.mentioned_users || []));case "FILE":\n            var l = e.file;return new a(a.build(e.req_id, parseInt(e.message_id), new r(e.user), n, String(l.url), String(l.name), String(l.type), parseInt(l.size) || 0, l.data || "", e.custom_type || "", e.is_global_block || !1, parseInt(e.created_at), e.thumbnails || [], e.require_auth || !1, parseInt(e.updated_at), e.sorted_metaarray ? e.sorted_metaarray.map(function (e) {\n              return new u(e.key, e.value || []);\n            }) : [], e.mention_type || o.MentionType.USERS, e.mentioned_users || []));case "BRDM":case "ADMM":\n            return new s(s.build(parseInt(e.message_id), n, e.message, e.data || "", e.custom_type || "", e.translations || {}, parseInt(e.created_at), parseInt(e.updated_at), e.sorted_metaarray ? e.sorted_metaarray.map(function (e) {\n              return new u(e.key, e.value || []);\n            }) : [], e.mention_type || o.MentionType.USERS, e.mentioned_users || []));}return null;\n      } }, { key: "CHANNEL_TYPE_OPEN", get: function get() {\n        return "open";\n      } }, { key: "CHANNEL_TYPE_GROUP", get: function get() {\n        return "group";\n      } }, { key: "CHANNEL_TYPE_BASE", get: function get() {\n        return "base";\n      } }, { key: "MessageTypeFilter", get: function get() {\n        return { ALL: "", USER: "MESG", FILE: "FILE", ADMIN: "ADMM" };\n      } }, { key: "ReportCategory", get: function get() {\n        return { SPAM: "spam", HARASSING: "harassing", SUSPICIOUS: "suspicious", INAPPROPRIATE: "inappropriate" };\n      } }]), n;\n  }(),\n      le = function () {\n    function n(e) {\n      _(this, n), e && (this.category = e.hasOwnProperty("cat") ? parseInt(e.cat) : 0, this.data = e.hasOwnProperty("data") ? e.data : null, this.channelUrl = e.hasOwnProperty("channel_url") ? String(e.channel_url) : "", this.channelType = e.hasOwnProperty("channel_type") ? String(e.channel_type) : ue.CHANNEL_TYPE_GROUP);\n    }return s(n, [{ key: "isGroupChannel", value: function value() {\n        return this.channelType === ue.CHANNEL_TYPE_GROUP;\n      } }, { key: "isOpenChannel", value: function value() {\n        return this.channelType === ue.CHANNEL_TYPE_OPEN;\n      } }]), n;\n  }();le.CATEGORY_NONE = 0, le.CATEGORY_CHANNEL_ENTER = 10102, le.CATEGORY_CHANNEL_EXIT = 10103, le.CATEGORY_USER_CHANNEL_MUTE = 10201, le.CATEGORY_USER_CHANNEL_UNMUTE = 10200, le.CATEGORY_USER_CHANNEL_BAN = 10601, le.CATEGORY_USER_CHANNEL_UNBAN = 10600, le.CATEGORY_CHANNEL_FREEZE = 10701, le.CATEGORY_CHANNEL_UNFREEZE = 10700, le.CATEGORY_TYPING_START = 10900, le.CATEGORY_TYPING_END = 10901, le.CATEGORY_CHANNEL_JOIN = 1e4, le.CATEGORY_CHANNEL_LEAVE = 10001, le.CATEGORY_CHANNEL_INVITE = 10020, le.CATEGORY_CHANNEL_DECLINE_INVITE = 10022, le.CATEGORY_CHANNEL_PROP_CHANGED = 11e3, le.CATEGORY_CHANNEL_DELETED = 12e3, le.CATEGORY_CHANNEL_META_DATA_CHANGED = 11100, le.CATEGORY_CHANNEL_META_COUNTERS_CHANGED = 11200, le.CATEGORY_CHANNEL_HIDE = 13e3, le.CATEGORY_CHANNEL_UNHIDE = 13001;function ce(e) {\n    _(this, ce), e && (this.category = e.hasOwnProperty("cat") ? parseInt(e.cat) : 0);\n  }ce.CATEGORY_USER_BLOCK = 20001, ce.CATEGORY_USER_UNBLOCK = 2e4, ce.CATEGORY_FRIEND_DISCOVERED = 20900;var de = function () {\n    function n(e) {\n      _(this, n), this.sb = e, this.cls = L.get(this.sb._iid);\n    }return s(n, [{ key: "onRawCommandReceived", value: function value(e) {\n        var g = this,\n            n = this.cls,\n            t = n.Command,\n            l = n.User,\n            c = n.Member,\n            r = n.BaseChannel,\n            d = n.GroupChannel,\n            a = n.OpenChannel,\n            i = n.UserMessage,\n            s = n.FileMessage,\n            o = n.AdminMessage,\n            m = n.BaseMessageParams,\n            u = n.ReadStatus,\n            h = $.get(this.sb._iid),\n            p = h.container,\n            f = p.pinger,\n            _ = p.auth,\n            y = p.subscribedUnreadMessageCount,\n            C = p.ackStateMap,\n            v = new t(e),\n            E = v.getJsonElement();if (E.hasOwnProperty("unread_cnt") && "object" === Z(E.unread_cnt)) {\n          var U = !1,\n              b = E.unread_cnt.ts;if ("number" == typeof b && b > y.ts) {\n            if (y.all !== E.unread_cnt.all && (U = !0), y.all = 0 <= E.unread_cnt.all ? E.unread_cnt.all : 0, E.unread_cnt.custom_types) for (var A in E.unread_cnt.custom_types) {\n              y.custom_types[A] !== E.unread_cnt.custom_types[A] && (U = !0), y.custom_types[A] = E.unread_cnt.custom_types[A];\n            }U = U && 0 < y.ts, y.ts = b;\n          }if (U) for (var N in this.sb.userEventHandlers) {\n            this.sb.userEventHandlers[N].onTotalUnreadMessageCountUpdated(y.all, y.custom_types);\n          }\n        }var S = v.requestId;if (S) {\n          var I = C[S];if (I) {\n            clearTimeout(I.timer);var k = I.handler;k && ("EROR" === v.command ? k(new ee(E.message, E.code), null) : k(null, v)), C.hasOwnProperty(S) && delete C[S];\n          }\n        } else switch (f && "LOGI" !== v.command && f.start(), v.command) {case "LOGI":\n            this.sb.loginTimer && (clearTimeout(this.sb.loginTimer), this.sb.loginTimer = null, this.sb.onLoginTimerCancel = null, E.hasOwnProperty("error") ? (this.sb.isSessionOpened = !1, this.sb.loginHandler(new ee(E.message, E.code), null)) : (this.sb.isSessionOpened = !0, E.hasOwnProperty("key") && (_.sessionKey = E.key), E.hasOwnProperty("ekey") && (_.eKey = E.ekey), E.hasOwnProperty("user_id") && (this.sb.currentUser = new l(E)), "number" == typeof E.ping_interval && 0 < E.ping_interval && h.set("pingInterval", 1e3 * E.ping_interval), "number" == typeof E.pong_timeout && 0 < E.pong_timeout && h.set("pongTimeout", 1e3 * E.pong_timeout), "number" == typeof E.login_ts && h.set("connectedAt", 1e3 * E.login_ts), f && f.start(), this.sb.loginHandler(null, this.sb.currentUser)), this.sb.connecting = !1, this.sb.reconnecting = !1);break;case "MESG":case "FILE":case "BRDM":case "ADMM":\n            var R = null,\n                O = !1;if ("MESG" === v.command ? R = new i(E) : "FILE" === v.command ? R = new s(E) : (R = new o(E), E.hasOwnProperty("silent") && (O = E.silent)), R) {\n              var T = this.sb.currentUser.userId;if (R.isGroupChannel()) {\n                var M = d.cachedChannels.hasOwnProperty(R.channelUrl);d.getChannel(R.channelUrl).then(function (e) {\n                  if (e.isHidden = !1, e.hiddenState = d.HiddenState.UNHIDDEN, d.cachedChannels[e.url] = e, R._sender && e.memberMap.hasOwnProperty(R._sender.userId)) {\n                    var n = e.memberMap[R._sender.userId];n.nickname !== R._sender.nickname && (n.nickname = R._sender.nickname), n.profileUrl !== R._sender.profileUrl && (n.profileUrl = R._sender.profileUrl), te.deepEqual(n.metaData, R._sender.metaData) || (n.metaData = R._sender.metaData), n.isBlockedByMe !== R._sender.isBlockedByMe && (n.isBlockedByMe = R._sender.isBlockedByMe);\n                  }var t = g.sb.currentUser;t && R._sender && T === R._sender.userId && (t.nickname !== R._sender.nickname && (t.nickname = R._sender.nickname), t.profileUrl !== R._sender.profileUrl && (t.profileUrl = R._sender.profileUrl), te.deepEqual(t.metaData, R._sender.metaData) || (t.metaData = R._sender.metaData));var r = !1;if (R.mentionType === m.MentionType.CHANNEL) R.sender && R.sender.userId === T || (r = !0);else if (R.mentionType === m.MentionType.USERS) for (var i = 0; i < R.mentionedUsers.length; i++) {\n                    if ((!R.sender || R.sender.userId !== T) && R.mentionedUsers[i].userId === T) {\n                      r = !0;break;\n                    }\n                  }if (!te.isVideoChatSignalingMessage(R) && (O || (e.isEphemeral ? ((!e.lastMessage || e.lastMessage.createdAt < R.createdAt) && (e.lastMessage = R), R.sender && R.sender.userId === T || e._setGroupChannelUnreadCount(e.unreadMessageCount + 1, e.unreadMentionCount + (r ? 1 : 0))) : M && ((!e.lastMessage || e.lastMessage.createdAt < R.createdAt) && (e.lastMessage = R), R.sender && R.sender.userId === T || e._setGroupChannelUnreadCount(e.unreadMessageCount + 1, e.unreadMentionCount + (r ? 1 : 0)))), !O)) for (var a in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[a].onChannelChanged(e);\n                  }for (var s in g.sb.channelHandlers) {\n                    var o = g.sb.channelHandlers[s];o.onMessageReceived(e, R), r && o.onMentionReceived(e, R);\n                  }\n                }).catch(function (e) {});\n              } else R.isOpenChannel() && a.getChannel(R.channelUrl).then(function (e) {\n                var n = !1;if (R.mentionType === m.MentionType.CHANNEL) n = !0;else if (R.mentionType === m.MentionType.USERS) for (var t = 0; t < R.mentionedUsers.length; t++) {\n                  if (R.mentionedUsers[t].userId === T) {\n                    n = !0;break;\n                  }\n                }for (var r in g.sb.channelHandlers) {\n                  var i = g.sb.channelHandlers[r];a.enteredChannels[e.url] && i.onMessageReceived(e, R), n && i.onMentionReceived(e, R);\n                }\n              }).catch(function (e) {});\n            }break;case "MEDI":case "FEDI":case "AEDI":\n            var L = null,\n                w = !1;if ("MEDI" === v.command ? L = new i(E) : "FEDI" === v.command ? L = new s(E) : (L = new o(E), E.hasOwnProperty("silent") && (w = E.silent)), L) {\n              var P = this.sb.currentUser.userId;if (L.isGroupChannel()) {\n                var D = d.cachedChannels.hasOwnProperty(L.channelUrl);d.getChannel(L.channelUrl).then(function (e) {\n                  var n = e.cachedReadReceiptStatus[P],\n                      t = n && n >= L.createAt,\n                      r = g.sb.currentUser;r && L._sender && r.userId === L._sender.userId && (r.nickname !== L._sender.nickname && (r.nickname = L._sender.nickname), r.profileUrl !== L._sender.profileUrl && (r.profileUrl = L._sender.profileUrl), te.deepEqual(r.metaData, L._sender.metaData) || (r.metaData = L._sender.metaData));var i = !1;if ((!L.sender || L.sender.userId !== P) && !t && E && E.hasOwnProperty("old_values")) {\n                    var a = E.old_values.mention_type || L.mentionType,\n                        s = E.old_values.mentioned_user_ids || L.mentionedUsers.map(function (e) {\n                      return e.userId;\n                    });if (a === m.MentionType.USERS && L.mentionType === m.MentionType.USERS) {\n                      for (var o = !1, u = !1, l = 0; l < s.length; l++) {\n                        if (s[l] === P) {\n                          o = !0;break;\n                        }\n                      }for (var c = 0; c < L.mentionedUsers.length; c++) {\n                        if (L.mentionedUsers[c].userId === P) {\n                          u = !0;break;\n                        }\n                      }!o && u && (i = !0, D && e._setGroupChannelUnreadCount(e.unreadMessageCount, e.unreadMentionCount + 1));\n                    } else if (a === m.MentionType.USERS && L.mentionType === m.MentionType.CHANNEL) {\n                      for (var d = !1, h = 0; h < s.length; h++) {\n                        if (s[h] === P) {\n                          d = !0;break;\n                        }\n                      }d || (i = !0, D && e._setGroupChannelUnreadCount(e.unreadMessageCount, e.unreadMentionCount + 1));\n                    }\n                  }var p = !1;if (e.lastMessage && e.lastMessage.messageId === L.messageId && (D ? e.lastMessage.updatedAt < L.updatedAt && (e.lastMessage = L, p = !0) : p = !0), !w && (p || i)) for (var f in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[f].onChannelChanged(e);\n                  }for (var _ in g.sb.channelHandlers) {\n                    var y = g.sb.channelHandlers[_];y.onMessageUpdated(e, L), i && y.onMentionReceived(e, L);\n                  }\n                }).catch(function (e) {});\n              } else L.isOpenChannel() && a.getChannel(L.channelUrl).then(function (e) {\n                for (var n in g.sb.channelHandlers) {\n                  g.sb.channelHandlers[n].onMessageUpdated(e, L);\n                }\n              }).catch(function (e) {});\n            }break;case "DELM":\n            var H = String(E.channel_type),\n                G = String(E.channel_url),\n                F = String(E.msg_id);switch (H) {case r.CHANNEL_TYPE_GROUP:\n                d.getChannel(G).then(function (e) {\n                  for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onMessageDeleted(e, F);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command);\n                });break;case r.CHANNEL_TYPE_OPEN:\n                a.getChannel(G).then(function (e) {\n                  for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onMessageDeleted(e, F);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command);\n                });}break;case "READ":\n            var q = new u(E),\n                B = d.cachedChannels.hasOwnProperty(q.channelUrl);d.getChannel(q.channelUrl).then(function (e) {\n              if (B && e.updateReadReceipt(q.reader.userId, q.timestamp), q.reader.userId === g.sb.currentUser.userId) {\n                if (B) {\n                  if ((0 < e.unreadMessageCount || 0 < e.unreadMentionCount) && (e._setGroupChannelUnreadCount(0, 0), 0 === e.unreadMessageCount || 0 === e.unreadMentionCount)) for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onChannelChanged(e);\n                  }\n                } else if (0 === e.unreadMessageCount || 0 === e.unreadMentionCount) for (var t in g.sb.channelHandlers) {\n                  g.sb.channelHandlers[t].onChannelChanged(e);\n                }\n              } else for (var r in g.sb.channelHandlers) {\n                g.sb.channelHandlers[r].onReadReceiptUpdated(e);\n              }\n            }).catch(function (e) {});break;case "SYEV":\n            var Q = new le(E);switch (Q.category) {case le.CATEGORY_CHANNEL_JOIN:case le.CATEGORY_CHANNEL_LEAVE:\n                d.getChannel(Q.channelUrl).then(function (r) {\n                  var i = Q.data.hasOwnProperty("member_count") ? Q.data.member_count : null,\n                      a = Q.data.hasOwnProperty("joined_member_count") ? Q.data.joined_member_count : null;if (Q.category === le.CATEGORY_CHANNEL_JOIN) {\n                    (Q.data.hasOwnProperty("users") ? Q.data.users : [Q.data]).forEach(function (e) {\n                      r.isSuper ? r.setLatestMemberCount(i, a, E.ts) : (e.state = c.JOINED, r.addMember(new c(e)), r.updateJoinedMemberCount());var n = new l(e);for (var t in g.sb.currentUser && n.userId === g.sb.currentUser.userId && (r.myMemberState = "joined", d.cachedChannels[r.url] = r), g.sb.channelHandlers) {\n                        g.sb.channelHandlers[t].onUserJoined(r, n);\n                      }\n                    });\n                  } else {\n                    var e = new l(Q.data);for (var n in g.sb.currentUser && e.userId === g.sb.currentUser.userId ? (r.isPublic || d.removeCachedChannel(Q.channelUrl), r.myMemberState = "none", r.invitedAt = 0, r._setGroupChannelUnreadCount(0, 0)) : d.cachedChannels[r.url] = r, r.isSuper ? r.setLatestMemberCount(i, a, E.ts) : (r.removeMember(e), r.updateJoinedMemberCount()), g.sb.channelHandlers) {\n                      g.sb.channelHandlers[n].onUserLeft(r, e);\n                    }\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_INVITE:\n                d.getChannel(Q.channelUrl).then(function (e) {\n                  var n = null;Q.data && Q.data.inviter && 0 < Object.keys(Q.data.inviter).length && (n = new l(Q.data.inviter));for (var t = [], r = 0; r < Q.data.invitees.length; r++) {\n                    var i = new l(Q.data.invitees[r]);t.push(i), Q.data.invitees[r].state = c.INVITED;var a = new c(Q.data.invitees[r]);if (e.isSuper) {\n                      var s = Q.data.hasOwnProperty("member_count") ? Q.data.member_count : null,\n                          o = Q.data.hasOwnProperty("joined_member_count") ? Q.data.joined_member_count : null;e.setLatestMemberCount(s, o, E.ts);\n                    } else e.addMember(a);g.sb.currentUser && a.userId === g.sb.currentUser.userId && (e.isHidden = !1, "joined" !== e.myMemberState && (e.myMemberState = "invited"), e.invitedAt = E.ts, d.cachedChannels[e.url] = e);\n                  }for (var u in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[u].onUserReceivedInvitation(e, n, t);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_DECLINE_INVITE:\n                d.getChannel(Q.channelUrl).then(function (e) {\n                  var n = null;Q.data && Q.data.inviter && 0 < Object.keys(Q.data.inviter).length && (n = new l(Q.data.inviter));var t = new l(Q.data.invitee);if (g.sb.currentUser && t.userId === g.sb.currentUser.userId && (e.invitedAt = 0, e.myMemberState = "none", e.isPublic || d.removeCachedChannel(Q.channelUrl)), e.isSuper) {\n                    var r = Q.data.hasOwnProperty("member_count") ? Q.data.member_count : null,\n                        i = Q.data.hasOwnProperty("joined_member_count") ? Q.data.joined_member_count : null;e.setLatestMemberCount(r, i, E.ts);\n                  } else e.removeMember(t);for (var a in g.sb.currentUser && t.userId !== g.sb.currentUser.userId && (d.cachedChannels[e.url] = e), g.sb.channelHandlers) {\n                    g.sb.channelHandlers[a].onUserDeclinedInvitation(e, n, t);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_TYPING_START:case le.CATEGORY_TYPING_END:\n                d.getChannel(Q.channelUrl).then(function (e) {\n                  var n = new l(Q.data);for (var t in Q.category === le.CATEGORY_TYPING_START ? e.updateTypingStatus(n, !0) : e.updateTypingStatus(n, !1), g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onTypingStatusUpdated(e);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_ENTER:case le.CATEGORY_CHANNEL_EXIT:\n                a.getChannel(Q.channelUrl).then(function (e) {\n                  Q.data.hasOwnProperty("participant_count") && (e.participantCount = Q.data.participant_count);var n = new l(Q.data);if (Q.category === le.CATEGORY_CHANNEL_ENTER) for (var t in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onUserEntered(e, n);\n                  } else for (var r in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[r].onUserExited(e, n);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_USER_CHANNEL_MUTE:case le.CATEGORY_USER_CHANNEL_UNMUTE:\n                Q.isOpenChannel() ? a.getChannel(Q.channelUrl).then(function (e) {\n                  var n = new l(Q.data);if (Q.category === le.CATEGORY_USER_CHANNEL_MUTE) for (var t in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onUserMuted(e, n);\n                  } else for (var r in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[r].onUserUnmuted(e, n);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                }) : d.getChannel(Q.channelUrl).then(function (e) {\n                  var n = new l(Q.data);if (g.sb.currentUser && n.userId === g.sb.currentUser.userId && (e.myMutedState = Q.category === le.CATEGORY_USER_CHANNEL_MUTE ? "muted" : "unmuted"), Q.category === le.CATEGORY_USER_CHANNEL_MUTE) for (var t in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onUserMuted(e, n);\n                  } else for (var r in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[r].onUserUnmuted(e, n);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_USER_CHANNEL_BAN:case le.CATEGORY_USER_CHANNEL_UNBAN:\n                Q.isOpenChannel() ? a.getChannel(Q.channelUrl).then(function (e) {\n                  var n = new l(Q.data);if (Q.category === le.CATEGORY_USER_CHANNEL_BAN) {\n                    if (g.sb.currentUser && n.userId === g.sb.currentUser.userId) delete a.enteredChannels[Q.channelUrl], g.cls.FileMessageQueue.delete(Q.channelUrl);for (var t in g.sb.channelHandlers) {\n                      g.sb.channelHandlers[t].onUserBanned(e, n);\n                    }\n                  } else for (var r in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[r].onUserUnbanned(e, n);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                }) : d.getChannel(Q.channelUrl).then(function (e) {\n                  var n = new l(Q.data);if (Q.category === le.CATEGORY_USER_CHANNEL_BAN) {\n                    if (g.sb.currentUser && n.userId === g.sb.currentUser.userId && (e.isPublic || d.removeCachedChannel(Q.channelUrl), e.myMemberState = "none", e.invitedAt = 0, e._setGroupChannelUnreadCount(0, 0)), e.isSuper) {\n                      var t = Q.data.hasOwnProperty("member_count") ? Q.data.member_count : null,\n                          r = Q.data.hasOwnProperty("joined_member_count") ? Q.data.joined_member_count : null;e.setLatestMemberCount(t, r, E.ts);\n                    } else e.removeMember(n), e.updateJoinedMemberCount();for (var i in g.sb.channelHandlers) {\n                      g.sb.channelHandlers[i].onUserBanned(e, n);\n                    }\n                  } else for (var a in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[a].onUserUnbanned(e, n);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_FREEZE:case le.CATEGORY_CHANNEL_UNFREEZE:\n                Q.isOpenChannel() ? a.getChannel(Q.channelUrl).then(function (e) {\n                  if (e.isFrozen = Q.data.freeze, a.cachedChannels[e.url] = e, Q.category === le.CATEGORY_CHANNEL_FREEZE) for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onChannelFrozen(e);\n                  } else for (var t in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onChannelUnfrozen(e);\n                  }\n                }).then(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                }) : d.getChannel(Q.channelUrl).then(function (e) {\n                  if (e.isFrozen = Q.data.freeze, d.cachedChannels[e.url] = e, Q.category === le.CATEGORY_CHANNEL_FREEZE) for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onChannelFrozen(e);\n                  } else for (var t in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onChannelUnfrozen(e);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_DELETED:\n                for (var x in Q.isGroupChannel() ? d.removeCachedChannel(Q.channelUrl) : a.removeCachedChannel(Q.channelUrl), this.sb.channelHandlers) {\n                  this.sb.channelHandlers[x].onChannelDeleted(Q.channelUrl, Q.isGroupChannel() ? "group" : "open");\n                }break;case le.CATEGORY_CHANNEL_PROP_CHANGED:\n                Q.isOpenChannel() ? a.getChannelWithoutCache(Q.channelUrl).then(function (e) {\n                  for (var n in g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onChannelChanged(e);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                }) : d.getChannelWithoutCache(Q.channelUrl).then(function (e) {\n                  var n = e.unreadMessageCount,\n                      t = e.unreadMentionCount;for (var r in e.myCountPreference !== d.CountPreference.ALL && (e.myCountPreference === d.CountPreference.UNREAD_MESSAGE_COUNT_ONLY ? t = 0 : e.myCountPreference === d.CountPreference.UNREAD_MENTION_COUNT_ONLY ? n = 0 : t = n = 0), e._setGroupChannelUnreadCount(n, t), g.sb.channelHandlers) {\n                    g.sb.channelHandlers[r].onChannelChanged(e);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_META_DATA_CHANGED:case le.CATEGORY_CHANNEL_META_COUNTERS_CHANGED:\n                var z = Q.data.hasOwnProperty("created"),\n                    j = Q.data.hasOwnProperty("updated"),\n                    Y = Q.data.hasOwnProperty("deleted");Q.isOpenChannel() ? a.getChannel(Q.channelUrl).then(function (e) {\n                  for (var n in g.sb.channelHandlers) {\n                    var t = g.sb.channelHandlers[n];Q.category === le.CATEGORY_CHANNEL_META_DATA_CHANGED ? (z && t.onMetaDataCreated(e, Q.data.created), j && t.onMetaDataUpdated(e, Q.data.updated), Y && t.onMetaDataDeleted(e, Q.data.deleted)) : (z && t.onMetaCountersCreated(e, Q.data.created), j && t.onMetaCountersUpdated(e, Q.data.updated), Y && t.onMetaCountersDeleted(e, Q.data.deleted));\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                }) : d.getChannel(Q.channelUrl).then(function (e) {\n                  for (var n in g.sb.channelHandlers) {\n                    var t = g.sb.channelHandlers[n];Q.category === le.CATEGORY_CHANNEL_META_DATA_CHANGED ? (z && t.onMetaDataCreated(e, Q.data.created), j && t.onMetaDataUpdated(e, Q.data.updated), Y && t.onMetaDataDeleted(e, Q.data.deleted)) : (z && t.onMetaCountersCreated(e, Q.data.created), j && t.onMetaCountersUpdated(e, Q.data.updated), Y && t.onMetaCountersDeleted(e, Q.data.deleted));\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });break;case le.CATEGORY_CHANNEL_HIDE:case le.CATEGORY_CHANNEL_UNHIDE:\n                d.getChannel(Q.channelUrl).then(function (e) {\n                  if (Q.category === le.CATEGORY_CHANNEL_HIDE) for (var n in e.isHidden = !0, Q.data && (Q.data.hasOwnProperty("allow_auto_unhide") && (e.hiddenState = Q.data.allow_auto_unhide ? d.HiddenState.HIDDEN_ALLOW_AUTO_UNHIDE : d.HiddenState.HIDDEN_PREVENT_AUTO_UNHIDE), Q.data.hasOwnProperty("hide_previous_messages") && Q.data.hide_previous_messages && e._setGroupChannelUnreadCount(0, 0)), E.hasOwnProperty("ts_message_offset") && (e._messageOffsetTimestamp = E.ts_message_offset), d.cachedChannels[e.url] = e, g.sb.channelHandlers) {\n                    g.sb.channelHandlers[n].onChannelHidden(e);\n                  } else for (var t in e.isHidden = !1, e.hiddenState = d.HiddenState.UNHIDDEN, d.cachedChannels[e.url] = e, g.sb.channelHandlers) {\n                    g.sb.channelHandlers[t].onChannelChanged(e);\n                  }\n                }).catch(function (e) {\n                  return ne.debug("Discard command", v.command, Q.category);\n                });}break;case "USEV":\n            var K = new le(E);switch (K.category) {case ce.CATEGORY_USER_BLOCK:case ce.CATEGORY_USER_UNBLOCK:\n                var V = K.data.blocker.user_id,\n                    W = K.data.blockee.user_id;Object.keys(d.cachedChannels).forEach(function (e) {\n                  var n = d.cachedChannels[e];try {\n                    g.sb.currentUser && (g.sb.currentUser.userId === V ? n.memberMap[W].isBlockedByMe = K.category === ce.CATEGORY_USER_BLOCK : g.sb.currentUser.userId === W && (n.memberMap[V].isBlockingMe = K.category === ce.CATEGORY_USER_BLOCK));\n                  } catch (e) {}\n                });break;case ce.CATEGORY_FRIEND_DISCOVERED:\n                var J = K.data.friend_discoveries.map(function (e) {\n                  return new l(e);\n                });for (var X in this.sb.userEventHandlers) {\n                  this.sb.userEventHandlers[X].onFriendsDiscovered(J);\n                }}break;case "LEAV":case "JOIN":case "PONG":case "MTIO":case "TPST":case "TPEN":\n            break;default:\n            ne.debug("Discard command", v.command);}\n      } }]), n;\n  }(),\n      he = {},\n      pe = {},\n      fe = function () {\n    function n(e) {\n      _(this, n), this.channel = e, this.uploadQueue = [], this.messageQueue = [], this.latestTimestampToSendMessage = 0, L.get(this._iid).FileMessageQueue.queueMap[e.url] = this;\n    }return s(n, [{ key: "_handleMessageQueueUpdated", value: function value(e) {\n        var t = this;switch (ne.debug("fileMessageQueue message queue updated: ", this.messageQueue), e) {case "add":\n            this.uploadQueue.length < 6 && this._moveFirstPendingMessageToUploadQueue();break;case "update":case "remove":\n            if (0 < this.messageQueue.length) {\n              var r = L.get(this._iid).FileMessageQueue,\n                  i = this.messageQueue[0];if (i) if (i.state === r.State.UPLOADED) {\n                if (i && i.state === r.State.UPLOADED) {\n                  for (i.state = r.State.SENDING, 0 === this.latestTimestampToSendMessage && (this.latestTimestampToSendMessage = new Date().getTime() - 200); new Date().getTime() - this.latestTimestampToSendMessage < 200;) {}this.latestTimestampToSendMessage = new Date().getTime(), this._sendUploadedMessage(i, function (e, n) {\n                    i.state = r.State.SENT, i.error = e || null, i.response = n || null, t._handleMessageQueueUpdated("update");\n                  });\n                }\n              } else i.state === r.State.SENT && this._finalizeMessage();\n            }}\n      } }, { key: "_handleUploadQueueUpdated", value: function value(e, n) {\n        var t = this;switch (ne.debug("fileMessageQueue upload queue updated: ", this.uploadQueue), e) {case "add":\n            var r = L.get(this._iid).FileMessageQueue;if (n.state = r.State.UPLOADING, n.error) -1 < this.messageQueue.map(function (e) {\n              return e.requestId;\n            }).indexOf(n.requestId) && (n.state = r.State.SENT, this._handleMessageQueueUpdated("update")), this._finalizeUpload(n.requestId);else this._uploadFile(n, function (e) {\n              n.error && n.state === r.State.SENT || (n.state = r.State.UPLOADED), n.fileInfo = e, t._handleMessageQueueUpdated("update"), t._finalizeUpload(n.requestId);\n            });break;case "update":\n            break;case "remove":\n            this.uploadQueue.length < 6 && this._moveFirstPendingMessageToUploadQueue();}\n      } }, { key: "_moveFirstPendingMessageToUploadQueue", value: function value() {\n        var n = L.get(this._iid).FileMessageQueue,\n            e = this.messageQueue.filter(function (e) {\n          return e.state === n.State.PENDING;\n        });if (0 < e.length) {\n          var t = e[0];this.uploadQueue.push(t), this._handleUploadQueueUpdated("add", t);\n        }\n      } }, { key: "_sendUploadedMessage", value: function value(e, r) {\n        var n = L.get(this._iid),\n            t = n.Command,\n            i = n.FileMessage,\n            a = e.fileInfo,\n            s = t.bFile(y({}, a, { requestId: e.requestId, channelUrl: this.channel.url, url: a.file, metaArrays: a.metaArrays })),\n            o = dn.getInstance(this._iid),\n            u = $.get(this._iid);o.getConnectionState() !== o.ConnectionState.OPEN && o.currentUser && !o.connecting ? u.container.apiClient.sendFileMessage(y({ channelUrl: this.channel.url, isOpenChannel: this.channel.isOpenChannel() }, a, { fileUrl: a.file, fileName: a.name, fileSize: a.size, fileType: a.type, metaArrays: a.metaArrays }), function (e, n) {\n          var t = new i(e ? s.getJsonElement() : n);e && (t.requestedMentionUserIds = a.mentionedUserIds), r(e, t);\n        }) : o.sendCommand(s).then(function (e) {\n          var n = new i(e.getJsonElement());r(null, n);\n        }).catch(function (e) {\n          var n = new i(s.getJsonElement());n.requestedMentionUserIds = a.mentionedUserIds, r(e, n);\n        });\n      } }, { key: "_uploadFile", value: function value(r, i) {\n        var a = r.fileInfo,\n            e = r.pendingMessage;if ("string" != typeof a.file && a.file) {\n          var s = L.get(this._iid).FileMessageQueue;$.get(this._iid).container.apiClient.uploadFile(y({}, a, { fileType: a.type, channelUrl: this.channel.url, reqId: e ? e.reqId : null }), function (e, n) {\n            if (e) r.state = s.State.SENT, r.error = e, r.response = null, i(a);else {\n              var t = "object" === Z(n) ? n : JSON.parse(n);a.file = t.url, a.thumbnailSizes = t.hasOwnProperty("thumbnails") ? t.thumbnails : [], a.requireAuth = !!t.hasOwnProperty("require_auth") && t.require_auth, i(a);\n            }\n          });\n        } else a.thumbnailSizes = [], a.requireAuth = !1, i(a);\n      } }, { key: "_finalizeUpload", value: function value(e) {\n        var n = this.uploadQueue.map(function (e) {\n          return e.requestId;\n        }).indexOf(e);if (-1 < n) {\n          var t = this.uploadQueue.splice(n, 1);0 < t.length && this._handleUploadQueueUpdated("remove", t[0]);\n        }\n      } }, { key: "_finalizeMessage", value: function value() {\n        var t = this,\n            r = $.get(this._iid).container.isErrorFirstInCallback,\n            i = dn.getInstance(this._iid),\n            e = L.get(this._iid),\n            n = e.GroupChannel,\n            a = e.BaseMessage,\n            s = e.FileMessageQueue,\n            o = this.messageQueue[0];if (o && o.state === s.State.SENT) {\n          o.state = s.State.DONE;var u = o.response,\n              l = o.error,\n              c = o.fileInfo.callback;if (u && !l) {\n            var d = i.currentUser;if (d && u._sender && d.userId === u._sender.userId && (d.nickname !== u._sender.nickname && (d.nickname = u._sender.nickname), d.profileUrl !== u._sender.profileUrl && (d.profileUrl = u._sender.profileUrl)), this.channel.isGroupChannel()) return void n.getChannel(this.channel.url).then(function (e) {\n              for (var n in e.lastMessage = u, i.channelHandlers) {\n                i.channelHandlers[n].onChannelChanged(e);\n              }r ? c(l, u) : c(u, l), t.messageQueue.shift(), t._handleMessageQueueUpdated("remove");\n            }).catch(function (e) {\n              r ? c(e, u) : c(u, e), t.messageQueue.shift(), t._handleMessageQueueUpdated("remove");\n            });\n          }l && (u = o.pendingMessage) && (l.code !== ee.INVALID_PARAMETER ? (u.requestState = a.MessageRequestState.FAILED, u.requestedMentionUserIds = o.fileInfo.mentionedUserIds) : u = null), r ? c(l, u) : c(u, l), this.messageQueue.shift(), this._handleMessageQueueUpdated("remove");\n        }\n      } }, { key: "addJob", value: function value(e) {\n        this.messageQueue.push(e), this._handleMessageQueueUpdated("add");\n      } }, { key: "cancelUploadItemByRequestId", value: function value(e, n) {\n        this._finalizeUpload(e);var t = this.messageQueue.map(function (e) {\n          return e.requestId;\n        }).indexOf(e);if (-1 < t) {\n          var r = L.get(this._iid).FileMessageQueue,\n              i = this.messageQueue[t];!i || i.state !== r.State.UPLOADING && i.state !== r.State.PENDING || (i.state = r.State.SENT, i.response = null, i.error = new ee("Uploading has been completed or canceled.", ee.FILE_UPLOAD_CANCEL_FAILED), this._handleMessageQueueUpdated("update"));var a = r.uploadRequest[e];if (a) return a.upload.onabort = function () {\n            n(null, !0);\n          }, a.isAbort = !0, a.abort(), !0;n(new ee("Uploading has been completed or canceled.", ee.FILE_UPLOAD_CANCEL_FAILED), !1);\n        } else n(new ee("Uploading has been completed or canceled.", ee.FILE_UPLOAD_CANCEL_FAILED), !1);return !1;\n      } }], [{ key: "getByChannelUrl", value: function value(e) {\n        return L.get(this._iid).FileMessageQueue.queueMap[e];\n      } }, { key: "create", value: function value(e) {\n        var n = L.get(this._iid).FileMessageQueue;return n.queueMap.hasOwnProperty(e.url) || (n.queueMap[e.url] = new n(e)), n.queueMap[e.url];\n      } }, { key: "delete", value: function value(e) {\n        var n = L.get(this._iid).FileMessageQueue;n.queueMap.hasOwnProperty(e) && delete n.queueMap[e];\n      } }, { key: "clear", value: function value() {\n        pe[this._iid] = {};\n      } }, { key: "State", get: function get() {\n        return { PENDING: "pending", UPLOADING: "uploading", UPLOADED: "uploaded", SENDING: "sending", SENT: "sent", DONE: "done" };\n      } }, { key: "queueMap", get: function get() {\n        return pe[this._iid] || (pe[this._iid] = {}), pe[this._iid];\n      } }, { key: "uploadRequest", get: function get() {\n        return he[this._iid] || (he[this._iid] = {}), he[this._iid];\n      } }]), n;\n  }();fe.Job = function () {\n    return function e(n) {\n      var t = n.fileInfo,\n          r = n.requestId,\n          i = n.pendingMessage,\n          a = n.state,\n          s = n.error,\n          o = void 0 === s ? null : s,\n          u = n.response,\n          l = void 0 === u ? null : u;_(this, e), this.fileInfo = t, this.requestId = r, this.pendingMessage = i, this.state = a || fe.State.PENDING, this.error = o, this.response = l;\n    };\n  }();var _e = function () {\n    function e() {\n      _(this, e);\n    }return s(e, null, [{ key: "create", value: function value() {\n        return "".concat(parseInt(1e5 * Math.random()), "-").concat(new Date().getTime());\n      } }]), e;\n  }(),\n      ye = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).state = "", n.isBlockedByMe = !1, n.isBlockingMe = !1, e && n._update(e), n;\n    }return o(t, se), s(t, [{ key: "_update", value: function value(e) {\n        this.state = e.state, e.hasOwnProperty("is_blocked_by_me") && (this.isBlockedByMe = e.is_blocked_by_me), e.hasOwnProperty("is_blocking_me") && (this.isBlockingMe = e.is_blocking_me);\n      } }, { key: "parse", value: function value(e) {\n        this._update(e);\n      } }], [{ key: "build", value: function value(e, n, t, r) {\n        var i = e;return i.state = n, i.is_blocked_by_me = t || !1, i.is_blocking_me = r || !1, i;\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.User,\n            r = n.Member,\n            i = V.deserialize(e);return new r(r.build(t.build(i.userId, i.nickname, i.profileUrl, i.connectionStatus, i.lastSeenAt, i.metaData, i.isActive, i.friendDiscoveryKey, i.friendName), i.state, i.isBlockedByMe, i.isBlockingMe));\n      } }, { key: "JOINED", get: function get() {\n        return "joined";\n      } }, { key: "INVITED", get: function get() {\n        return "invited";\n      } }]), t;\n  }();(m() || C()) && A(se, ye);var ge = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).isBlockedByMe = !1, e && n._update(e), n;\n    }return o(t, se), s(t, [{ key: "parse", value: function value(e) {\n        this._update(e);\n      } }, { key: "_update", value: function value(e) {\n        e.hasOwnProperty("is_blocked_by_me") && (this.isBlockedByMe = e.is_blocked_by_me);\n      } }], [{ key: "build", value: function value(e, n) {\n        var t = e;return t.is_blocked_by_me = n || !1, t;\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.User,\n            r = n.Sender,\n            i = V.deserialize(e);return new r(r.build(t.build.apply(t, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n          return i[e];\n        }))), i.isBlockedByMe));\n      } }]), t;\n  }();(m() || C()) && A(se, ge);var me = {},\n      Ce = {},\n      ve = new S(),\n      Ee = new S(),\n      Ue = new S(),\n      be = function () {\n    function a(e) {\n      var n;return _(this, a), (n = d(this, u(a).call(this, e))).channelType = ue.CHANNEL_TYPE_GROUP, n.isDistinct = !1, n.isSuper = !1, n.isPublic = !1, n.unreadMessageCount = 0, n.inviter = null, n.members = [], n.memberMap = {}, n.lastMessage = {}, n.memberCount = 0, n.joinedMemberCount = 0, n.cachedReadReceiptStatus = {}, n.myPushTriggerOption = a.PushTriggerOption.DEFAULT, n.isPushEnabled, n.isHidden = !1, n.hiddenState = a.HiddenState.UNHIDDEN, n.isDiscoverable = !0, n.myLastRead = 0, n._messageOffsetTimestamp = 0, ve.set(t(n), {}), Ee.set(t(n), { start: 0, end: 0 }), Ue.set(t(n), 0), e && n._update(e), n;\n    }return o(a, ue), s(a, [{ key: "_setGroupChannelUnreadCount", value: function value(e, n) {\n        try {\n          "number" == typeof e && 0 <= e && ("all" === this.myCountPreference || "unread_message_count_only" === this.myCountPreference ? this.isSuper ? this.unreadMessageCount = 1 <= e ? 1 : 0 : this.unreadMessageCount = e : this.unreadMessageCount = 0), "number" == typeof n && 0 <= n && ("all" === this.myCountPreference || "unread_mention_count_only" === this.myCountPreference ? this.unreadMentionCount = n : this.unreadMentionCount = 0);\n        } catch (e) {}\n      } }, { key: "_update", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.BaseChannel,\n            r = n.GroupChannel,\n            i = n.User,\n            a = n.Member;if (this.isAccessCodeRequired = !!e.is_access_code_required && e.is_access_code_required, this.isDistinct = !!e.is_distinct && e.is_distinct, this.isPushEnabled = !!e.is_push_enabled && e.is_push_enabled, this.isHidden = !!e.hasOwnProperty("is_hidden") && e.is_hidden, this.myPushTriggerOption = e.push_trigger_option ? e.push_trigger_option : r.PushTriggerOption.DEFAULT, this.myCountPreference = e.hasOwnProperty("count_preference") ? e.count_preference : r.CountPreference.ALL, this.unreadMessageCount = 0, this.unreadMentionCount = 0, this._setGroupChannelUnreadCount(parseInt(e.unread_message_count), parseInt(e.unread_mention_count)), e.hasOwnProperty("read_receipt")) for (var s in this.cachedReadReceiptStatus = {}, e.read_receipt) {\n          var o = e.read_receipt[s];this.updateReadReceipt(s, parseInt(o));\n        }if (e.hasOwnProperty("user_last_read") && "number" == typeof e.user_last_read ? this.myLastRead = e.user_last_read : this.myLastRead = 0, e.hasOwnProperty("members")) {\n          this.members = [], this.memberMap = {};for (var u = 0; u < e.members.length; u++) {\n            var l = new a(e.members[u]);this.members.push(l), this.memberMap[l.userId] = l;\n          }\n        }this.myMemberState = e.member_state || "none", this.myRole = e.my_role || r.Role.NONE, e.hasOwnProperty("is_muted") ? "string" == typeof e.is_muted ? this.myMutedState = e.is_muted : "boolean" == typeof e.is_muted ? this.myMutedState = e.is_muted ? "muted" : "unmuted" : this.myMutedState = "unmuted" : this.myMutedState = "unmuted", e.hasOwnProperty("member_count") && (this.memberCount = parseInt(e.member_count)), e.hasOwnProperty("joined_member_count") && (this.joinedMemberCount = parseInt(e.joined_member_count)), e.hasOwnProperty("last_message") && "object" === Z(e.last_message) && e.last_message ? e.last_message instanceof W ? this.lastMessage = e.last_message : this.lastMessage = t.buildMessage(e.last_message, this) : this.lastMessage = null, e.hasOwnProperty("inviter") && null !== e.inviter && "object" === Z(e.inviter) && 0 < Object.keys(e.inviter).length ? this.inviter = new i(e.inviter) : this.inviter = null, this.invitedAt = e.invited_at || 0, e.hasOwnProperty("is_super") && "boolean" == typeof e.is_super ? this.isSuper = e.is_super : this.isSuper = !1, e.hasOwnProperty("is_public") && "boolean" == typeof e.is_public ? this.isPublic = e.is_public : this.isPublic = !1, e.hasOwnProperty("hidden_state") ? this.hiddenState = e.hidden_state : this.hiddenState = r.HiddenState.UNHIDDEN, e.hasOwnProperty("is_discoverable") && "boolean" == typeof e.is_discoverable ? this.isDiscoverable = e.is_discoverable : this.isDiscoverable = this.isPublic, e.hasOwnProperty("ts_message_offset") && (this._messageOffsetTimestamp = e.ts_message_offset);\n      } }, { key: "addMember", value: function value(e) {\n        if (!this.isSuper) {\n          var n = L.get(this._iid).Member,\n              t = this.removeMember(e);t && t.state === n.JOINED && (e.state = n.JOINED), this.memberMap[e.userId] = e, this.members.push(e), this.memberCount++, this.updateReadReceipt(e.userId, 0);\n        }\n      } }, { key: "removeMember", value: function value(e) {\n        var n = null;if (!this.isSuper && this.memberMap.hasOwnProperty(e.userId)) {\n          delete this.memberMap[e.userId];for (var t = 0; t < this.members.length; t++) {\n            var r = this.members[t];if (r.userId === e.userId) {\n              n = r, this.members.splice(t, 1);break;\n            }\n          }this.memberCount--;\n        }return n;\n      } }, { key: "parse", value: function value(e) {\n        this._update(e);\n      } }, { key: "update", value: function value(e) {\n        this.__update(e), this._update(e);\n      } }, { key: "isIdentical", value: function value(e) {\n        return e && this.url === e.url;\n      } }, { key: "isEqual", value: function value(e) {\n        return te.deepEqual(this, e);\n      } }, { key: "createMemberListQuery", value: function value() {\n        return new (L.get(this._iid).MemberListQuery)(this.url);\n      } }, { key: "createBannedUserListQuery", value: function value() {\n        return new (L.get(this._iid).BannedUserListQuery)({ channelUrl: this.url, isOpenChannel: this.isOpenChannel() });\n      } }, { key: "refresh", value: function value(e) {\n        return L.get(this._iid).GroupChannel.getChannelWithoutCache(this.url, e);\n      } }, { key: "updateChannel", value: function value() {\n        var n = this,\n            t = Q.toArray(arguments),\n            e = void 0;"function" == typeof t[t.length - 1] && (e = t.pop());var r = L.get(this._iid),\n            i = r.GroupChannel,\n            a = r.GroupChannelParams;if (t[0] instanceof a && 1 === t.length) return K(this._iid, function (r) {\n          var e = t[0];(e.channelUrl = n.url, e._validate()) ? $.get(n._iid).container.apiClient.updateGroupChannel(y({}, e), function (e, n) {\n            var t = null;e || (t = i.upsert(n)), r(e, t);\n          }) : r(Q.error, null);\n        }, e);if (3 === t.length) {\n          var s = new a();return s.channelUrl = this.url, s.name = t[0], "string" == typeof t[1] ? s.coverUrl = t[1] : s.coverImage = t[1], s.data = t[2], this.updateChannel(s, e);\n        }if (4 === t.length) {\n          var o = new a();return o.channelUrl = this.url, o.isDistinct = t[0], o.name = t[1], "string" == typeof t[1] ? o.coverUrl = t[2] : o.coverImage = t[2], o.data = t[3], this.updateChannel(o, e);\n        }if (5 !== t.length) return K(this._iid, function (e) {\n          return e(Q.error, null);\n        }, e);var u = new a();return u.channelUrl = this.url, u.isDistinct = t[0], u.name = t[1], "string" == typeof t[2] ? u.coverUrl = t[2] : u.coverImage = t[2], u.data = t[3], u.customType = t[4], this.updateChannel(u, e);\n      } }, { key: "invite", value: function value(e, n) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return 0 < e.length && e.every(function (e) {\n              return !!e.userId && "string" == typeof e.userId;\n            });\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], t ? K(this._iid, function (e) {\n          return e(Q.error, null);\n        }, n) : this.inviteWithUserIds(e.map(function (e) {\n          return e.userId;\n        }), n);\n      } }, { key: "inviteWithUserIds", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.inviteToGroupChannel({ channelUrl: i.url, userIds: e }, function (e, n) {\n            var t = null;e || (t = L.get(i._iid).GroupChannel.upsert(n));r(e, t);\n          });\n        }, n);\n      } }, { key: "acceptInvitation", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", optional: !0, defaultValue: null }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.acceptInvitation({ channelUrl: i.url, accessCode: e }, function (e, n) {\n            var t = null;e || ((t = L.get(i._iid).GroupChannel.upsert(n)).myMemberState = "joined");r(e, t);\n          });\n        }, n);\n      } }, { key: "declineInvitation", value: function value(e) {\n        var a = this;return K(this._iid, function (i) {\n          $.get(a._iid).container.apiClient.declineInvitation({ channelUrl: a.url }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).GroupChannel;(t = r.upsert(n)).myMemberState = "none", a.isPublic || r.removeCachedChannel(a.url);\n            }i(e, t);\n          });\n        }, e);\n      } }, { key: "join", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", optional: !0, defaultValue: null }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.joinGroupChannel({ channelUrl: i.url, accessCode: e }, function (e, n) {\n            var t = null;e || ((t = L.get(i._iid).GroupChannel.upsert(n)).myMemberState = "joined");r(e, t);\n          });\n        }, n);\n      } }, { key: "leave", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.leaveGroupChannel({ channelUrl: n.url }, function (e, n) {\n            return t(e, null);\n          });\n        }, e);\n      } }, { key: "muteUser", value: function value(e, n, t, r) {\n        return this.muteUserWithUserId(e ? e.userId : null, n, t, r);\n      } }, { key: "muteUserWithUserId", value: function value(e, n, r, t) {\n        var i,\n            a = this,\n            s = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "number", optional: !0, defaultValue: -1, constraint: function constraint(e) {\n            return -1 <= e;\n          } }), new Q({ type: "string", optional: !0, defaultValue: "" }), new Q({ type: "callback" })]), 5);return i = s[0], e = s[1], n = s[2], r = s[3], t = s[4], K(this._iid, function (t) {\n          i ? t(i, null) : $.get(a._iid).container.apiClient.muteUser({ channelUrl: a.url, userId: e, description: r, seconds: n, isGroupChannel: !0 }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "unmuteUser", value: function value(e, n) {\n        return this.unmuteUserWithUserId(e ? e.userId : null, n);\n      } }, { key: "unmuteUserWithUserId", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.unmuteUser({ channelUrl: i.url, userId: e, isGroupChannel: !0 }, function (e, n) {\n            t(e, null);\n          });\n        }, n);\n      } }, { key: "banUser", value: function value(e, n, t, r) {\n        return this.banUserWithUserId(e ? e.userId : null, n, t, r);\n      } }, { key: "banUserWithUserId", value: function value(e, n, r, t) {\n        var i,\n            a = this,\n            s = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "number", optional: !0, defaultValue: -1, constraint: function constraint(e) {\n            return -1 <= e;\n          } }), new Q({ type: "string" }), new Q({ type: "callback" })]), 5);return i = s[0], e = s[1], n = s[2], r = s[3], t = s[4], K(this._iid, function (t) {\n          i ? t(i, null) : $.get(a._iid).container.apiClient.banUser({ channelUrl: a.url, userId: e, description: r, seconds: n, isGroupChannel: !0 }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "unbanUser", value: function value(e, n) {\n        return this.unbanUserWithUserId(e ? e.userId : null, n);\n      } }, { key: "unbanUserWithUserId", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.unbanUser({ channelUrl: i.url, userId: e, isGroupChannel: !0 }, function (e, n) {\n            t(e, null);\n          });\n        }, n);\n      } }, { key: "updateJoinedMemberCount", value: function value() {\n        if (!this.isSuper) {\n          var n = L.get(this._iid).Member;this.joinedMemberCount = this.members.filter(function (e) {\n            return e.state === n.JOINED;\n          }).length;\n        }\n      } }, { key: "setLatestMemberCount", value: function value(e, n, t) {\n        "number" == typeof e && "number" == typeof n && "number" == typeof t && t >= Ue.get(this) && (Ue.set(this, t), this.memberCount = e, this.joinedMemberCount = n);\n      } }, { key: "hide", value: function value(i, a, e) {\n        var n,\n            s = this,\n            t = g(Q.parse(arguments, [new Q({ type: "boolean", optional: !0, defaultValue: !1 }), new Q({ type: "boolean", optional: !0, defaultValue: !0 }), new Q({ type: "callback" })]), 4);return n = t[0], i = t[1], a = t[2], e = t[3], K(this._iid, function (r) {\n          n ? r(n, null) : $.get(s._iid).container.apiClient.hideGroupChannel({ channelUrl: s.url, hidePreviousMessages: i, allowAutoUnhide: a }, function (e, n) {\n            if (!e) {\n              var t = L.get(s._iid).GroupChannel;s.isHidden = !0, s.hiddenState = a ? t.HiddenState.HIDDEN_ALLOW_AUTO_UNHIDE : t.HiddenState.HIDDEN_PREVENT_AUTO_UNHIDE, i && s._setGroupChannelUnreadCount(0, 0), n.hasOwnProperty("ts_message_offset") && (s._messageOffsetTimestamp = n.ts_message_offset), t.cachedChannels[s.url] = s;\n            }r(e, n);\n          });\n        }, e);\n      } }, { key: "unhide", value: function value(e) {\n        var i = this;return K(this._iid, function (r) {\n          $.get(i._iid).container.apiClient.unhideGroupChannel({ channelUrl: i.url }, function (e, n) {\n            if (!e) {\n              var t = L.get(i._iid).GroupChannel;i.isHidden = !1, i.hiddenState = t.HiddenState.UNHIDDEN, t.cachedChannels[i.url] = i;\n            }r(e, n);\n          });\n        }, e);\n      } }, { key: "freeze", value: function value(e) {\n        var r = this;return K(this._iid, function (t) {\n          $.get(r._iid).container.apiClient.freeze({ channelUrl: r.url, isGroupChannel: !0, freezing: !0 }, function (e, n) {\n            e || L.get(r._iid).GroupChannel.upsert(n);t(e, null);\n          });\n        }, e);\n      } }, { key: "unfreeze", value: function value(e) {\n        var r = this;return K(this._iid, function (t) {\n          $.get(r._iid).container.apiClient.freeze({ channelUrl: r.url, isGroupChannel: !0, freezing: !1 }, function (e, n) {\n            e || L.get(r._iid).GroupChannel.upsert(n);t(e, null);\n          });\n        }, e);\n      } }, { key: "delete", value: function value(e) {\n        var r = this;return K(this._iid, function (t) {\n          $.get(r._iid).container.apiClient.deleteGroupChannel({ channelUrl: r.url }, function (e, n) {\n            e || L.get(r._iid).GroupChannel.removeCachedChannel(r.url);t(e, n);\n          });\n        }, e);\n      } }, { key: "markAsRead", value: function value() {\n        var t = this,\n            e = L.get(this._iid).Command,\n            r = dn.getInstance(this._iid),\n            n = e.bRead({ channelUrl: this.url });r.sendCommand(n).then(function (e) {\n          if (t.updateReadReceipt(r.currentUser.userId, e.getJsonElement().ts), 0 < t.unreadMessageCount || 0 < t.unreadMentionCount) for (var n in t._setGroupChannelUnreadCount(0, 0), r.channelHandlers) {\n            r.channelHandlers[n].onChannelChanged(t);\n          }\n        }).catch(function (e) {});\n      } }, { key: "getReadReceipt", value: function value(e) {\n        var n = dn.getInstance(this._iid);if (e instanceof W && !e.isAdminMessage() && n.currentUser) {\n          for (var t = 0, r = e.createdAt, i = this.members, a = 0; a < i.length; a++) {\n            var s = i[a];if (n.currentUser.userId !== s.userId && (!e.sender || e.sender.userId !== s.userId)) (this.cachedReadReceiptStatus[s.userId] || 0) < r && t++;\n          }return this.isSuper ? 0 : t;\n        }return 0;\n      } }, { key: "getReadMembers", value: function value(e, n) {\n        var t = 1 < arguments.length && void 0 !== n && n,\n            r = dn.getInstance(this._iid);if (r.currentUser && !this.isSuper && e instanceof W && !e.isAdminMessage()) {\n          for (var i = [], a = 0; a < this.members.length; a++) {\n            var s = this.members[a];if (t || s.userId !== r.currentUser.userId && s.userId !== e.sender.userId) (this.cachedReadReceiptStatus[s.userId] || 0) >= e.createdAt && i.push(s);\n          }return i;\n        }return [];\n      } }, { key: "getUnreadMembers", value: function value(e, n) {\n        var t = 1 < arguments.length && void 0 !== n && n,\n            r = dn.getInstance(this._iid);if (r.currentUser && !this.isSuper && e instanceof W && !e.isAdminMessage()) {\n          for (var i = [], a = 0; a < this.members.length; a++) {\n            var s = this.members[a];if (t || s.userId !== r.currentUser.userId && s.userId !== e.sender.userId) (this.cachedReadReceiptStatus[s.userId] || 0) < e.createdAt && i.push(s);\n          }return i;\n        }return [];\n      } }, { key: "getReadStatus", value: function value(e) {\n        var r = this,\n            i = 0 < arguments.length && void 0 !== e && e,\n            a = dn.getInstance(this._iid);if (!a.currentUser || this.isSuper) return {};function n(n) {\n          if (!i && n === a.currentUser.userId) return "continue";var e = r.cachedReadReceiptStatus[n],\n              t = r.members.filter(function (e) {\n            return e.userId === n;\n          });s[n] = { user: 0 < t.length ? t[0] : null, last_seen_at: parseInt(e) };\n        }var s = {};for (var t in this.cachedReadReceiptStatus) {\n          n(t);\n        }return s;\n      } }, { key: "updateReadReceipt", value: function value(e, n) {\n        var t = this.cachedReadReceiptStatus[e];if (!t || t < n) {\n          this.cachedReadReceiptStatus[e] = n;var r = dn.getInstance(this._iid);r.currentUser && e === r.currentUser.userId && (this.myLastRead = n);\n        }\n      } }, { key: "startTyping", value: function value() {\n        var e = dn.getInstance(this._iid),\n            n = new Date().getTime(),\n            t = e.Options.typingIndicatorThrottle;("number" != typeof t || t < 1e3 || 9e3 < t) && (t = 1e3);var r = Ee.get(this);if (n - r.start >= t) {\n          r.end = 0, r.start = n;var i = L.get(this._iid).Command.bTypeStart({ channelUrl: this.url, time: r.start });e.sendCommand(i, null);\n        }\n      } }, { key: "endTyping", value: function value() {\n        var e = dn.getInstance(this._iid),\n            n = new Date().getTime(),\n            t = e.Options.typingIndicatorThrottle;("number" != typeof t || t < 1e3 || 9e3 < t) && (t = 1e3);var r = Ee.get(this);if (n - r.end >= t) {\n          r.start = 0, r.end = n;var i = L.get(this._iid).Command.bTypeEnd({ channelUrl: this.url, time: r.end });e.sendCommand(i, null);\n        }\n      } }, { key: "invalidateTypingStatus", value: function value() {\n        var e = ve.get(this),\n            n = new Date().getTime(),\n            t = !1;for (var r in e) {\n          1e4 <= n - e[r] && (delete e[r], t = !0);\n        }return t;\n      } }, { key: "getTypingMembers", value: function value() {\n        var e = ve.get(this),\n            n = [];for (var t in e) {\n          var r = this.memberMap[t];r && n.push(r);\n        }return n;\n      } }, { key: "updateTypingStatus", value: function value(e, n) {\n        var t = ve.get(this);n ? t[e.userId] = new Date().getTime() : delete t[e.userId];\n      } }, { key: "isTyping", value: function value() {\n        var e = ve.get(this);return 0 !== Object.keys(e).length;\n      } }, { key: "registerScheduledUserMessage", value: function value(e, n) {\n        var t,\n            a = this,\n            r = L.get(this._iid),\n            s = r.ScheduledUserMessage,\n            i = r.ScheduledUserMessageParams,\n            o = g(Q.parse(arguments, [new Q({ type: i, constraint: function constraint(e) {\n            return "string" == typeof e.message && "string" == typeof e._getScheduleString();\n          } }), new Q({ type: "callback" })]), 3);return t = o[0], e = o[1], n = o[2], K(this._iid, function (i) {\n          t ? i(t, null) : $.get(a._iid).container.apiClient.registerScheduledUserMessage({ groupChannelParams: e, channelUrl: a.url, isOpenChannel: !1 }, function (e, n) {\n            var t = null;if (!e) {\n              t = new s(n);var r = dn.getInstance(a._iid).currentUser;r && t._sender && r.userId === t._sender.userId && (r.nickname = t._sender.nickname, r.profileUrl = t._sender.profileUrl, r.metaData = t._sender.metaData);\n            }i(e, t);\n          });\n        }, n);\n      } }, { key: "getPushPreference", value: function value(e) {\n        var i = this;return K(this._iid, function (r) {\n          $.get(i._iid).container.apiClient.getMyPushTriggerOption({ channelUrl: i.url }, function (e, n) {\n            var t = null;if (!e) {\n              try {\n                t = response.enable;\n              } catch (e) {\n                t = !1;\n              }i.isPushEnabled = t;\n            }r && r(e, t);\n          });\n        }, e);\n      } }, { key: "setPushPreference", value: function value(e, n) {\n        var i = this;return K(this._iid, function (t) {\n          var r = L.get(i._iid).GroupChannel;$.get(i._iid).container.apiClient.setMyPushTriggerOption({ channelUrl: i.url, enable: e }, function (e, n) {\n            e || (i.isPushEnabled = response.enable, i.isPushEnabled || (i.myPushTriggerOption = r.PushTriggerOption.OFF)), t(e, n);\n          });\n        }, n);\n      } }, { key: "getMyPushTriggerOption", value: function value(e) {\n        var i = this;return K(this._iid, function (r) {\n          $.get(i._iid).container.apiClient.getMyPushTriggerOption({ channelUrl: i.url }, function (e, n) {\n            var t = null;if (!e) {\n              try {\n                t = n.push_trigger_option || a.PushTriggerOption.DEFAULT;\n              } catch (e) {}i.myPushTriggerOption = t;\n            }r(e, t);\n          });\n        }, e);\n      } }, { key: "setMyPushTriggerOption", value: function value(e, n) {\n        var t,\n            i = this,\n            r = L.get(this._iid).GroupChannel,\n            a = g(Q.parse(arguments, [new Q({ type: r.PushTriggerOption }), new Q({ type: "callback" })]), 3);return t = a[0], e = a[1], n = a[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.setMyPushTriggerOption({ channelUrl: i.url, pushTriggerOption: e }, function (e, n) {\n            var t = null;if (!e) {\n              try {\n                t = n.push_trigger_option;\n              } catch (e) {}i.myPushTriggerOption = t;\n            }r(e, t);\n          });\n        }, n);\n      } }, { key: "setMyCountPreference", value: function value(e, n) {\n        var t,\n            i = this,\n            a = L.get(this._iid).GroupChannel,\n            r = g(Q.parse(arguments, [new Q({ type: a.CountPreference }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.setMyCountPreference({ channelUrl: i.url, countPreference: e }, function (e, n) {\n            var t = null;e || (t = i.myCountPreference = n.count_preference, i._setGroupChannelUnreadCount(i.unreadMessageCount, i.unreadMentionCount), a.cachedChannels[i.url] = i), r(e, t);\n          });\n        }, n);\n      } }, { key: "resetMyHistory", value: function value(e) {\n        var i = this;return K(this._iid, function (r) {\n          $.get(i._iid).container.apiClient.resetMyHistory({ channelUrl: i.url }, function (e, n) {\n            if (!e && n.hasOwnProperty("ts_message_offset")) {\n              var t = L.get(i._iid).GroupChannel;i._messageOffsetTimestamp = n.ts_message_offset, t.cachedChannels[i.url] = i;\n            }r(e, n);\n          });\n        }, e);\n      } }, { key: "messageOffsetTimestamp", get: function get() {\n        return this._messageOffsetTimestamp;\n      } }], [{ key: "buildFromSerializedData", value: function value(e) {\n        var n,\n            t = L.get(this._iid),\n            r = t.User,\n            i = t.Member,\n            a = t.GroupChannel,\n            s = t.BaseMessage,\n            o = t.UserMessage,\n            u = t.FileMessage,\n            l = t.AdminMessage,\n            c = V.deserialize(e);return new a({ channel_url: c.url, name: c.name, cover_url: c.coverUrl, data: c.data, custom_type: c.customType, invited_at: c.invitedAt, created_at: c.createdAt / 1e3, is_access_code_required: c.isAccessCodeRequired, is_distinct: c.isDistinct, is_super: c.isSuper, is_public: c.isPublic, is_discoverable: c.isDiscoverable, freeze: c.isFrozen, is_ephemeral: c.isEphemeral, unread_message_count: c.unreadMessageCount, unread_mention_count: c.unreadMentionCount, is_push_enabled: c.isPushEnabled, push_trigger_option: c.myPushTriggerOption, count_preference: c.myCountPreference, is_hidden: c.isHidden, hidden_state: c.hiddenState, member_count: c.memberCount, joined_member_count: c.joinedMemberCount, member_state: c.myMemberState, my_role: c.myRole, is_muted: c.myMutedState, user_last_read: c.myLastRead, ts_message_offset: c.messageOffsetTimestamp, members: c.members.map(function (e) {\n            return i.build(r.build(e.userId, e.nickname, e.profileUrl, e.connectionStatus, e.lastSeenAt, e.metaData, e.isActive, e.friendDiscoveryKey, e.friendName), e.state, e.isBlockedByMe, e.isBlockingMe);\n          }), last_message: (n = c.lastMessage, null != n && "object" === Z(n) ? n.messageType === s.MESSAGE_TYPE_USER ? new o(o.build(n.reqId, n.messageId, n.user, { url: n.channelUrl, channelType: n.channelType }, n.message, n.data, n.customType, n.translations, n.isGlobalBlocked, n.createdAt, n.updatedAt, n.metaArrays, n.mentionType, n.mentionedUsers, n.mentionedUserIds, n.requestState, n.requestedMentionUserIds)) : n.messageType === s.MESSAGE_TYPE_FILE ? new u(u.build(n.reqId, n.messageId, n.user, { url: n.channelUrl, channelType: n.channelType }, n.url, n.name, n.type, n.size, n.data, n.customType, n.isGlobalBlocked, n.createdAt, n.thumbnails, n.requireAuth, n.updatedAt, n.metaArrays, n.mentionType, n.mentionedUsers, n.mentionedUserIds, n.requestState, n.requestedMentionUserIds)) : new l(l.build(n.messageId, { url: n.channelUrl, channelType: n.channelType }, n.message, n.data, n.customType, n.translations, n.createdAt, n.updatedAt, n.metaArrays, n.mentionType, n.mentionedUsers)) : null), read_receipt: c.cachedReadReceiptStatus, inviter: null !== c.inviter && void 0 !== c.inviter && "object" === Z(c.inviter) ? r.build.apply(r, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n            return c.inviter[e];\n          }))) : null, __wk: c.__wk });\n      } }, { key: "upsert", value: function value(e) {\n        var n = L.get(this._iid).GroupChannel,\n            t = new n(e);if (n.cachedChannels.hasOwnProperty(t.url)) {\n          if (t.isEphemeral) {\n            var r = n.cachedChannels[t.url];e.last_message = r.lastMessage, e.unread_message_count = r.unreadMessageCount;\n          }n.cachedChannels[t.url].update(e);\n        } else n.cachedChannels[t.url] = t;return n.cachedChannels[t.url];\n      } }, { key: "removeCachedChannel", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.GroupChannel,\n            r = n.FileMessageQueue;t.cachedChannels[e] && delete t.cachedChannels[e], r.delete(e);\n      } }, { key: "clearCache", value: function value() {\n        me[this._iid] = {}, L.get(this._iid).FileMessageQueue.clear();\n      } }, { key: "getChannel", value: function value(n, e) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);if (t = r[0], n = r[1], e = r[2], t) return K(this._iid, function (e) {\n          e(t, null);\n        }, e);var i = L.get(this._iid).GroupChannel;return i.cachedChannels[n] ? K(this._iid, function (e) {\n          e(null, i.cachedChannels[n]);\n        }, e) : i.getChannelWithoutCache(n, e);\n      } }, { key: "getChannelWithoutCache", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.getGroupChannel({ channelUrl: e, showMember: !0, showReadReceipt: !0 }, function (e, n) {\n            var t = null;e || (t = L.get(i._iid).GroupChannel.upsert(n));r(e, t);\n          });\n        }, n);\n      } }, { key: "createDistinctChannelIfNotExist", value: function value(e, n) {\n        var t,\n            a = this,\n            r = L.get(this._iid).GroupChannelParams,\n            i = g(Q.parse(arguments, [new Q({ type: r, constraint: function constraint(e) {\n            return e._validate();\n          } }), new Q({ type: "callback" })]), 3);return t = i[0], e = i[1], n = i[2], K(this._iid, function (i) {\n          t ? i(t, null) : (e.isPublic || (e.accessCode = null), $.get(a._iid).container.apiClient.createGroupChannel(y({}, e, { isDistinct: !0 }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).GroupChannel;t = { channel: new r(n), isCreated: n.is_created }, r.cachedChannels[t.channel.url] = t.channel;\n            }i(e, t);\n          }));\n        }, n);\n      } }, { key: "createChannel", value: function value() {\n        var n = this,\n            t = Q.toArray(arguments),\n            e = void 0;"function" == typeof t[t.length - 1] && (e = t.pop());var r = L.get(this._iid),\n            i = r.GroupChannel,\n            a = r.GroupChannelParams;if (t[0] instanceof a && 1 === t.length) return K(this._iid, function (r) {\n          var e = t[0];(e.isPublic || (e.accessCode = null), e._validate()) ? $.get(n._iid).container.apiClient.createGroupChannel(e, function (e, n) {\n            var t = null;e || (t = new i(n), i.cachedChannels[t.url] = t), r(e, t);\n          }) : r(Q.error, null);\n        }, e);if (Array.isArray(t[0])) {\n          var s = new a();switch (t.length) {case 1:\n              s.addUsers(t[0]);break;case 2:\n              s.addUsers(t[0]), s.isDistinct = t[1];break;case 3:\n              s.addUsers(t[0]), s.isDistinct = t[1], s.customType = t[2];break;case 5:\n              s.addUsers(t[0]), s.isDistinct = t[1], s.name = t[2], "string" == typeof t[3] ? s.coverUrl = t[3] : s.coverImage = t[3], s.data = t[4];break;case 6:\n              s.addUsers(t[0]), s.isDistinct = t[1], s.name = t[2], "string" == typeof t[3] ? s.coverUrl = t[3] : s.coverImage = t[3], s.data = t[4], s.customType = t[5];break;default:\n              return K(this._iid, function (e) {\n                return e(Q.error, null);\n              }, e);}return i.createChannel(s, e);\n        }return K(this._iid, function (e) {\n          return e(Q.error, null);\n        }, e);\n      } }, { key: "createChannelWithUserIds", value: function value() {\n        var e = Q.toArray(arguments),\n            n = void 0;"function" == typeof e[e.length - 1] && (n = e.pop());var t = L.get(this._iid),\n            r = t.GroupChannel,\n            i = new t.GroupChannelParams();switch (e.length) {case 1:\n            i.addUserIds(e[0]);break;case 2:\n            i.addUserIds(e[0]), i.isDistinct = e[1];break;case 3:\n            i.addUserIds(e[0]), i.isDistinct = e[1], i.customType = e[2];break;case 5:\n            i.addUserIds(e[0]), i.isDistinct = e[1], i.name = e[2], "string" == typeof e[3] ? i.coverUrl = e[3] : i.coverImage = e[3], i.data = e[4];break;case 6:\n            i.addUserIds(e[0]), i.isDistinct = e[1], i.name = e[2], "string" == typeof e[3] ? i.coverUrl = e[3] : i.coverImage = e[3], i.data = e[4], i.customType = e[5];break;default:\n            return K(this._iid, function (e) {\n              return e(Q.error, null);\n            }, n);}return r.createChannel(i, n);\n      } }, { key: "createMyGroupChannelListQuery", value: function value() {\n        return new (L.get(this._iid).GroupChannelListQuery)();\n      } }, { key: "createPublicGroupChannelListQuery", value: function value() {\n        return new (L.get(this._iid).PublicGroupChannelListQuery)();\n      } }, { key: "getChannelCount", value: function value(e, n) {\n        return dn.getInstance(this._iid).getGroupChannelCount(e, n);\n      } }, { key: "getUnreadItemCount", value: function value(e, n) {\n        return dn.getInstance(this._iid).getUnreadItemCount(e, n);\n      } }, { key: "getTotalUnreadMessageCount", value: function value() {\n        var e = Q.toArray(arguments),\n            n = "function" == typeof e[e.length - 1] ? e.pop() : null,\n            t = dn.getInstance(this._iid);return t.getTotalUnreadMessageCount.apply(t, E(e).concat([n]));\n      } }, { key: "getTotalUnreadChannelCount", value: function value(e) {\n        return dn.getInstance(this._iid).getTotalUnreadChannelCount(e);\n      } }, { key: "MemberStateFilter", get: function get() {\n        return { ALL: "all", JOINED: "joined_only", INVITED: "invited_only", INVITED_BY_FRIEND: "invited_by_friend", INVITED_BY_NON_FRIEND: "invited_by_non_friend" };\n      } }, { key: "PushTriggerOption", get: function get() {\n        return { DEFAULT: "default", ALL: "all", MENTION_ONLY: "mention_only", OFF: "off" };\n      } }, { key: "CountPreference", get: function get() {\n        return { ALL: "all", UNREAD_MESSAGE_COUNT_ONLY: "unread_message_count_only", UNREAD_MENTION_COUNT_ONLY: "unread_mention_count_only", OFF: "off" };\n      } }, { key: "HiddenState", get: function get() {\n        return { UNHIDDEN: "unhidden", HIDDEN_ALLOW_AUTO_UNHIDE: "hidden_allow_auto_unhide", HIDDEN_PREVENT_AUTO_UNHIDE: "hidden_prevent_auto_unhide" };\n      } }, { key: "PublicChannelFilter", get: function get() {\n        return { ALL: "all", PUBLIC: "public", PRIVATE: "private" };\n      } }, { key: "SuperChannelFilter", get: function get() {\n        return { ALL: "all", SUPER: "super", NON_SUPER: "nonsuper" };\n      } }, { key: "UnreadChannelFilter", get: function get() {\n        return { ALL: "all", UNREAD_MESSAGE: "unread_message" };\n      } }, { key: "HiddenChannelFilter", get: function get() {\n        return { UNHIDDEN: "unhidden_only", HIDDEN: "hidden_only", HIDDEN_ALLOW_AUTO_UNHIDE: "hidden_allow_auto_unhide", HIDDEN_PREVENT_AUTO_UNHIDE: "hidden_prevent_auto_unhide" };\n      } }, { key: "Role", get: function get() {\n        return { OPERATOR: "operator", NONE: "none" };\n      } }, { key: "UnreadItemKey", get: function get() {\n        return { GROUP_CHANNEL_UNREAD_MENTION_COUNT: "group_channel_unread_mention_count", NONSUPER_UNREAD_MENTION_COUNT: "non_super_group_channel_unread_mention_count", SUPER_UNREAD_MENTION_COUNT: "super_group_channel_unread_mention_count", GROUP_CHANNEL_UNREAD_MESSAGE_COUNT: "group_channel_unread_message_count", NONSUPER_UNREAD_MESSAGE_COUNT: "non_super_group_channel_unread_message_count", SUPER_UNREAD_MESSAGE_COUNT: "super_group_channel_unread_message_count", GROUP_CHANNEL_INVITATION_COUNT: "group_channel_invitation_count", NONSUPER_INVITATION_COUNT: "non_super_group_channel_invitation_count", SUPER_INVITATION_COUNT: "super_group_channel_invitation_count" };\n      } }, { key: "cachedChannels", get: function get() {\n        return me[this._iid] || (me[this._iid] = {}), me[this._iid];\n      } }, { key: "markAsReadAllLastSentAt", get: function get() {\n        return Ce[this._iid] || 0;\n      }, set: function set(e) {\n        Ce[this._iid] = e;\n      } }]), a;\n  }();(m() || C()) && A(ue, be);var Ae = {},\n      Ne = {},\n      Se = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).channelType = ue.CHANNEL_TYPE_OPEN, n.participantCount = 0, n.operators = [], e && n._update(e), n;\n    }return o(t, ue), s(t, [{ key: "_update", value: function value(e) {\n        var n = L.get(this._iid).User;if (e.hasOwnProperty("participant_count") && (this.participantCount = parseInt(e.participant_count)), e.hasOwnProperty("operators") && e.operators) {\n          this.operators = [];for (var t = 0; t < e.operators.length; t++) {\n            var r = new n(e.operators[t]);this.operators.push(r);\n          }\n        }\n      } }, { key: "parse", value: function value(e) {\n        this._update(e);\n      } }, { key: "update", value: function value(e) {\n        this.__update(e), this._update(e);\n      } }, { key: "createParticipantListQuery", value: function value() {\n        return new (L.get(this._iid).ParticipantListQuery)({ channelUrl: this.url });\n      } }, { key: "createMutedUserListQuery", value: function value() {\n        return new (L.get(this._iid).MutedUserListQuery)({ channelUrl: this.url, isOpenChannel: !0 });\n      } }, { key: "createBannedUserListQuery", value: function value() {\n        return new (L.get(this._iid).BannedUserListQuery)({ channelUrl: this.url, isOpenChannel: !0 });\n      } }, { key: "isOperator", value: function value(e) {\n        return !!e && this.isOperatorWithUserId(e.userId);\n      } }, { key: "isOperatorWithUserId", value: function value(e) {\n        return -1 < this.operators.map(function (e) {\n          return e.userId;\n        }).indexOf(e);\n      } }, { key: "refresh", value: function value(e) {\n        return L.get(this._iid).OpenChannel.getChannelWithoutCache(this.url, e);\n      } }, { key: "enter", value: function value(e) {\n        var t = this;return K(this._iid, function (n) {\n          var e = L.get(t._iid).Command.bEnter({ channelUrl: t.url });dn.getInstance(t._iid).sendCommand(e).then(function () {\n            L.get(t._iid).OpenChannel.enteredChannels[t.url] = t, n(null, null);\n          }).catch(function (e) {\n            e = e ? new ee(e.message, e.code) : null, n(e, null);\n          });\n        }, e);\n      } }, { key: "exit", value: function value(e) {\n        var a = this;return K(this._iid, function (n) {\n          var e = L.get(a._iid),\n              t = e.Command,\n              r = e.FileMessageQueue,\n              i = t.bExit({ channelUrl: a.url });dn.getInstance(a._iid).sendCommand(i).then(function () {\n            delete L.get(a._iid).OpenChannel.enteredChannels[a.url], r.delete(a.url), n(null, null);\n          }).catch(function (e) {\n            e = e ? new ee(e.message, e.code) : null, n(e, null);\n          });\n        }, e);\n      } }, { key: "updateChannel", value: function value(e, n, t, i, a, r) {\n        var s,\n            o = this,\n            u = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0 }), new Q({ type: ["string", "file"], nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "array", nullable: !0, optional: !0, defaultValue: [], constraint: function constraint(e) {\n            return e.map(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "string", nullable: !0, optional: !0 }), new Q({ type: "callback" })]), 7);return s = u[0], e = u[1], n = u[2], t = u[3], i = u[4], a = u[5], r = u[6], K(this._iid, function (r) {\n          s ? r(s, null) : $.get(o._iid).container.apiClient.updateOpenChannel({ channelUrl: o.url, name: e, coverUrlOrImage: n, data: t, operatorUserIds: i, customType: a }, function (e, n) {\n            var t = null;e || (t = L.get(o._iid).OpenChannel.upsert(n));r(e, t);\n          });\n        }, r);\n      } }, { key: "updateChannelWithOperatorUserIds", value: function value() {\n        var e = Q.toArray(arguments),\n            n = void 0;switch ("function" == typeof e[e.length - 1] && (n = e.pop()), e.length) {case 4:case 5:\n            return this.updateChannel.apply(this, E(e).concat([n]));default:\n            return K(this._iid, function (e) {\n              return e(Q.error, null);\n            }, n);}\n      } }, { key: "muteUser", value: function value(e, n, t, r) {\n        return this.muteUserWithUserId(e ? e.userId : null, n, t, r);\n      } }, { key: "muteUserWithUserId", value: function value(e, n, r, t) {\n        var i,\n            a = this,\n            s = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "number", optional: !0, defaultValue: -1, constraint: function constraint(e) {\n            return -1 <= e;\n          } }), new Q({ type: "string", optional: !0, defaultValue: "" }), new Q({ type: "callback" })]), 5);return i = s[0], e = s[1], n = s[2], r = s[3], t = s[4], K(this._iid, function (t) {\n          i ? t(i, null) : $.get(a._iid).container.apiClient.muteUser({ channelUrl: a.url, userId: e, description: r, seconds: n, isGroupChannel: !1 }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "unmuteUser", value: function value(e, n) {\n        return this.unmuteUserWithUserId(e ? e.userId : null, n);\n      } }, { key: "unmuteUserWithUserId", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.unmuteUser({ channelUrl: i.url, userId: e, isGroupChannel: !1 }, function (e, n) {\n            t(e, null);\n          });\n        }, n);\n      } }, { key: "banUser", value: function value(e, n, t) {\n        return this.banUserWithUserId(e ? e.userId : null, n, t);\n      } }, { key: "banUserWithUserId", value: function value(e, n, t) {\n        var r,\n            i = this,\n            a = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "number", optional: !0, defaultValue: -1, constraint: function constraint(e) {\n            return -1 <= e;\n          } }), new Q({ type: "callback" })]), 4);return r = a[0], e = a[1], n = a[2], t = a[3], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.banUser({ channelUrl: i.url, userId: e, description: null, seconds: n, isGroupChannel: !1 }, function (e, n) {\n            t(e, null);\n          });\n        }, t);\n      } }, { key: "unbanUser", value: function value(e, n) {\n        return this.unbanUserWithUserId(e ? e.userId : null, n);\n      } }, { key: "unbanUserWithUserId", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.unbanUser({ channelUrl: i.url, userId: e, isGroupChannel: !1 }, function (e, n) {\n            t(e, null);\n          });\n        }, n);\n      } }, { key: "delete", value: function value(e) {\n        var r = this;return K(this._iid, function (t) {\n          $.get(r._iid).container.apiClient.deleteOpenChannel({ channelUrl: r.url }, function (e, n) {\n            e || (delete L.get(r._iid).OpenChannel.cachedChannels[r.url], L.get(r._iid).FileMessageQueue.delete(r.url));t(e, n);\n          });\n        }, e);\n      } }], [{ key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.User,\n            r = n.OpenChannel,\n            i = V.deserialize(e);return new r({ channel_url: i.url, name: i.name, cover_url: i.coverUrl, data: i.data, custom_type: i.customType, created_at: i.createdAt / 1e3, freeze: i.isFrozen, is_ephemeral: i.isEphemeral, participant_count: i.participantCount, operators: i.operators.map(function (n) {\n            return t.build.apply(t, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n              return n[e];\n            })));\n          }), __wk: i.__wk });\n      } }, { key: "getChannel", value: function value(n, e) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);if (t = r[0], n = r[1], e = r[2], t) return K(this._iid, function (e) {\n          e(t, null);\n        }, e);var i = L.get(this._iid).OpenChannel;return i.cachedChannels[n] ? K(this._iid, function (e) {\n          e(null, i.cachedChannels[n]);\n        }, e) : i.getChannelWithoutCache(n, e);\n      } }, { key: "getChannelWithoutCache", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.getOpenChannel({ channelUrl: e }, function (e, n) {\n            var t = null;e || (t = L.get(i._iid).OpenChannel.upsert(n));r(e, t);\n          });\n        }, n);\n      } }, { key: "createChannel", value: function value(e, n, t, i, a, r) {\n        var s,\n            o = this,\n            u = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 0 === e.length;\n          } }), new Q({ type: ["string", "file"], nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 0 === e.length;\n          } }), new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 0 === e.length;\n          } }), new Q({ type: "array", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return e.length < 4;\n          }, constraint: function constraint(e) {\n            return e.map(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return e.length < 5;\n          } }), new Q({ type: "callback" })]), 7);return s = u[0], e = u[1], n = u[2], t = u[3], i = u[4], a = u[5], r = u[6], K(this._iid, function (r) {\n          s ? r(s, null) : $.get(o._iid).container.apiClient.createOpenChannel({ name: e, coverUrlOrImage: n, data: t, operatorUserIds: i, customType: a }, function (e, n) {\n            var t = null;e || (t = L.get(o._iid).OpenChannel.upsert(n));r(e, t);\n          });\n        }, r);\n      } }, { key: "createChannelWithOperatorUserIds", value: function value() {\n        var e = Q.toArray(arguments),\n            n = void 0;switch ("function" == typeof e[e.length - 1] && (n = e.pop()), e.length) {case 4:case 5:\n            return this.createChannel.apply(this, E(e).concat([n]));default:\n            return K(this._iid, function (e) {\n              return e(Q.error, null);\n            }, n);}\n      } }, { key: "upsert", value: function value(e) {\n        var n = new (L.get(this._iid).OpenChannel)(e);return this.cachedChannels.hasOwnProperty(n.url) ? this.cachedChannels[n.url].update(e) : this.cachedChannels[n.url] = n, this.cachedChannels[n.url];\n      } }, { key: "removeCachedChannel", value: function value(e) {\n        this.cachedChannels[e] && delete this.cachedChannels[e], L.get(this._iid).FileMessageQueue.delete(e);\n      } }, { key: "clearCache", value: function value() {\n        Ae[this._iid] = {}, L.get(this._iid).FileMessageQueue.clear();\n      } }, { key: "clearEnteredChannels", value: function value() {\n        Ne[this._iid] = {};\n      } }, { key: "createOpenChannelListQuery", value: function value() {\n        return new (L.get(this._iid).OpenChannelListQuery)();\n      } }, { key: "cachedChannels", get: function get() {\n        return Ae[this._iid] || (Ae[this._iid] = {}), Ae[this._iid];\n      } }, { key: "enteredChannels", get: function get() {\n        return Ne[this._iid] || (Ne[this._iid] = {}), Ne[this._iid];\n      } }]), t;\n  }();(m() || C()) && A(ue, Se);var Ie = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).messageType = W.MESSAGE_TYPE_USER, n.message = null, n._sender = null, n.reqId = "", n.translations = {}, n.requestState = null, n.requestedMentionUserIds = [], e && n._update(e), n;\n    }return o(t, W), s(t, [{ key: "_update", value: function value(e) {\n        var n = L.get(this._iid).Sender;this.message = String(e.message), this._sender = new n(e.user), this.reqId = e.hasOwnProperty("req_id") ? String(e.req_id) : "", this.translations = e.hasOwnProperty("translations") ? e.translations : {}, this.requestState = 0 < this.messageId ? W.MessageRequestState.SUCCEEDED : W.MessageRequestState.FAILED, e.hasOwnProperty("request_state") && (this.requestState = e.request_state), this.requestedMentionUserIds = [], e.hasOwnProperty("requested_mention_user_ids") && (this.requestedMentionUserIds = e.requested_mention_user_ids);\n      } }, { key: "sender", get: function get() {\n        var e = dn.getInstance(this._iid),\n            n = L.get(this._iid).GroupChannel;if (e.Options.useMemberAsMessageSender && this.isGroupChannel()) {\n          var t = n.cachedChannels[this.channelUrl];if (t) {\n            var r = t.memberMap[this._sender.userId];r && (this._sender.nickname !== r.nickname && (this._sender.nickname = r.nickname), this._sender.profileUrl !== r.profileUrl && (this._sender.profileUrl = r.profileUrl), te.deepEqual(this._sender.metaData, r.metaData) || (this._sender.metaData = r.metaData));\n          }\n        }return this._sender;\n      }, set: function set(e) {\n        this._sender = e;\n      } }], [{ key: "build", value: function value(e, n, t, r, i, a, s, o, u, l, c, d, h, p, f, _, y) {\n        var g = L.get(this._iid),\n            m = g.BaseChannel,\n            C = g.BaseMessageParams,\n            v = {};e && (v.req_id = e), v.msg_id = n, v.channel_url = r.url, v.channel_type = r.channelType === m.CHANNEL_TYPE_OPEN ? m.CHANNEL_TYPE_OPEN : m.CHANNEL_TYPE_GROUP, v.ts = l, v.updated_at = c, v.message = i, a && (v.data = a), s && (v.custom_type = s), o && (v.translations = o);var E = { user_id: "", nickname: "", profile_url: "", metadata: {}, is_blocked_by_me: !1 };if (t) {\n          E.user_id = t.userId, E.nickname = t.nickname, E.profile_url = t.profileUrl;try {\n            E.metadata = "string" == typeof t.metaData ? JSON.parse(t.metaData) : t.metaData;\n          } catch (e) {\n            E.metadata = {};\n          }E.is_blocked_by_me = t.isBlockedByMe;\n        }if (v.user = E, v.is_global_block = !!u, d) {\n          v.metaarray = {};for (var U = 0; U < d.length; U++) {\n            var b = d[U].key;v.metaarray[b] = d[U].value;\n          }v.metaarray_key_order = d.map(function (e) {\n            return e.key;\n          });\n        }return v.mention_type = C.MentionType.USERS, h && (v.mention_type = h), v.mentioned_users = [], p && (v.mentioned_users = p), v.request_state = 0 < n ? W.MessageRequestState.SUCCEEDED : W.MessageRequestState.FAILED, _ && (v.request_state = _), f && (v.mentioned_user_ids = f), v.requested_mention_user_ids = [], y && (v.requested_mention_user_ids = y), v;\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.User,\n            r = n.UserMessage,\n            i = [],\n            a = V.deserialize(e, function (e) {\n          e.mentionedUsers.forEach(function (n) {\n            i.push(t.build.apply(t, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n              return n[e];\n            }))));\n          });\n        });return new r(r.build(a.reqId, a.messageId, a.sender, { url: a.channelUrl, channelType: a.channelType }, a.message, a.data, a.customType, a.translations, a.isGlobalBlocked, a.createdAt, a.updatedAt, a.metaArrays, a.mentionType, i, a.mentionedUserIds, a.requestState, a.requestedMentionUserIds));\n      } }]), t;\n  }();(m() || C()) && A(W, Ie);var ke = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).messageType = W.MESSAGE_TYPE_FILE, n.url = null, n.name = "File", n.size = 0, n.type = null, n.data = null, n.thumbnails = [], n._sender = null, n.reqId = "", n.requireAuth = null, n.requestState = null, n.requestedMentionUserIds = [], e && n._update(e), n;\n    }return o(t, W), s(t, [{ key: "_update", value: function value(e) {\n        var n = $.get(this._iid).container.auth,\n            t = L.get(this._iid).Sender;if (this._sender = new t(e.user), this.requireAuth = !!e.hasOwnProperty("require_auth") && e.require_auth, this.url = this.requireAuth ? String(e.url).split("?auth=")[0] + "?auth=" + n.eKey : String(e.url).split("?auth=")[0], this.name = e.hasOwnProperty("name") ? e.name : "File", this.size = parseInt(e.size) || 0, this.type = String(e.type), this.data = e.hasOwnProperty("custom") ? String(e.custom) : "", this.reqId = e.hasOwnProperty("req_id") ? String(e.req_id) : "", this.thumbnails = e.hasOwnProperty("thumbnails") ? e.thumbnails : [], this.requireAuth) for (var r in this.thumbnails) {\n          this.thumbnails[r].url = String(this.thumbnails[r].url).split("?auth=")[0] + "?auth=" + n.eKey;\n        }this.requestState = 0 < this.messageId ? W.MessageRequestState.SUCCEEDED : W.MessageRequestState.FAILED, e.hasOwnProperty("request_state") && (this.requestState = e.request_state), this.requestedMentionUserIds = [], e.hasOwnProperty("requested_mention_user_ids") && (this.requestedMentionUserIds = e.requested_mention_user_ids);\n      } }, { key: "sender", get: function get() {\n        var e = dn.getInstance(this._iid),\n            n = L.get(this._iid).GroupChannel;if (e.Options.useMemberAsMessageSender && this.isGroupChannel()) {\n          var t = n.cachedChannels[this.channelUrl];if (t) {\n            var r = t.memberMap[this._sender.userId];r && (this._sender.nickname !== r.nickname && (this._sender.nickname = r.nickname), this._sender.profileUrl !== r.profileUrl && (this._sender.profileUrl = r.profileUrl), te.deepEqual(this._sender.metaData, r.metaData) || (this._sender.metaData = r.metaData));\n          }\n        }return this._sender;\n      }, set: function set(e) {\n        this._sender = e;\n      } }], [{ key: "build", value: function value(e, n, t, r, i, a, s, o, u, l, c, d, h, p, f, _, y, g, m, C, v) {\n        var E = L.get(this._iid),\n            U = E.BaseChannel,\n            b = E.BaseMessageParams,\n            A = {};A.req_id = e, A.msg_id = n, A.channel_url = r.url, A.channel_type = r.channelType === U.CHANNEL_TYPE_OPEN ? U.CHANNEL_TYPE_OPEN : U.CHANNEL_TYPE_GROUP, A.ts = d, A.updated_at = f, A.url = i, A.name = a, A.type = s, A.size = o, A.custom = u;var N = { user_id: "", nickname: "", profile_url: "", metadata: {}, is_global_block: !1 };if (t) {\n          N.user_id = t.userId, N.nickname = t.nickname, N.profile_url = t.profileUrl;try {\n            N.metadata = JSON.parse(t.metaData);\n          } catch (e) {\n            N.metadata = {};\n          }N.is_blocked_by_me = t.isBlockedByMe;\n        }if (A.user = N, l && (A.custom_type = l), p && (A.require_auth = p), h && (A.thumbnails = h), A.is_global_block = c, _) {\n          A.metaarray = {};for (var S = 0; S < _.length; S++) {\n            var I = _[S].key;A.metaarray[I] = _[S].value;\n          }A.metaarray_key_order = _.map(function (e) {\n            return e.key;\n          });\n        }return A.mention_type = b.MentionType.USERS, y && (A.mention_type = y), A.mentioned_users = [], g && (A.mentioned_users = g), m && (A.mentioned_user_ids = m), A.request_state = 0 < n ? W.MessageRequestState.SUCCEEDED : W.MessageRequestState.FAILED, C && (A.request_state = C), A.requested_mention_user_ids = [], v && (A.requested_mention_user_ids = v), A;\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.User,\n            r = n.FileMessage,\n            i = [],\n            a = V.deserialize(e, function (e) {\n          e.mentionedUsers.forEach(function (n) {\n            i.push(t.build.apply(t, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n              return n[e];\n            }))));\n          });\n        });return new r(r.build(a.reqId, a.messageId, a.sender, { url: a.channelUrl, channelType: a.channelType }, a.url, a.name, a.type, a.size, a.data, a.customType, a.isGlobalBlocked, a.createdAt, a.thumbnails, a.requireAuth, a.updatedAt, a.metaArrays, a.mentionType, i, a.mentionedUserIds, a.requestState, a.requestedMentionUserIds));\n      } }]), t;\n  }();(m() || C()) && A(W, ke);var Re = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this, e))).messageType = W.MESSAGE_TYPE_ADMIN, n.message = "", n.translations = {}, e && n._update(e), n;\n    }return o(t, W), s(t, [{ key: "_update", value: function value(e) {\n        this.message = String(e.message), this.translations = e.hasOwnProperty("translations") ? e.translations : {};\n      } }], [{ key: "build", value: function value(e, n, t, r, i, a, s, o, u, l, c) {\n        var d = L.get(this._iid).BaseChannel,\n            h = { msg_id: e, channel_url: n.url, channel_type: n.channelType === d.CHANNEL_TYPE_OPEN ? d.CHANNEL_TYPE_OPEN : d.CHANNEL_TYPE_GROUP, ts: s, updated_at: o, message: t, data: r };if (i && (h.custom_type = i), a && (h.translations = a), u) {\n          h.metaarray = {};for (var p = 0; p < u.length; p++) {\n            var f = u[p].key;h.metaarray[f] = u[p].value;\n          }h.metaarray_key_order = u.map(function (e) {\n            return e.key;\n          });\n        }return l && (h.mention_type = l), h.mentioned_users = [], c && (h.mentioned_users = c), h;\n      } }, { key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid),\n            t = n.AdminMessage,\n            r = n.User,\n            i = [],\n            a = V.deserialize(e, function (e) {\n          e.mentionedUsers.forEach(function (n) {\n            i.push(r.build.apply(r, E(["userId", "nickname", "profileUrl", "connectionStatus", "lastSeenAt", "metaData", "isActive", "friendDiscoveryKey", "friendName"].map(function (e) {\n              return n[e];\n            }))));\n          });\n        });return new t(t.build(a.messageId, { url: a.channelUrl, channelType: a.channelType }, a.message, a.data, a.customType, a.translations, a.createdAt, a.updatedAt, a.metaArrays, a.mentionType, i));\n      } }]), t;\n  }();(m() || C()) && A(W, Re);var Oe = function () {\n    function d(e) {\n      _(this, d);var n = L.get(this._iid),\n          t = n.BaseMessage,\n          r = n.BaseMessageParams;this.scheduledId = 0, this.scheduledDateTimeString = "", this.scheduledTimezone = "", this.status = d.Status.SCHEDULED, this.createdAt = 0, this.updatedAt = 0, this._messageType = t.MESSAGE_TYPE_BASE, this._sender = null, this._channelType = "", this.channelUrl = "", this.message = "", this.customType = "", this.data = "", this.metaArrays = [], this.mentionType = r.MentionType.USERS, this.mentionedUsers = [], this.pushNotificationDeliveryOption = r.PushNotificationDeliveryOption.DEFAULT, this.translationTargetLanguages = [], this.errorMessage = "", this.errorCode = 0, e && this._update(e);\n    }return s(d, [{ key: "_update", value: function value(e) {\n        var t = this,\n            n = L.get(this._iid),\n            r = n.User,\n            i = n.Sender,\n            a = n.BaseMessageParams,\n            s = n.MessageMetaArray;this.scheduledId = e.hasOwnProperty("scheduled_id") ? parseInt(e.scheduled_id) : 0, this.scheduledDateTimeString = e.hasOwnProperty("scheduled_dt") ? String(e.scheduled_dt) : "", this.scheduledTimezone = e.hasOwnProperty("scheduled_timezone") ? String(e.scheduled_timezone) : "", this.status = e.hasOwnProperty("status") ? String(e.status) : "", this.createdAt = e.hasOwnProperty("created_at") ? parseInt(e.created_at) : 0, this.updatedAt = e.hasOwnProperty("updated_at") ? parseInt(e.updated_at) : 0, this.channelUrl = e.hasOwnProperty("channel_url") ? String(e.channel_url) : "", this._channelType = e.hasOwnProperty("channel_type") ? String(e.channel_type) : "", this._messageType = e.hasOwnProperty("type") ? String(e.type) : "", this._sender = e.hasOwnProperty("user") ? new i(e.user) : "", this.message = e.hasOwnProperty("message") ? String(e.message) : "", this.customType = e.hasOwnProperty("custom_type") ? String(e.custom_type) : "", this.data = e.hasOwnProperty("data") ? String(e.data) : "";var o = e.hasOwnProperty("metaarray") ? e.metaarray : {},\n            u = e.hasOwnProperty("metaarray_key_order") ? e.metaarray_key_order : Object.keys(o).sort(function (e, n) {\n          return e.localeCompare(n);\n        });this.metaArrays = [];for (var l = 0; l < u.length; l++) {\n          var c = u[l];this.metaArrays.push(new s(c, o[c] || []));\n        }this.mentionType = e.hasOwnProperty("mention_type") ? e.mention_type : a.MentionType.USERS, this.mentionedUsers = [], e.hasOwnProperty("mentioned_users") && e.mentioned_users.forEach(function (e) {\n          var n = new r(e);t.mentionedUsers.push(n);\n        });this.pushNotificationDeliveryOption = e.hasOwnProperty("push_option") ? e.push_option : a.PushNotificationDeliveryOption.DEFAULT, this.translationTargetLanguages = e.hasOwnProperty("translation_target_langs") ? e.translation_target_langs : [], this.status === d.Status.FAILED && (e.hasOwnProperty("error") && e.error.hasOwnProperty("message") && (this.errorMessage = String(e.error.message)), e.hasOwnProperty("error") && e.error.hasOwnProperty("code") && (this.errorCode = parseInt(e.error.code)));\n      } }, { key: "isOpenChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this._channelType === e.CHANNEL_TYPE_OPEN;\n      } }, { key: "isGroupChannel", value: function value() {\n        var e = L.get(this._iid).BaseChannel;return this._channelType === e.CHANNEL_TYPE_GROUP;\n      } }, { key: "sender", get: function get() {\n        var e = dn.getInstance(this._iid),\n            n = L.get(this._iid).GroupChannel;if (e.Options.useMemberAsMessageSender && this.isGroupChannel()) {\n          var t = n.cachedChannels[this.channelUrl];if (t) {\n            var r = t.memberMap[this._sender.userId];r && (this._sender.nickname !== r.nickname && (this._sender.nickname = r.nickname), this._sender.profileUrl !== r.profileUrl && (this._sender.profileUrl = r.profileUrl), Validator.deepEqual(this._sender.metaData, r.metaData) || (this._sender.metaData = r.metaData));\n          }\n        }return this._sender;\n      }, set: function set(e) {\n        this._sender = e;\n      } }, { key: "metaArray", get: function get() {\n        var n = {};return this.metaArrays.forEach(function (e) {\n          n[e.key] = e.value;\n        }), n;\n      }, set: function set(e) {\n        if ("object" === Z(e) && e) {\n          var n = L.get(this._iid).MessageMetaArray,\n              t = [];for (var r in e) {\n            t.push(new n(r, e[r]));\n          }this.metaArrays = t;\n        }\n      } }], [{ key: "Status", get: function get() {\n        return { SCHEDULED: "scheduled", SENT: "sent", CANCELED: "canceled", FAILED: "failed" };\n      } }]), d;\n  }(),\n      Te = function () {\n    function e() {\n      _(this, e), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.userIdsFilter = [], this.metaDataKeyFilter = "", this.metaDataValuesFilter = [], this._token = "";\n    }return s(e, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit && Array.isArray(s.userIdsFilter) && "string" == typeof s.metaDataKeyFilter && Array.isArray(s.metaDataValuesFilter) && !!s.metaDataKeyFilter == 0 < s.metaDataValuesFilter.length ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadUserList(y({}, s, { token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.users.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), e;\n  }(),\n      Me = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this._isOpenChannel = !1, this._channelUrl = null, this._token = "", e.channelUrl && (this._channelUrl = e.channelUrl), e.isOpenChannel && (this._isOpenChannel = e.isOpenChannel);\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadBannedUserList(y({}, s, { channelUrl: s._channelUrl, isOpenChannel: s._isOpenChannel, token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.banned_list.map(function (e) {\n                return new r(e.user);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), n;\n  }(),\n      Le = function () {\n    function e() {\n      _(this, e), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.userIdsFilter = [], this._token = "";\n    }return s(e, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit && Array.isArray(s.userIdsFilter) ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadBlockedUserList(y({}, s, { token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.users.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), e;\n  }(),\n      we = function () {\n    function e() {\n      _(this, e), this.isLoading = !1, this.hasMore = !0, this.limit = 20, this._token = "";\n    }return s(e, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasMore ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadFriendList(y({}, s, { token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasMore = !!i, t = n.users.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), e;\n  }(),\n      Pe = function () {\n    function n() {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.includeEmpty = !1, this.order = n.ORDER_LATEST_LAST_MESSAGE, this._token = "", this._searchFilter = {}, this._userIdsFilter = { userIds: [], includeMode: !0, queryType: n.QueryType.AND }, this._userIdsExactFilter = [], this._userIdsIncludeFilter = [], this._userIdsIncludeFilterQueryType = n.QueryType.AND, this.nicknameContainsFilter = "", this.channelNameContainsFilter = "", this.memberStateFilter = be.MemberStateFilter.ALL, this.customTypesFilter = [], this.channelUrlsFilter = [], this.superChannelFilter = be.SuperChannelFilter.ALL, this.publicChannelFilter = be.PublicChannelFilter.ALL, this.customTypeStartsWithFilter = null, this.unreadChannelFilter = be.UnreadChannelFilter.ALL, this.metadataOrderKeyFilter = null, this.hiddenChannelFilter = be.HiddenChannelFilter.UNHIDDEN;\n    }return s(n, [{ key: "setSearchFilter", value: function value(e, n) {\n        Array.isArray(e) && 0 !== e.length && "string" == typeof n && n && (this._searchFilter = { search_query: n, search_fields: e.join(",").toLocaleLowerCase() });\n      } }, { key: "serialize", value: function value() {\n        return V.serialize(this, function (e) {\n          e.isLoading = !1;\n        });\n      } }, { key: "next", value: function value(e) {\n        var l = this;return K(this._iid, function (o) {\n          var e = L.get(l._iid),\n              u = e.GroupChannel,\n              n = e.GroupChannelListQuery;!("number" == typeof l.limit && 0 < l.limit && "boolean" == typeof l.includeEmpty && "string" == typeof l.order && -1 < [n.ORDER_CHRONOLOGICAL, n.ORDER_LATEST_LAST_MESSAGE, n.CHANNEL_NAME_ALPHABETICAL, n.METADATA_VALUE_ALPHABETICAL].indexOf(l.order.toLowerCase()) && Array.isArray(l._userIdsExactFilter) && Array.isArray(l._userIdsIncludeFilter) && Array.isArray(l.customTypesFilter) && Array.isArray(l.channelUrlsFilter) && -1 < Object.keys(n.QueryType).map(function (e) {\n            return n.QueryType[e];\n          }).indexOf(l._userIdsIncludeFilterQueryType.toUpperCase()) && -1 < Object.keys(u.MemberStateFilter).map(function (e) {\n            return u.MemberStateFilter[e];\n          }).indexOf(l.memberStateFilter) && -1 < Object.keys(u.SuperChannelFilter).map(function (e) {\n            return u.SuperChannelFilter[e];\n          }).indexOf(l.superChannelFilter) && -1 < Object.keys(u.PublicChannelFilter).map(function (e) {\n            return u.PublicChannelFilter[e];\n          }).indexOf(l.publicChannelFilter) && -1 < Object.keys(u.UnreadChannelFilter).map(function (e) {\n            return u.UnreadChannelFilter[e];\n          }).indexOf(l.unreadChannelFilter) && -1 < Object.keys(u.HiddenChannelFilter).map(function (e) {\n            return u.HiddenChannelFilter[e];\n          }).indexOf(l.hiddenChannelFilter)) || "string" != typeof l.customTypeStartsWithFilter && null !== l.customTypeStartsWithFilter || "string" != typeof l.nicknameContainsFilter || "string" != typeof l.channelNameContainsFilter || "string" != typeof l.metadataOrderKeyFilter && null !== l.metadataOrderKeyFilter ? o(Q.error, null) : l.isLoading ? o(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : l.hasNext ? (l.isLoading = !0, $.get(l._iid).container.apiClient.loadGroupChannelList(y({}, l, { token: l._token, userIdsFilter: l._userIdsFilter, searchFilter: l._searchFilter }), function (e, n) {\n            if (e) return l.isLoading = !1, void o(e, null);var t = [],\n                r = String(n.next);l._token = r, l.hasNext = !!r;for (var i = n.channels, a = 0; a < i.length; a++) {\n              var s = u.upsert(i[a]);t.push(s);\n            }l.isLoading = !1, o(e, t);\n          })) : o(null, []);\n        }, e);\n      } }, { key: "userIdsExactFilter", get: function get() {\n        return this._userIdsExactFilter;\n      }, set: function set(e) {\n        Array.isArray(e) && (this._userIdsExactFilter = e, this._userIdsIncludeFilter = [], this._userIdsFilter.userIds = this._userIdsExactFilter, this._userIdsFilter.includeMode = !1);\n      } }, { key: "userIdsIncludeFilter", get: function get() {\n        return this._userIdsIncludeFilter;\n      }, set: function set(e) {\n        Array.isArray(e) && (this._userIdsIncludeFilter = e, this._userIdsExactFilter = [], this._userIdsFilter.userIds = this._userIdsIncludeFilter, this._userIdsFilter.includeMode = !0);\n      } }, { key: "userIdsIncludeFilterQueryType", get: function get() {\n        return this._userIdsIncludeFilterQueryType;\n      }, set: function set(e) {\n        -1 < Object.keys(n.QueryType).map(function (e) {\n          return n.QueryType[e];\n        }).indexOf(e) && (this._userIdsIncludeFilterQueryType = e.toUpperCase(), this._userIdsFilter.queryType = this._userIdsIncludeFilterQueryType);\n      } }], [{ key: "buildFromSerializedData", value: function value(e) {\n        var n = L.get(this._iid).GroupChannel,\n            t = V.deserialize(e),\n            r = n.createMyGroupChannelListQuery();for (var i in t) {\n          r.hasOwnProperty(i) && (r[i] = t[i]);\n        }return r;\n      } }, { key: "ORDER_LATEST_LAST_MESSAGE", get: function get() {\n        return "latest_last_message";\n      } }, { key: "ORDER_CHRONOLOGICAL", get: function get() {\n        return "chronological";\n      } }, { key: "CHANNEL_NAME_ALPHABETICAL", get: function get() {\n        return "channel_name_alphabetical";\n      } }, { key: "METADATA_VALUE_ALPHABETICAL", get: function get() {\n        return "metadata_value_alphabetical";\n      } }, { key: "QueryType", get: function get() {\n        return { AND: "AND", OR: "OR" };\n      } }, { key: "SearchField", get: function get() {\n        return { MEMBER_NICKNAME: "member_nickname", CHANNEL_NAME: "channel_name" };\n      } }]), n;\n  }(),\n      De = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.mutedMemberFilter = n.MutedMemberFilter.ALL, this.memberStateFilter = be.MemberStateFilter.ALL, this.nicknameStartsWithFilter = null, this._token = "", this._channelUrl = e;\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (i) {\n          var e = L.get(s._iid),\n              n = e.GroupChannel,\n              a = e.Member,\n              t = e.MemberListQuery;if ("number" == typeof s.limit && 0 < s.limit && -1 < Object.keys(t.MutedMemberFilter).map(function (e) {\n            return t.MutedMemberFilter[e];\n          }).indexOf(s.mutedMemberFilter) && -1 < Object.keys(n.MemberStateFilter).map(function (e) {\n            return n.MemberStateFilter[e];\n          }).indexOf(s.memberStateFilter) && ("string" == typeof s.nicknameStartsWithFilter || null === s.nicknameStartsWithFilter)) {\n            if (s.isLoading) i(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else if (s.hasNext) {\n              s.isLoading = !0;var r = t.Order.MEMBER_NICKNAME_ALPHABETICAL;$.get(s._iid).container.apiClient.loadMemberList(y({}, s, { channelUrl: s._channelUrl, order: r, token: s._token }), function (e, n) {\n                var t = null;if (!e) {\n                  var r = String(n.next);s._token = r, s.hasNext = !!r, t = n.members.map(function (e) {\n                    return new a(e);\n                  });\n                }s.isLoading = !1, i(e, t);\n              });\n            } else i(null, []);\n          } else i(Q.error, null);\n        }, e);\n      } }], [{ key: "MutedMemberFilter", get: function get() {\n        return { ALL: "all", MUTED: "muted", UNMUTED: "unmuted" };\n      } }, { key: "Order", get: function get() {\n        return { MEMBER_NICKNAME_ALPHABETICAL: "member_nickname_alphabetical" };\n      } }]), n;\n  }(),\n      He = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this._token = "", e.channelUrl && (this._channelUrl = e.channelUrl), e.isOpenChannel && (this._isOpenChannel = e.isOpenChannel);\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadMutedUserList(y({}, s, { channelUrl: s._channelUrl, isOpenChannel: s._isOpenChannel, token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.muted_list.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), n;\n  }(),\n      Ge = function () {\n    function e() {\n      _(this, e), this.limit = 20, this.isLoading = !1, this.hasNext = !0, this.nameKeyword = null, this.urlKeyword = null, this.customTypes = [];\n    }return s(e, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          !("number" == typeof s.limit && 0 < s.limit && Array.isArray(s.customTypes)) || "string" != typeof s.nameKeyword && null !== s.nameKeyword || "string" != typeof s.urlKeyword && null !== s.urlKeyword ? a(Q.error, null) : s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadOpenChannelList(y({}, s, { token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).OpenChannel,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.channels.map(function (e) {\n                return r.upsert(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []);\n        }, e);\n      } }]), e;\n  }(),\n      Fe = new S(),\n      qe = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this._token = "", Fe.set(this, e);\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          if ("number" == typeof s.limit && 0 < s.limit) {\n            if (s.isLoading) a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else if (s.hasNext) {\n              s.isLoading = !0;var e = Fe.get(s);$.get(s._iid).container.apiClient.loadOperatorList(y({}, s, { token: s._token, channelUrl: e.url, isOpenChannel: e.isOpenChannel() }), function (e, n) {\n                var t = null;if (!e) {\n                  var r = L.get(s._iid).User,\n                      i = String(n.next);s._token = i, s.hasNext = !!i, t = n.operators.map(function (e) {\n                    return new r(e);\n                  });\n                }s.isLoading = !1, a(e, t);\n              });\n            } else a(null, []);\n          } else a(Q.error, null);\n        }, e);\n      } }]), n;\n  }(),\n      Be = new S(),\n      Qe = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this._token = "", e && Be.set(this, e.channelUrl);\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadParticipantList(y({}, s, { channelUrl: Be.get(s), token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.participants.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), n;\n  }(),\n      xe = new S(),\n      ze = new S(),\n      je = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, this.hasMore = !0, this.limit = 20, ze.set(this, Number.MAX_SAFE_INTEGER), xe.set(this, e), this.reverse = !1, this.messageTypeFilter = null, this.customTypeFilter = null, this.senderUserIdsFilter = [], this.includeMetaArray = !1;\n    }return s(n, [{ key: "load", value: function value(s, e, n, t) {\n        var o = this,\n            u = L.get(this._iid).BaseChannel,\n            r = null,\n            i = g(Q.parse(arguments, [new Q({ type: "number", optional: !0, defaultValue: this.limit }), new Q({ type: "boolean", optional: !0, defaultValue: this.reverse }), new Q({ type: ["string", "number"], optional: !0, defaultValue: this.messageTypeFilter, constraint: function constraint(e) {\n            return -1 < Object.keys(u.MessageTypeFilter).map(function (e) {\n              return u.MessageTypeFilter[e];\n            }).indexOf(e) || -1 < [0, 1, 2, 3].indexOf(e);\n          } }), new Q({ type: "callback" })]), 5);return r = i[0], s = i[1], e = i[2], n = i[3], t = i[4], K(this._iid, function (i) {\n          if (Array.isArray(o.senderUserIdsFilter) && !o.senderUserIdsFilter.some(function (e) {\n            return "string" != typeof e;\n          }) || (r = Q.error), r) i(r, null);else {\n            if (o.limit = s, o.reverse = e, o.messageTypeFilter = n, "number" == typeof o.messageTypeFilter) switch (o.messageTypeFilter) {case 0:\n                o.messageTypeFilter = u.MessageTypeFilter.ALL;break;case 1:\n                o.messageTypeFilter = u.MessageTypeFilter.USER;break;case 2:\n                o.messageTypeFilter = u.MessageTypeFilter.FILE;break;case 3:\n                o.messageTypeFilter = u.MessageTypeFilter.ADMIN;}if (o.isLoading) i(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else if (o.hasMore) {\n              o.isLoading = !0;var a = xe.get(o);$.get(o._iid).container.apiClient.getMessageList({ channel: a, token: ze.get(o) || new Date().getTime() + 1e4, tokenType: "timestamp", isInclusive: !1, prevResultSize: s, nextResultSize: 0, shouldReverse: e, messageType: n, customType: o.customTypeFilter, senderUserIds: o.senderUserIdsFilter, includeMetaArray: o.includeMetaArray }, function (e, n) {\n                var t = null;if (!e) {\n                  (0 === (t = n.messages.map(function (e) {\n                    return u.buildMessage(e, a);\n                  })).length || t.length < s) && (o.hasMore = !1);var r = ze.get(o);ze.set(o, Math.min(t.reduce(function (e, n) {\n                    return e > n.createdAt ? e : n.createdAt;\n                  }, Number.MAX_SAFE_INTEGER), r));\n                }o.isLoading = !1, i(e, t);\n              });\n            } else i(null, []);\n          }\n        }, t);\n      } }]), n;\n  }(),\n      Ye = function () {\n    function n() {\n      _(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.includeEmpty = !1, this.order = Pe.ORDER_LATEST_LAST_MESSAGE, this._token = "", this.channelNameContainsFilter = "", this.channelUrlsFilter = [], this.customTypesFilter = [], this.customTypeStartsWithFilter = null, this.superChannelFilter = be.SuperChannelFilter.ALL, this.membershipFilter = n.MembershipType.JOINED, this.metadataOrderKeyFilter = null;\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (i) {\n          var a = L.get(s._iid).GroupChannel;!("number" == typeof s.limit && 0 < s.limit && "boolean" == typeof s.includeEmpty && "string" == typeof s.order && -1 < [n.ORDER_CHRONOLOGICAL, n.CHANNEL_NAME_ALPHABETICAL, n.METADATA_VALUE_ALPHABETICAL, n.ORDER_LATEST_LAST_MESSAGE].indexOf(s.order.toLowerCase()) && Array.isArray(s.customTypesFilter) && Array.isArray(s.channelUrlsFilter) && -1 < Object.keys(n.MembershipType).map(function (e) {\n            return n.MembershipType[e];\n          }).indexOf(s.membershipFilter) && -1 < Object.keys(a.SuperChannelFilter).map(function (e) {\n            return a.SuperChannelFilter[e];\n          }).indexOf(s.superChannelFilter)) || "string" != typeof s.customTypeStartsWithFilter && null !== s.customTypeStartsWithFilter || "string" != typeof s.channelNameContainsFilter || "string" != typeof s.metadataOrderKeyFilter && null !== s.metadataOrderKeyFilter ? i(Q.error, null) : s.isLoading ? i(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadPublicGroupChannelList(y({}, s, { token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = String(n.next);s._token = r, s.hasNext = !!r, t = n.channels.map(function (e) {\n                return a.upsert(e);\n              });\n            }s.isLoading = !1, i(e, t);\n          })) : i(null, []);\n        }, e);\n      } }], [{ key: "MembershipType", get: function get() {\n        return { ALL: "all", JOINED: "joined" };\n      } }, { key: "ORDER_LATEST_LAST_MESSAGE", get: function get() {\n        return "latest_last_message";\n      } }, { key: "ORDER_CHRONOLOGICAL", get: function get() {\n        return "chronological";\n      } }, { key: "CHANNEL_NAME_ALPHABETICAL", get: function get() {\n        return "channel_name_alphabetical";\n      } }, { key: "METADATA_VALUE_ALPHABETICAL", get: function get() {\n        return "metadata_value_alphabetical";\n      } }]), n;\n  }(),\n      Ke = function () {\n    function e() {\n      _(this, e), this.isDistinct = null, this.isSuper = null, this.isPublic = null, this.channelUrl = null, this.isEphemeral = null, this.isDiscoverable = null, this.isStrict = null, this.name = null, this.data = null, this.customType = null, this.channelCover = null, this.coverUrl = null, this.coverImage = null, this.accessCode = null, this._invitedUserIds = [];var n = null;Object.defineProperty(this, "operators", { set: function set(e) {\n          Array.isArray(e) && e.filter(function (e) {\n            return e.hasOwnProperty("userId");\n          }).length === e.length && (n = e.map(function (e) {\n            return e.userId;\n          }));\n        } }), Object.defineProperty(this, "operatorUserIds", { get: function get() {\n          return n;\n        }, set: function set(e) {\n          Array.isArray(e) && e.filter(function (e) {\n            return "string" == typeof e;\n          }).length === e.length && (n = e);\n        } });\n    }return s(e, [{ key: "_validate", value: function value() {\n        return Array.isArray(this._invitedUserIds) && this._invitedUserIds.every(function (e) {\n          return "string" == typeof e;\n        }) && ("string" == typeof this.channelUrl || null === this.channelUrl) && ("string" == typeof this.coverUrl || null === this.coverUrl) && (te.isFile(this.coverImage) || null === this.coverImage) && ("string" == typeof this.name || null === this.name) && ("string" == typeof this.data || null === this.data) && ("string" == typeof this.customType || null === this.customType) && ("boolean" == typeof this.isDistinct || null === this.isDistinct) && ("boolean" == typeof this.isSuper || null === this.isSuper) && ("boolean" == typeof this.isPublic || null === this.isPublic) && ("boolean" == typeof this.isEphemeral || null === this.isEphemeral) && ("boolean" == typeof this.isDiscoverable || null === this.isDiscoverable) && ("boolean" == typeof this.isStrict || null === this.isStrict) && (Array.isArray(this.operatorUserIds) && this.operatorUserIds.every(function (e) {\n          return "string" == typeof e;\n        }) || null === this.operatorUserIds) && ("string" == typeof this.accessCode || null === this.accessCode);\n      } }, { key: "addUsers", value: function value(e) {\n        if (Array.isArray(e)) {\n          var n,\n              t = e.filter(function (e) {\n            return e.hasOwnProperty("userId") && "string" == typeof e.userId;\n          }).map(function (e) {\n            return e.userId;\n          });(n = this._invitedUserIds).push.apply(n, E(t));\n        }\n      } }, { key: "addUser", value: function value(e) {\n        e.hasOwnProperty("userId") && "string" == typeof e.userId && this._invitedUserIds.push(e.userId);\n      } }, { key: "addUserIds", value: function value(e) {\n        if (Array.isArray(e)) {\n          var n,\n              t = e.filter(function (e) {\n            return "string" == typeof e;\n          });(n = this._invitedUserIds).push.apply(n, E(t));\n        }\n      } }, { key: "addUserId", value: function value(e) {\n        "string" == typeof e && this._invitedUserIds.push(e);\n      } }]), e;\n  }(),\n      Ve = function () {\n    function e() {\n      _(this, e), this._mentionType = e.MentionType.USERS, this._mentionedUserIds = [], this._cachedMentionedUsers = [], this._cachedMentionedUserIds = [];\n    }return s(e, [{ key: "_validate", value: function value() {\n        var n = L.get(this._iid).BaseMessageParams;return -1 < Object.keys(n.MentionType).map(function (e) {\n          return n.MentionType[e];\n        }).indexOf(this.mentionType) && this._mentionedUserIds.every(function (e) {\n          return "string" == typeof e;\n        });\n      } }, { key: "mentionType", get: function get() {\n        return this._mentionType;\n      }, set: function set(e) {\n        var n = L.get(this._iid).BaseMessageParams;-1 < Object.keys(n.MentionType).map(function (e) {\n          return n.MentionType[e];\n        }).indexOf(e) && (this._mentionType = e);\n      } }, { key: "mentionedUserIds", get: function get() {\n        return this._cachedMentionedUserIds;\n      }, set: function set(e) {\n        if (Array.isArray(e)) for (var n = dn.getInstance(this._iid), t = 0; t < e.length; t++) {\n          var r = e[t];if ("string" != typeof r) {\n            this._cachedMentionedUserIds = [], this._mentionedUserIds = [];break;\n          }this._mentionedUserIds.indexOf(r) < 0 && n.currentUser && n.currentUser.userId !== r && (this._cachedMentionedUserIds.push(r), this._mentionedUserIds.push(r));\n        }\n      } }, { key: "mentionedUsers", get: function get() {\n        return this._cachedMentionedUsers;\n      }, set: function set(e) {\n        if (Array.isArray(e)) for (var n = dn.getInstance(this._iid), t = 0; t < e.length; t++) {\n          var r = e[t];if (!r.hasOwnProperty("userId")) {\n            this._cachedMentionedUsers = [], this._mentionedUserIds = [];break;\n          }this._mentionedUserIds.indexOf(r.userId) < 0 && n.currentUser && n.currentUser.userId !== r.userId && (this._cachedMentionedUsers.push(r), this._mentionedUserIds.push(r.userId));\n        }\n      } }], [{ key: "MentionType", get: function get() {\n        return { USERS: "users", CHANNEL: "channel" };\n      } }, { key: "PushNotificationDeliveryOption", get: function get() {\n        return { DEFAULT: "default", SUPPRESS: "suppress" };\n      } }]), e;\n  }(),\n      We = function () {\n    function t() {\n      var e;return _(this, t), (e = d(this, u(t).call(this))).message = null, e.data = null, e.customType = null, e.pushNotificationDeliveryOption = null, e._metaArrayKeys = [], e._translationTargetLanguages = [], e;\n    }return o(t, Ve), s(t, [{ key: "_validate", value: function value() {\n        var n = L.get(this._iid).BaseMessageParams;return h(u(t.prototype), "_validate", this).call(this) && ("string" == typeof this.message || null === this.message) && ("string" == typeof this.data || null === this.data) && ("string" == typeof this.customType || null === this.customType) && Array.isArray(this.translationTargetLanguages) && this.translationTargetLanguages.every(function (e) {\n          return "string" == typeof e;\n        }) && Array.isArray(this.metaArrayKeys) && this.metaArrayKeys.every(function (e) {\n          return "string" == typeof e;\n        }) && (null === this.pushNotificationDeliveryOption || -1 < Object.keys(n.PushNotificationDeliveryOption).map(function (e) {\n          return n.PushNotificationDeliveryOption[e];\n        }).indexOf(this.pushNotificationDeliveryOption));\n      } }, { key: "metaArrayKeys", get: function get() {\n        return this._metaArrayKeys;\n      }, set: function set(e) {\n        var n = [];if (Array.isArray(e)) for (var t = 0; t < e.length; t++) {\n          "string" == typeof e[t] && n.indexOf(e[t]) < 0 && n.push(e[t]);\n        }this._metaArrayKeys = n;\n      } }, { key: "targetLanguages", get: function get() {\n        return this.translationTargetLanguages;\n      }, set: function set(e) {\n        this.translationTargetLanguages = e;\n      } }, { key: "translationTargetLanguages", get: function get() {\n        return this._translationTargetLanguages;\n      }, set: function set(e) {\n        if (Array.isArray(e)) {\n          for (var n = 0; n < e.length; n++) {\n            if ("string" != typeof e[n]) return void (this._translationTargetLanguages = []);\n          }this._translationTargetLanguages = e;\n        }\n      } }]), t;\n  }();(m() || C()) && A(Ve, We);var Je = function () {\n    function t() {\n      var e;return _(this, t), (e = d(this, u(t).call(this))).fileName = null, e.mimeType = null, e.fileSize = null, e.data = null, e.customType = null, e.pushNotificationDeliveryOption = null, e._isUpdate = !1, e._file = null, e._fileUrl = null, e._metaArrayKeys = [], e._thumbnailSizes = [], e;\n    }return o(t, Ve), s(t, [{ key: "_validate", value: function value() {\n        var n = L.get(this._iid).BaseMessageParams;return h(u(t.prototype), "_validate", this).call(this) && (this._isUpdate || te.isFile(this.file) || "string" == typeof this.fileUrl) && ("string" == typeof this.fileName || null === this.fileName) && ("string" == typeof this.mimeType || null === this.mimeType) && ("number" == typeof this.fileSize || null === this.fileSize) && ("string" == typeof this.data || null === this.data) && ("string" == typeof this.customType || null === this.customType) && Array.isArray(this._metaArrayKeys) && this._metaArrayKeys.every(function (e) {\n          return "string" == typeof e;\n        }) && (null === this._thumbnailSizes || this._thumbnailSizes.every(function (e) {\n          return "object" === Z(e) && 0 < e.maxWidth && 0 < e.maxHeight;\n        })) && (null === this.pushNotificationDeliveryOption || -1 < Object.keys(n.PushNotificationDeliveryOption).map(function (e) {\n          return n.PushNotificationDeliveryOption[e];\n        }).indexOf(this.pushNotificationDeliveryOption));\n      } }, { key: "file", get: function get() {\n        return this._file;\n      }, set: function set(e) {\n        te.isFile(e) && (this._fileUrl = null, this._file = e);\n      } }, { key: "fileUrl", get: function get() {\n        return this._fileUrl;\n      }, set: function set(e) {\n        "string" == typeof e && (this._fileUrl = e, this._file = null);\n      } }, { key: "metaArrayKeys", get: function get() {\n        return this._metaArrayKeys;\n      }, set: function set(e) {\n        var n = [];if (Array.isArray(e)) for (var t = 0; t < e.length; t++) {\n          "string" == typeof e[t] && n.indexOf(e[t]) < 0 && n.push(e[t]);\n        }this._metaArrayKeys = n;\n      } }, { key: "thumbnailSizes", get: function get() {\n        return this._thumbnailSizes;\n      }, set: function set(e) {\n        if (Array.isArray(e)) {\n          for (var n = 0; n < e.length; n++) {\n            if ("object" !== Z(e[n]) || "number" != typeof e[n].maxWidth || "number" != typeof e[n].maxHeight) return void (this._thumbnailSizes = []);\n          }this._thumbnailSizes = e;\n        }\n      } }]), t;\n  }();(m() || C()) && A(Ve, Je);var Xe = function () {\n    function t(e) {\n      var n;return _(this, t), (n = d(this, u(t).call(this))).year = null, n.month = null, n.day = null, n.hour = null, n.min = null, n.timezone = null, n._scheduledDateTimeString = null, e && n._update(e), n;\n    }return o(t, We), s(t, [{ key: "_update", value: function value(e) {\n        e.hasOwnProperty("message") && (this.message = e.message), e.hasOwnProperty("year") && (this.year = e.year), e.hasOwnProperty("month") && (this.month = e.month), e.hasOwnProperty("day") && (this.day = e.day), e.hasOwnProperty("hour") && (this.hour = e.hour), e.hasOwnProperty("min") && (this.min = e.min), e.hasOwnProperty("timezone") && (this.timezone = e.timezone);\n      } }, { key: "_getScheduleString", value: function value() {\n        return this.scheduledDateTimeString ? this.scheduledDateTimeString + " " + this.timezone : "number" == typeof this.year && 4 === this.year.toString().length && "number" == typeof this.month && 1 <= this.month && this.month <= 12 && "number" == typeof this.day && 1 <= this.day && this.day <= 31 && "number" == typeof this.hour && 0 <= this.hour && this.hour <= 24 && "number" == typeof this.min && 0 <= this.min && this.min <= 60 && "string" == typeof this.timezone && 0 < this.timezone.length ? this.year.toString() + "-" + ("0" + this.month.toString()).substr(-2) + "-" + ("0" + this.day.toString()).substr(-2) + " " + ("0" + this.hour.toString()).substr(-2) + ":" + ("0" + this.min.toString()).substr(-2) + " " + this.timezone : null;\n      } }, { key: "setSchedule", value: function value(e, n, t, r, i, a) {\n        "number" == typeof e && 4 === e.toString().length && "number" == typeof n && 1 <= n && n <= 12 && "number" == typeof t && 1 <= t && t <= 31 && "number" == typeof r && 0 <= r && r <= 24 && "number" == typeof i && 0 <= i && i <= 60 && "string" == typeof a && 0 < a.length && (this.scheduledDateTimeString = e.toString() + "-" + ("0" + n.toString()).substr(-2) + "-" + ("0" + t.toString()).substr(-2) + " " + ("0" + r.toString()).substr(-2) + ":" + ("0" + i.toString()).substr(-2), this.timezone = a);\n      } }, { key: "scheduledDateTimeString", get: function get() {\n        return this._scheduledDateTimeString ? this._scheduledDateTimeString : "number" == typeof this.year && 4 === this.year.toString().length && "number" == typeof this.month && 1 <= this.month && this.month <= 12 && "number" == typeof this.day && 1 <= this.day && this.day <= 31 && "number" == typeof this.hour && 0 <= this.hour && this.hour <= 24 && "number" == typeof this.min && 0 <= this.min && this.min <= 60 && "string" == typeof this.timezone && 0 < this.timezone.length ? this.year.toString() + "-" + ("0" + this.month.toString()).substr(-2) + "-" + ("0" + this.day.toString()).substr(-2) + " " + ("0" + this.hour.toString()).substr(-2) + ":" + ("0" + this.min.toString()).substr(-2) : null;\n      }, set: function set(e) {\n        e && "string" == typeof e && (this._scheduledDateTimeString = e);\n      } }]), t;\n  }();(m() || C()) && A(We, Xe);function Ze() {\n    _(this, Ze), this.channelCustomTypesFilter = [], this.superChannelFilter = be.SuperChannelFilter.ALL;\n  }function $e() {\n    _(this, $e), this.onReconnectStarted = function () {}, this.onReconnectSucceeded = function () {}, this.onReconnectFailed = function () {};\n  }function en() {\n    _(this, en), this.onFriendsDiscovered = function (e) {}, this.onTotalUnreadMessageCountUpdated = function (e, n) {};\n  }function nn() {\n    _(this, nn), this.onMessageReceived = function (e, n) {}, this.onMessageUpdated = function (e, n) {}, this.onMessageDeleted = function (e, n) {}, this.onReadReceiptUpdated = function (e) {}, this.onTypingStatusUpdated = function (e) {}, this.onUserJoined = function (e, n) {}, this.onUserLeft = function (e, n) {}, this.onUserEntered = function (e, n) {}, this.onUserExited = function (e, n) {}, this.onUserMuted = function (e, n) {}, this.onUserUnmuted = function (e, n) {}, this.onUserBanned = function (e, n) {}, this.onUserUnbanned = function (e, n) {}, this.onChannelFrozen = function (e) {}, this.onChannelUnfrozen = function (e) {}, this.onChannelChanged = function (e) {}, this.onChannelDeleted = function (e, n) {}, this.onUserReceivedInvitation = function (e, n, t) {}, this.onUserDeclinedInvitation = function (e, n, t) {}, this.onMetaDataCreated = function (e, n) {}, this.onMetaDataUpdated = function (e, n) {}, this.onMetaDataDeleted = function (e, n) {}, this.onMetaCountersCreated = function (e, n) {}, this.onMetaCountersUpdated = function (e, n) {}, this.onMetaCountersDeleted = function (e, n) {}, this.onChannelHidden = function (e) {}, this.onMentionReceived = function (e, n) {};\n  }function tn(e) {\n    if (_(this, tn), e) {\n      var n = L.get(this._iid),\n          t = n.User,\n          r = n.BaseChannel;this.reader = new t(e.user), this.timestamp = parseInt(e.ts), this.channelUrl = e.hasOwnProperty("channel_url") ? String(e.channel_url) : "", this.channelType = e.hasOwnProperty("channel_type") ? String(e.channel_type) : r.CHANNEL_TYPE_GROUP;\n    }\n  }var rn = function () {\n    function t(e) {\n      var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [];_(this, t), this.key = e, this.value = Array.isArray(n) && n.every(function (e) {\n        return "string" == typeof e;\n      }) ? n : [];\n    }return s(t, [{ key: "encode", value: function value() {\n        return { key: this.key, value: this.value || [] };\n      } }]), t;\n  }(),\n      an = function () {\n    function n() {\n      var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [];_(this, n), this.isLoading = !1, this.hasNext = !0, this.limit = 20, this.userIds = e, this.metaDataKey = "", this.metaDataValues = [], this._token = "";\n    }return s(n, [{ key: "next", value: function value(e) {\n        var s = this;return K(this._iid, function (a) {\n          "number" == typeof s.limit && 0 < s.limit && Array.isArray(s.userIds) && "string" == typeof s.metaDataKey && Array.isArray(s.metaDataValues) && !!s.metaDataKey == 0 < s.metaDataValues.length ? s.isLoading ? a(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null) : s.hasNext ? (s.isLoading = !0, $.get(s._iid).container.apiClient.loadUserList(y({}, s, { userIdsFilter: s.userIds, metaDataKeyFilter: s.metaDataKey, metaDataValuesFilter: s.metaDataValues, token: s._token }), function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(s._iid).User,\n                  i = String(n.next);s._token = i, s.hasNext = !!i, t = n.users.map(function (e) {\n                return new r(e);\n              });\n            }s.isLoading = !1, a(e, t);\n          })) : a(null, []) : a(Q.error, null);\n        }, e);\n      } }]), n;\n  }(),\n      sn = new S(),\n      on = function () {\n    function n(e) {\n      _(this, n), this.isLoading = !1, sn.set(this, e);\n    }return s(n, [{ key: "prev", value: function value(t, s, o, e) {\n        var u = this,\n            l = arguments;return K(this._iid, function (r) {\n          var e,\n              i = L.get(u._iid).BaseChannel,\n              n = g(Q.parse(l, [new Q({ type: "number" }), new Q({ type: "number" }), new Q({ type: "boolean" }), new Q({ type: "function" })]), 5);if (e = n[0], t = n[1], s = n[2], o = n[3], r = n[4], e) r(e, null);else if (u.isLoading) r(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else {\n            u.isLoading = !0;var a = sn.get(u);$.get(u._iid).container.apiClient.getMessageList({ channel: a, token: t, tokenType: "timestamp", isInclusive: !1, prevResultSize: s, nextResultSize: 0, shouldReverse: o, messageType: "", customType: "" }, function (e, n) {\n              var t = null;e || (t = n.messages.map(function (e) {\n                return i.buildMessage(e, a);\n              })), u.isLoading = !1, r(e, t);\n            });\n          }\n        }, e);\n      } }, { key: "next", value: function value(t, s, o, e) {\n        var u = this,\n            l = arguments;return K(this._iid, function (r) {\n          var e,\n              i = L.get(u._iid).BaseChannel,\n              n = g(Q.parse(l, [new Q({ type: "number" }), new Q({ type: "number" }), new Q({ type: "boolean" }), new Q({ type: "function" })]), 5);if (e = n[0], t = n[1], s = n[2], o = n[3], r = n[4], e) r(e, null);else if (u.isLoading) r(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else {\n            u.isLoading = !0;var a = sn.get(u);$.get(u._iid).container.apiClient.getMessageList({ channel: a, token: t, tokenType: "timestamp", isInclusive: !1, prevResultSize: 0, nextResultSize: s, shouldReverse: o, messageType: "", customType: "" }, function (e, n) {\n              var t = null;e || (t = n.messages.map(function (e) {\n                return i.buildMessage(e, a);\n              })), u.isLoading = !1, r(e, t);\n            });\n          }\n        }, e);\n      } }, { key: "load", value: function value(t, s, o, u, e) {\n        var l = this,\n            c = arguments;return K(this._iid, function (r) {\n          var e,\n              i = L.get(l._iid).BaseChannel,\n              n = g(Q.parse(c, [new Q({ type: "number" }), new Q({ type: "number" }), new Q({ type: "number" }), new Q({ type: "boolean" }), new Q({ type: "function" })]), 5);if (e = n[0], t = n[1], limit = n[2], u = n[3], r = n[4], e) r(e, null);else if (l.isLoading) r(new ee("Query in progress.", ee.QUERY_IN_PROGRESS), null);else {\n            l.isLoading = !0;var a = sn.get(l);$.get(l._iid).container.apiClient.getMessageList({ channel: a, token: t, tokenType: "timestamp", isInclusive: !1, prevResultSize: s, nextResultSize: o, shouldReverse: u, messageType: "", customType: "" }, function (e, n) {\n              var t = null;e || (t = n.messages.map(function (e) {\n                return i.buildMessage(e, a);\n              })), l.isLoading = !1, r(e, t);\n            });\n          }\n        }, e);\n      } }]), n;\n  }(),\n      un = null,\n      ln = {},\n      cn = !1,\n      dn = function () {\n    function o(e) {\n      _(this, o);var n = !1;if (e.newInstance || !un ? (n = !0, un = this) : un && e.appId !== un.getApplicationId() && un.getConnectionState() === un.ConnectionState.CLOSED && (n = !0, un = this), n) {\n        try {\n          if (!e.hasOwnProperty("appId")) return ne.debug("Must be set appId"), null;\n        } catch (e) {\n          return ne.debug("Must be set appId"), null;\n        }var t = _e.create();Object.defineProperty(this, "_iid", { get: function get() {\n            return t;\n          } }), (ln[t] = this).customApiHost = null, this.customWsHost = null, this.connecting = !1, this.reconnecting = !1, this.isReconnectingOnError = !1, this.connectionCallbacks = [], this.ConnectionManager = new x(this), this.GCMPushToken = "", this.APNSPushToken = "", this.PUSH_TEMPLATE_DEFAULT = "default", this.PUSH_TEMPLATE_ALTERNATIVE = "alternative", this.currentUser = null, this.isSessionOpened = !1, this.globalTimer, this.loginTimer, this.reconnectTimer, this.loginHandler = null, this.onLoginTimerCancel, this.onReconnectTimerCancel, this.BaseChannel = { MessageTypeFilter: ue.MessageTypeFilter };var r = { User: se, Member: ye, GroupChannel: be, OpenChannel: Se, UserMessage: Ie, FileMessage: ke, AdminMessage: Re, GroupChannelListQuery: Pe, GroupChannelParams: Ke, BaseMessageParams: Ve, UserMessageParams: We, FileMessageParams: Je, ScheduledUserMessageParams: Xe, GroupChannelTotalUnreadMessageCountParams: Ze, MessageMetaArray: rn, UserEventHandler: en, ChannelHandler: nn, ConnectionHandler: $e },\n            i = { BaseChannel: ue, BaseMessage: W, UserListQuery: an, ApplicationUserListQuery: Te, BannedUserListQuery: Me, BlockedUserListQuery: Le, FriendListQuery: we, MemberListQuery: De, MutedUserListQuery: He, OpenChannelListQuery: Ge, OperatorListQuery: qe, ParticipantListQuery: Qe, MessageListQuery: on, PreviousMessageListQuery: je, PublicGroupChannelListQuery: Ye, ScheduledUserMessage: Oe, Command: Y, Sender: ge, ReadStatus: tn, FileMessageQueue: fe },\n            a = new L(this._iid, y({}, r, {}, i));for (var s in a) {\n          r[s] && (this[s] = a[s]);\n        }$.create(t, { appId: e.appId, pinger: new w(this), apiClient: new F(this), wsAdapter: new B(this), commandHandler: new de(this), onlineDetector: new z(this), ackStateMap: {}, subscribedUnreadMessageCount: { all: 0, custom_types: {}, ts: 0 }, auth: new R(), pingInterval: 15e3, pongTimeout: 5e3, connectedAt: 0, stateChangeEnabled: !0, isInBackground: !1, closedByGoingBackground: !1, isErrorFirstInCallback: !1 }), this.userEventHandlers = {}, this.channelHandlers = {}, this.connectionHandlers = {}, this.Options = { _useMemberAsMessageSender: !0, get UseMemberAsMessageSender() {\n            return this._useMemberAsMessageSender;\n          }, set UseMemberAsMessageSender(e) {\n            "boolean" == typeof e && (this._useMemberAsMessageSender = e);\n          }, get useMemberAsMessageSender() {\n            return this._useMemberAsMessageSender;\n          }, set useMemberAsMessageSender(e) {\n            "boolean" == typeof e && (this._useMemberAsMessageSender = e);\n          }, _typingIndicatorThrottle: 1e3, get typingIndicatorThrottle() {\n            return this._typingIndicatorThrottle;\n          }, set typingIndicatorThrottle(e) {\n            "number" == typeof e && 1e3 <= e && e <= 9e3 && (this._typingIndicatorThrottle = e);\n          } };\n      }return un;\n    }return s(o, [{ key: "getApplicationId", value: function value() {\n        return $.get(this._iid).get("appId");\n      } }, { key: "getCurrentUserId", value: function value() {\n        return this.currentUser ? this.currentUser.userId : null;\n      } }, { key: "getDebugMode", value: function value() {\n        return cn;\n      } }, { key: "setDebugMode", value: function value(e) {\n        cn = e, ne.mode = e ? ne.Mode.DEBUG : ne.Mode.PRODUCTION;\n      } }, { key: "getErrorFirstCallback", value: function value() {\n        return $.get(this._iid).container.isErrorFirstInCallback;\n      } }, { key: "setErrorFirstCallback", value: function value(e) {\n        "boolean" == typeof e && $.get(this._iid).set("isErrorFirstInCallback", e);\n      } }, { key: "getCurrentApiHost", value: function value() {\n        return this.customApiHost ? this.customApiHost : "https://api.sendbird.com";\n      } }, { key: "clearCurrentApiHost", value: function value() {\n        this.customApiHost = null;\n      } }, { key: "getCurrentWsHost", value: function value() {\n        return this.customWsHost ? this.customWsHost : "wss://ws.sendbird.com";\n      } }, { key: "clearCurrentWsHost", value: function value() {\n        this.customWsHost = null;\n      } }, { key: "getConnectionState", value: function value() {\n        try {\n          var e = $.get(this._iid).container.wsAdapter;return this.connecting || this.reconnecting ? this.ConnectionState.CONNECTING : e.ws ? this.connecting || this.reconnecting ? this.ConnectionState.CONNECTING : this.isSessionOpened ? e.ws.getConnectionState() : this.ConnectionState.CLOSED : this.ConnectionState.CLOSED;\n        } catch (e) {\n          return this.ConnectionState.CLOSED;\n        }\n      } }, { key: "getPendingGCMToken", value: function value() {\n        return this.GCMPushToken;\n      } }, { key: "getPendingAPNSToken", value: function value() {\n        return this.APNSPushToken;\n      } }, { key: "hasLoggedIn", value: function value() {\n        var e = $.get(this._iid);return this.currentUser && e.get("auth").hasSession();\n      } }, { key: "getLastConnectedAt", value: function value() {\n        var e = $.get(this._iid);return this.getConnectionState() === this.ConnectionState.OPEN && this.currentUser ? e.get("connectedAt") : 0;\n      } }, { key: "connect", value: function value(n, t, r, i, e) {\n        var a = this,\n            s = $.get(this._iid).container,\n            o = s.wsAdapter,\n            u = s.onlineDetector;u && u.start();var l,\n            c = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 1 === e.length || 3 === e.length;\n          } }), new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 1 === e.length || 2 === e.length;\n          } }), new Q({ type: "string", nullable: !0, ignoreIf: function ignoreIf(e) {\n            return 1 === e.length || 2 === e.length;\n          } }), new Q({ type: "callback" })]), 6);return l = c[0], n = c[1], t = c[2], r = c[3], i = c[4], e = c[5], K(this._iid, function (e) {\n          l ? e(l, null) : (a.customApiHost = r, a.customWsHost = i, a.connecting = !0, a.reconnecting = !1, a.isReconnectingOnError = !1, a.reconnectTimer && (clearTimeout(a.reconnectTimer), a.reconnectTimer = null, a.onReconnectTimerCancel = null), a.getConnectionState() === a.ConnectionState.OPEN && a.currentUser && a.currentUser.userId === n ? (a.connecting = !1, e(null, a.currentUser)) : (a.connectionCallbacks.push(e), 1 === a.connectionCallbacks.length && (o.disconnect({ clearSession: !0, err: null }, null), o.connect(n, t))));\n        }, e);\n      } }, { key: "reconnect", value: function value() {\n        var e = $.get(this._iid).container,\n            n = e.wsAdapter;if (e.auth.sessionKey && this.currentUser) {\n          var t = !0;return 0 < n.reconnectCount && (t = !1), n.disconnect({ clearSession: !1, err: new ee("Connection has been canceled.", ee.CONNECTION_CANCELED) }, null), n.reconnectCount = 0, n.reconnect(this.currentUser.userId, t), !0;\n        }return !1;\n      } }, { key: "disconnect", value: function value(e) {\n        var i = this;return K(this._iid, function (e) {\n          var n = $.get(i._iid).container,\n              t = n.wsAdapter,\n              r = n.onlineDetector;r && r.stop(), t.disconnect({ clearSession: !0, err: new ee("Connection has been canceled.", ee.CONNECTION_CANCELED) }, e);\n        }, e);\n      } }, { key: "setBackgroundState", value: function value() {\n        var e = $.get(this._iid),\n            n = e.container,\n            t = n.wsAdapter,\n            r = n.stateChangeEnabled;!n.isInBackground && r && (e.set("isInBackground", !0), this.getConnectionState() !== this.ConnectionState.CLOSED ? (e.set("closedByGoingBackground", !0), t.disconnect({ clearSession: !1, err: new ee("Websocket connection failed.", ee.WEBSOCKET_CONNECTION_FAILED) }, null)) : e.set("closedByGoingBackground", !1));\n      } }, { key: "setForegroundState", value: function value() {\n        var e = $.get(this._iid),\n            n = e.container,\n            t = n.wsAdapter,\n            r = n.stateChangeEnabled,\n            i = n.isInBackground,\n            a = n.closedByGoingBackground;i && r && (e.set("isInBackground", !1), a && this.currentUser && t.reconnect(this.currentUser.userId, !0));\n      } }, { key: "enableStateChange", value: function value() {\n        $.get(this._iid).set("enableStateChange", !0);\n      } }, { key: "disableStateChange", value: function value() {\n        $.get(this._iid).set("enableStateChange", !1);\n      } }, { key: "createUserListQuery", value: function value(e) {\n        return new (L.get(this._iid).UserListQuery)(e);\n      } }, { key: "createApplicationUserListQuery", value: function value() {\n        return new (L.get(this._iid).ApplicationUserListQuery)();\n      } }, { key: "createBlockedUserListQuery", value: function value() {\n        return new (L.get(this._iid).BlockedUserListQuery)();\n      } }, { key: "createFriendListQuery", value: function value() {\n        return new (L.get(this._iid).FriendListQuery)();\n      } }, { key: "sendCommand", value: function value(u, e) {\n        var l = this;return K(this._iid, function (o) {\n          l.ConnectionManager.ready(function (e, n) {\n            if (e) o(e, null);else {\n              var t = $.get(l._iid).container,\n                  r = t.wsAdapter,\n                  i = t.ackStateMap;if (null == r || null == r.ws || r.ws.getConnectionState() !== l.ConnectionState.OPEN || l.getConnectionState() !== l.ConnectionState.OPEN) return void o(new ee("Connection is not valid. Please reconnect.", ee.WEBSOCKET_CONNECTION_CLOSED), null);if (u.isAckRequired) {\n                var a = u.requestId,\n                    s = { handler: o, timer: setTimeout(function () {\n                    o(new ee("Command received no ack.", ee.ACK_TIMEOUT), null), delete i[a];\n                  }, f.COMMAND_ACK_TIMEOUT) };i[a] = s, r.ws.send(u, function (e) {\n                  e && (clearTimeout(s.timer), o(e, null));\n                });\n              } else r.ws.send(u, o);\n            }\n          }, !1);\n        }, e);\n      } }, { key: "addUserEventHandler", value: function value(e, n) {\n        n instanceof L.get(this._iid).UserEventHandler && (this.userEventHandlers[e] = n);\n      } }, { key: "removeUserEventHandler", value: function value(e) {\n        delete this.userEventHandlers[e];\n      } }, { key: "removeAllUserEventHandler", value: function value() {\n        this.userEventHandlers = {};\n      } }, { key: "addChannelHandler", value: function value(e, n) {\n        n instanceof L.get(this._iid).ChannelHandler && (this.channelHandlers[e] = n);\n      } }, { key: "removeChannelHandler", value: function value(e) {\n        delete this.channelHandlers[e];\n      } }, { key: "removeAllChannelHandlers", value: function value() {\n        this.channelHandlers = {};\n      } }, { key: "addConnectionHandler", value: function value(e, n) {\n        n instanceof L.get(this._iid).ConnectionHandler && (this.connectionHandlers[e] = n);\n      } }, { key: "removeConnectionHandler", value: function value(e) {\n        delete this.connectionHandlers[e];\n      } }, { key: "removeAllConnectionHandlers", value: function value() {\n        this.connectionHandlers = {};\n      } }, { key: "updateCurrentUserInfo", value: function value(i, a, e) {\n        var n,\n            s = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0 }), new Q({ type: "string", nullable: !0 }), new Q({ type: "callback" })]), 4);return n = t[0], i = t[1], a = t[2], e = t[3], K(this._iid, function (r) {\n          n ? r(n, null) : $.get(s._iid).container.apiClient.updateCurrentUserInfo({ nickname: i, profileUrl: a }, function (e, n) {\n            var t = null;e || (s.currentUser && (i && (s.currentUser.nickname = i), a && (s.currentUser.profileUrl = a)), t = s.currentUser), r(e, t);\n          });\n        }, e);\n      } }, { key: "updateCurrentUserInfoWithProfileImage", value: function value(i, e, n) {\n        var t,\n            a = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0 }), new Q({ type: "file", nullable: !0 }), new Q({ type: "callback" })]), 4);return t = r[0], i = r[1], e = r[2], n = r[3], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(a._iid).container.apiClient.updateCurrentUserInfo({ nickname: i, profileImage: e }, function (e, n) {\n            var t = null;e || (a.currentUser && (i && (a.currentUser.nickname = i), n.profile_url && (a.currentUser.profileUrl = n.profile_url)), t = a.currentUser), r(e, t);\n          });\n        }, n);\n      } }, { key: "updateCurrentUserInfoWithPreferredLanguages", value: function value(i, e) {\n        var n,\n            a = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return n = t[0], i = t[1], e = t[2], K(this._iid, function (r) {\n          n ? r(n, null) : $.get(a._iid).container.apiClient.updateCurrentUserInfo({ preferredLanguages: i }, function (e, n) {\n            var t = null;e || (a.currentUser && i && (a.currentUser._preferredLanguages = i), t = a.currentUser), r(e, t);\n          });\n        }, e);\n      } }, { key: "registerGCMPushTokenForCurrentUser", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, i.pushTokenRegistrationState.ERROR) : i.currentUser ? $.get(i._iid).container.apiClient.registerGCMPushToken({ token: e }, function (e, n) {\n            var t = i.pushTokenRegistrationState.ERROR;e || (i.GCMPushToken = "", t = i.pushTokenRegistrationState.SUCCESS), r(e, t);\n          }) : (i.GCMPushToken = e, r(null, i.pushTokenRegistrationState.PENDING));\n        }, n);\n      } }, { key: "unregisterGCMPushTokenForCurrentUser", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : i.currentUser ? $.get(i._iid).container.apiClient.unregisterGCMPushToken({ token: e }, function (e, n) {\n            t(e, null);\n          }) : (i.GCMPushToken = e, t(null, i.pushTokenRegistrationState.PENDING));\n        }, n);\n      } }, { key: "unregisterGCMPushTokenAllForCurrentUser", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.unregisterAllGCMPushTokens({}, function (e, n) {\n            t(e, null);\n          });\n        }, e);\n      } }, { key: "registerAPNSPushTokenForCurrentUser", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, i.pushTokenRegistrationState.ERROR) : i.currentUser ? $.get(i._iid).container.apiClient.registerAPNSPushToken({ token: e }, function (e, n) {\n            var t = i.pushTokenRegistrationState.ERROR;e || (i.APNSPushToken = "", t = i.pushTokenRegistrationState.SUCCESS), r(e, t);\n          }) : (i.APNSPushToken = e, r(null, i.pushTokenRegistrationState.PENDING));\n        }, n);\n      } }, { key: "unregisterAPNSPushTokenForCurrentUser", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return 0 < e.length;\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : i.currentUser ? $.get(i._iid).container.apiClient.unregisterAPNSPushToken({ token: e }, function (e, n) {\n            t(e, null);\n          }) : (i.APNSPushToken = e, t(null, i.pushTokenRegistrationState.PENDING));\n        }, n);\n      } }, { key: "unregisterAPNSPushTokenAllForCurrentUser", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.unregisterAllAPNSPushTokens({}, function (e, n) {\n            t(e, null);\n          });\n        }, e);\n      } }, { key: "unregisterPushTokenAllForCurrentUser", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.unregisterAllPushTokens({}, function (e, n) {\n            t(e, null);\n          });\n        }, e);\n      } }, { key: "getMyGroupChannelChangeLogsByToken", value: function value(e, n, t, r) {\n        var i,\n            u = this,\n            a = g(Q.parse(arguments, [new Q({ type: "string", nullable: !0 }), new Q({ type: "array", optional: !0, nullable: !0, defaultValue: null }), new Q({ type: "boolean", nullable: !0, optional: !0, defaultValue: null }), new Q({ type: "callback" })]), 5);return i = a[0], e = a[1], n = a[2], t = a[3], r = a[4], K(this._iid, function (o) {\n          i ? o(i, null) : $.get(u._iid).container.apiClient.getMyGroupChannelChangeLogs({ ts: null, token: e, customTypes: n, includeEmpty: t }, function (e, n) {\n            if (e) o(e, null);else {\n              var t = L.get(u._iid).GroupChannel,\n                  r = n.updated.map(function (e) {\n                return new t(e);\n              }),\n                  i = n.deleted,\n                  a = n.has_more,\n                  s = n.next;o(null, { updatedChannels: r, deletedChannelUrls: i, hasMore: a, token: s });\n            }\n          });\n        }, r);\n      } }, { key: "getMyGroupChannelChangeLogsByTimestamp", value: function value(e, n, t, r) {\n        var i,\n            u = this,\n            a = g(Q.parse(arguments, [new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e;\n          } }), new Q({ type: "array", optional: !0, nullable: !0, defaultValue: null }), new Q({ type: "boolean", nullable: !0, optional: !0, defaultValue: null }), new Q({ type: "callback" })]), 5);return i = a[0], e = a[1], n = a[2], t = a[3], r = a[4], K(this._iid, function (o) {\n          i ? o(i, null) : $.get(u._iid).container.apiClient.getMyGroupChannelChangeLogs({ ts: e, token: null, customTypes: n, includeEmpty: t }, function (e, n) {\n            if (e) o(e, null);else {\n              var t = L.get(u._iid).GroupChannel,\n                  r = n.updated.map(function (e) {\n                return new t(e);\n              }),\n                  i = n.deleted,\n                  a = n.has_more,\n                  s = n.next;o(null, { updatedChannels: r, deletedChannelUrls: i, hasMore: a, token: s });\n            }\n          });\n        }, r);\n      } }, { key: "getChannelInvitationPreference", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getChannelInvitationPreference({}, function (e, n) {\n            var t = null;e || (t = { autoAccept: n.auto_accept }), r(e, t);\n          });\n        }, e);\n      } }, { key: "setChannelInvitationPreference", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "boolean" }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.setChannelInvitationPreference({ isAutoAccept: e }, function (e, n) {\n            var t = null;e || (t = { autoAccept: n.auto_accept }), r(e, t);\n          });\n        }, n);\n      } }, { key: "getDoNotDisturb", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getDoNotDisturb({}, function (e, n) {\n            var t = null;e || (t = { doNotDisturbOn: n.do_not_disturb, startHour: n.start_hour, startMin: n.start_min, endHour: n.end_hour, endMin: n.end_min, timezone: n.timezone }), r(e, t);\n          });\n        }, e);\n      } }, { key: "setDoNotDisturb", value: function value(e, n, t, i, a, s, r) {\n        var o,\n            u = this,\n            l = g(Q.parse(arguments, [new Q({ type: "boolean" }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e && e <= 23;\n          } }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e && e <= 59;\n          } }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e && e <= 23;\n          } }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 <= e && e <= 59;\n          } }), new Q({ type: "string" }), new Q({ type: "callback" })]), 8);return o = l[0], e = l[1], n = l[2], t = l[3], i = l[4], a = l[5], s = l[6], r = l[7], K(this._iid, function (r) {\n          o ? r(o, null) : $.get(u._iid).container.apiClient.setDoNotDisturb({ doNotDisturbOn: e, startHour: n, startMin: t, endHour: i, endMin: a, timezone: s }, function (e, n) {\n            var t = null;e || (t = { doNotDisturbOn: n.do_not_disturb, startHour: n.start_hour, startMin: n.start_min, endHour: n.end_hour, endMin: n.end_min, timezone: n.timezone }), r(e, t);\n          });\n        }, r);\n      } }, { key: "getSnoozePeriod", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getSnoozePeriod({}, function (e, n) {\n            var t = null;e || (t = { isSnoozeOn: n.snooze_enabled, startTs: n.snooze_start_ts, endTs: n.snooze_end_ts }), r(e, t);\n          });\n        }, e);\n      } }, { key: "setSnoozePeriod", value: function value(e, n, t, r) {\n        var i,\n            a = this,\n            s = g(Q.parse(arguments, [new Q({ type: "boolean" }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 < e;\n          } }), new Q({ type: "number", constraint: function constraint(e) {\n            return 0 < e;\n          } }), new Q({ type: "callback" })]), 5);return i = s[0], e = s[1], n = s[2], t = s[3], r = s[4], K(this._iid, function (r) {\n          i ? r(i, null) : $.get(a._iid).container.apiClient.setSnoozePeriod({ snoozeOn: e, startTs: n, endTs: t }, function (e, n) {\n            var t = null;e || (t = { isSnoozeOn: n.snooze_enabled, startTs: n.snooze_start_ts, endTs: n.snooze_end_ts }), r(e, t);\n          });\n        }, r);\n      } }, { key: "blockUser", value: function value(e, n) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(e) {\n            return e && e.hasOwnProperty("userId");\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], t ? K(this._iid, function (e) {\n          e(t, null);\n        }, n) : this.blockUserWithUserId(e.userId, n);\n      } }, { key: "blockUserWithUserId", value: function value(e, n) {\n        var t,\n            i = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return e && (!i.currentUser || e !== i.currentUser.userId);\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.blockUser({ blockedUserId: e }, function (e, n) {\n            var t = null;e || (t = new se(n)), r(e, t);\n          });\n        }, n);\n      } }, { key: "unblockUser", value: function value(e, n) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "object", constraint: function constraint(e) {\n            return e && e.hasOwnProperty("userId");\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], t ? K(this._iid, function (e) {\n          e(t, null);\n        }, n) : this.unblockUserWithUserId(e.userId, n);\n      } }, { key: "unblockUserWithUserId", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "string", constraint: function constraint(e) {\n            return e && (!i.currentUser || e !== i.currentUser.userId);\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.unblockUser({ unblockedUserId: e }, function (e, n) {\n            t(e, null);\n          });\n        }, n);\n      } }, { key: "getPushTriggerOption", value: function value(e) {\n        var n = this;return K(this._iid, function (t) {\n          $.get(n._iid).container.apiClient.getPushTriggerOption({}, function (e, n) {\n            t(e, n ? n.push_trigger_option : null);\n          });\n        }, e);\n      } }, { key: "setPushTriggerOption", value: function value(e, n) {\n        var r = this;return K(this._iid, function (t) {\n          -1 < Object.keys(r.PushTriggerOption).map(function (e) {\n            return r.PushTriggerOption[e];\n          }).indexOf(e) ? $.get(r._iid).container.apiClient.setPushTriggerOption({ pushTriggerOption: e }, function (e, n) {\n            t(e, n ? n.push_trigger_option : null);\n          }) : t(Q.error, null);\n        }, n);\n      } }, { key: "getGroupChannelCount", value: function value(e, n) {\n        var t,\n            i = this,\n            r = L.get(this._iid).GroupChannel,\n            a = g(Q.parse(arguments, [new Q({ type: r.MemberStateFilter, optional: !0, defaultValue: r.MemberStateFilter.ALL }), new Q({ type: "callback" })]), 3);return t = a[0], e = a[1], n = a[2], K(this._iid, function (r) {\n          t ? r(t, null) : $.get(i._iid).container.apiClient.getGroupChannelCount({ memberStateFilter: e }, function (e, n) {\n            var t = null;e || (t = parseInt(n.group_channel_count)), r(e, t);\n          });\n        }, n);\n      } }, { key: "getTotalUnreadChannelCount", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getTotalUnreadChannelCount({}, function (e, n) {\n            var t = null;e || (t = parseInt(n.unread_count)), r(e, t);\n          });\n        }, e);\n      } }, { key: "getTotalUnreadMessageCount", value: function value(t, e) {\n        var i,\n            a = this,\n            n = L.get(this._iid),\n            s = n.GroupChannel,\n            o = n.GroupChannelTotalUnreadMessageCountParams,\n            r = g(Q.parse(arguments, [new Q({ type: "object", optional: !0, defaultValue: null, constraint: function constraint(e) {\n            return Array.isArray(e) && e.every(function (e) {\n              return "string" == typeof e;\n            }) || e instanceof o;\n          } }), new Q({ type: "callback" })]), 3);return i = r[0], t = r[1], e = r[2], K(this._iid, function (r) {\n          if (i) r(i, null);else {\n            var e = s.SuperChannelFilter.ALL;if (t instanceof o) {\n              var n = t;t = n.channelCustomTypesFilter, e = n.superChannelFilter;\n            }$.get(a._iid).container.apiClient.getTotalUnreadMessageCount({ customTypesFilter: t, superChannelFilter: e }, function (e, n) {\n              var t = null;e || (t = parseInt(n.unread_count)), r(e, t);\n            });\n          }\n        }, e);\n      } }, { key: "getUnreadItemCount", value: function value(r, e) {\n        var n,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return 0 < e.length && e.every(function (e) {\n              return -1 < Object.keys(be.UnreadItemKey).map(function (e) {\n                return be.UnreadItemKey[e];\n              }).indexOf(e);\n            });\n          } }), new Q({ type: "callback" })]), 3);return n = t[0], r = t[1], e = t[2], K(this._iid, function (t) {\n          if (n) t(n, null);else {\n            var e = r.filter(function (e, n) {\n              return r.indexOf(e) === n;\n            });$.get(i._iid).container.apiClient.getUnreadItemCount({ keys: e }, function (e, n) {\n              t(e, n);\n            });\n          }\n        }, e);\n      } }, { key: "getSubscribedTotalUnreadMessageCount", value: function value() {\n        var e = $.get(this._iid).container.subscribedUnreadMessageCount;return 0 <= e.all ? e.all : 0;\n      } }, { key: "getSubscribedCustomTypeTotalUnreadMessageCount", value: function value() {\n        var e = $.get(this._iid).container.subscribedUnreadMessageCount;if (0 < Object.keys(e.custom_types).length) {\n          var n = 0;for (var t in e.custom_types) {\n            n += e.custom_types[t];\n          }return n;\n        }return 0;\n      } }, { key: "getSubscribedCustomTypeUnreadMessageCount", value: function value(e) {\n        if (e && "string" == typeof e) {\n          var n = $.get(this._iid).container.subscribedUnreadMessageCount;return n.custom_types.hasOwnProperty(e) ? n.custom_types[e] : 0;\n        }return 0;\n      } }, { key: "getMyPushTokensByToken", value: function value(e, n, t) {\n        var i,\n            a = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "string", constraint: function constraint(e) {\n            return -1 < ["gcm", "apns", "apns_voip"].indexOf(e);\n          } }), new Q({ type: "callback" })]), 4);return i = r[0], e = r[1], n = r[2], t = r[3], K(this._iid, function (r) {\n          i ? r(i, null) : $.get(a._iid).container.apiClient.getPushTokens({ ts: null, token: e, type: n }, function (e, n) {\n            if (e) r(e, null);else {\n              var t = n.type;r(null, { deviceTokens: n.device_tokens, type: t ? t.toLowerCase() : "unknown", hasMore: n.has_more, token: n.token });\n            }\n          });\n        }, t);\n      } }, { key: "getPushTemplate", value: function value(e) {\n        var n = this;return K(this._iid, function (r) {\n          $.get(n._iid).container.apiClient.getPushTemplate({}, function (e, n) {\n            var t = null;e || (t = n.name.toString()), r(e, t);\n          });\n        }, e);\n      } }, { key: "setPushTemplate", value: function value(e, n) {\n        var t = this;return K(this._iid, function (r) {\n          -1 < [t.PUSH_TEMPLATE_DEFAULT, t.PUSH_TEMPLATE_ALTERNATIVE].indexOf(e) ? $.get(t._iid).container.apiClient.setPushTemplate({ templateName: e }, function (e, n) {\n            var t = null;e || (t = n.name.toString()), r(e, t);\n          }) : r(Q.error, null);\n        }, n);\n      } }, { key: "markAsReadAll", value: function value(e) {\n        var s = this;return K(this._iid, function (r) {\n          var i = L.get(s._iid).GroupChannel,\n              a = new Date().getTime();a - i.markAsReadAllLastSentAt < 1e3 ? r(new ee("MarkAsRead rate limit exceeded.", ee.MARK_AS_READ_RATE_LIMIT_EXCEEDED), null) : (i.markAsReadAllLastSentAt = a, $.get(s._iid).container.apiClient.markAsReadAll({ channelUrls: null }, function (e, n) {\n            if (!e) for (var t in i.cachedChannels) {\n              s.currentUser && i.cachedChannels[t].updateReadReceipt(s.currentUser.userId, a), i.cachedChannels[t]._setGroupChannelUnreadCount(0, 0);\n            }r(e, null);\n          }));\n        }, e);\n      } }, { key: "markAsReadWithChannelUrls", value: function value(a, e) {\n        var n,\n            s = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return n = t[0], a = t[1], e = t[2], K(this._iid, function (i) {\n          n ? i(n, null) : $.get(s._iid).container.apiClient.markAsReadAll({ channelUrls: a }, function (e, n) {\n            if (!e) for (var t in a) {\n              var r = a[t];be.cachedChannels[r] && (s.currentUser && be.cachedChannels[r].updateReadReceipt(s.currentUser.userId, now), be.cachedChannels[r]._setGroupChannelUnreadCount(0, 0));\n            }i(e, null);\n          });\n        }, e);\n      } }, { key: "getFriendChangeLogsByToken", value: function value(e, n) {\n        var t,\n            a = this,\n            r = g(Q.parse(arguments, [new Q({ type: "string", optional: !0, defaultValue: null }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (i) {\n          t ? i(t, null) : $.get(a._iid).container.apiClient.getFriendChangeLogsByToken({ token: e }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).User;t = { updatedUsers: n.updated.map(function (e) {\n                  return new r(e);\n                }), deletedUserIds: n.deleted, hasMore: n.has_more, token: n.next };\n            }i(e, t);\n          });\n        }, n);\n      } }, { key: "uploadFriendDiscoveries", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return e.hasOwnProperty("friendDiscoveryKey");\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.uploadFriendDiscoveries({ discoveries: e }, function (e, n) {\n            t(e, n);\n          });\n        }, n);\n      } }, { key: "deleteFriendDiscovery", value: function value(e, n) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], t ? K(this._iid, function (e) {\n          e(t, null);\n        }, n) : this.deleteFriendDiscoveries([e], n);\n      } }, { key: "deleteFriendDiscoveries", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.deleteFriendDiscoveries({ discoveryKeys: e }, function (e, n) {\n            t(e, n);\n          });\n        }, n);\n      } }, { key: "addFriends", value: function value(e, n) {\n        var t,\n            a = this,\n            r = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], K(this._iid, function (i) {\n          t ? i(t, null) : $.get(a._iid).container.apiClient.addFriends({ userIds: e }, function (e, n) {\n            var t = null;if (!e) {\n              var r = L.get(a._iid).User;t = n.users.map(function (e) {\n                return new r(e);\n              });\n            }i(e, t);\n          });\n        }, n);\n      } }, { key: "deleteFriend", value: function value(e, n) {\n        var t,\n            r = g(Q.parse(arguments, [new Q({ type: "string" }), new Q({ type: "callback" })]), 3);return t = r[0], e = r[1], n = r[2], t ? K(this._iid, function (e) {\n          e(t, null);\n        }, n) : this.deleteFriends([e], n);\n      } }, { key: "deleteFriends", value: function value(e, n) {\n        var r,\n            i = this,\n            t = g(Q.parse(arguments, [new Q({ type: "array", constraint: function constraint(e) {\n            return e.every(function (e) {\n              return "string" == typeof e;\n            });\n          } }), new Q({ type: "callback" })]), 3);return r = t[0], e = t[1], n = t[2], K(this._iid, function (t) {\n          r ? t(r, null) : $.get(i._iid).container.apiClient.deleteFriends({ userIds: e }, function (e, n) {\n            t(e, n);\n          });\n        }, n);\n      } }, { key: "ConnectionState", get: function get() {\n        return { CONNECTING: "CONNECTING", OPEN: "OPEN", CLOSED: "CLOSED" };\n      } }, { key: "MessageRequestState", get: function get() {\n        return { NONE: "none", PENDING: "pending", FAILED: "failed", SUCCEEDED: "succeeded" };\n      } }, { key: "pushTokenRegistrationState", get: function get() {\n        return { SUCCESS: "success", PENDING: "pending", ERROR: "error" };\n      } }, { key: "PushTriggerOption", get: function get() {\n        return { ALL: "all", MENTION_ONLY: "mention_only", OFF: "off" };\n      } }], [{ key: "getInstance", value: function value(e) {\n        return e ? ln[e] : un;\n      } }, { key: "version", get: function get() {\n        return f.SDK_VERSION;\n      } }]), o;\n  }();return dn;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(21)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LeftListItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _listItem = __webpack_require__(41);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _utils = __webpack_require__(0);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEY_MESSAGE_LAST_TIME = 'origin';\n\nvar channelMembersView = _lodash2.default.template('\\n  <div class=\"channel-member\">\\n    <img class=\"avatar\" src=\"<%= profileUrl %>\" />\\n    <p><%= nickname %></p>\\n  </div>\\n');\n\nvar LeftListItem = function () {\n  function LeftListItem(_ref) {\n    var channel = _ref.channel,\n        handler = _ref.handler;\n\n    _classCallCheck(this, LeftListItem);\n\n    this.channel = channel;\n    this.element = this._createElement(handler);\n  }\n\n  _createClass(LeftListItem, [{\n    key: '_createElement',\n    value: function _createElement(handler) {\n      var item = (0, _utils.createDivEl)({ className: _listItem2.default['list-item'], id: this.channelUrl });\n      if (this.channel.isOpenChannel()) {\n        var itemTop = (0, _utils.createDivEl)({ className: _listItem2.default['item-top'] });\n        var itemTopTitle = (0, _utils.createDivEl)({ className: _listItem2.default['item-title'], content: this.title });\n        itemTop.appendChild(itemTopTitle);\n        item.appendChild(itemTop);\n      } else {\n        var _itemTop = (0, _utils.createDivEl)({ className: _listItem2.default['item-top'] });\n        var itemTopCount = (0, _utils.createDivEl)({ className: _listItem2.default['item-count'], content: this.memberCount });\n        var _itemTopTitle = (0, _utils.createDivEl)({ className: _listItem2.default['item-title'], content: this.title });\n        var messageUnread = (0, _utils.createDivEl)({ className: [_listItem2.default['item-message-unread'], _listItem2.default.active], content: this.unreadMessageCount });\n        _itemTop.appendChild(itemTopCount);\n        _itemTop.appendChild(_itemTopTitle);\n        _itemTop.appendChild(messageUnread);\n        item.appendChild(_itemTop);\n\n        var itemBottom = (0, _utils.createDivEl)({ className: _listItem2.default['item-bottom'] });\n\n        var itemBottomMessage = (0, _utils.createDivEl)({ className: _listItem2.default['item-message'] });\n        var itemBottomMessageText = (0, _utils.createDivEl)({\n          className: _listItem2.default['item-message-text'],\n          content: this.lastMessageText\n        });\n        itemBottomMessage.appendChild(itemBottomMessageText);\n\n        var itemBottomTime = (0, _utils.createDivEl)({ className: _listItem2.default['item-time'], content: this.lastMessageTimeText });\n        (0, _utils.setDataInElement)(itemBottomTime, KEY_MESSAGE_LAST_TIME, this.lastMessagetime);\n        itemBottom.appendChild(itemBottomMessage);\n        itemBottom.appendChild(itemBottomTime);\n        item.appendChild(itemBottom);\n      }\n\n      item.addEventListener('click', function () {\n        if (handler) handler();\n      });\n      return item;\n    }\n  }, {\n    key: 'channelUrl',\n    get: function get() {\n      return this.channel.url;\n    }\n  }, {\n    key: 'title',\n    get: function get() {\n      return this.channel.isOpenChannel() ? '# ' + this.channel.name : (0, _utils.membersExcludingCurrentUserIn)(this.channel).map(channelMembersView).join('');\n    }\n  }, {\n    key: 'lastMessagetime',\n    get: function get() {\n      if (this.channel.isOpenChannel() || !this.channel.lastMessage) {\n        return 0;\n      } else {\n        return this.channel.lastMessage.createdAt;\n      }\n    }\n  }, {\n    key: 'lastMessageTimeText',\n    get: function get() {\n      if (this.channel.isOpenChannel() || !this.channel.lastMessage) {\n        return 0;\n      } else {\n        return LeftListItem.getTimeFromNow(this.channel.lastMessage.createdAt);\n      }\n    }\n  }, {\n    key: 'lastMessageText',\n    get: function get() {\n      if (this.channel.isOpenChannel() || !this.channel.lastMessage) {\n        return '';\n      } else {\n        return this.channel.lastMessage.isFileMessage() ? (0, _utils.protectFromXSS)(this.channel.lastMessage.name) : (0, _utils.protectFromXSS)(this.channel.lastMessage.message);\n      }\n    }\n  }, {\n    key: 'memberCount',\n    get: function get() {\n      return this.channel.isOpenChannel() ? '#' : this.channel.memberCount;\n    }\n  }, {\n    key: 'unreadMessageCount',\n    get: function get() {\n      var count = this.channel.unreadMessageCount > 9 ? '+9' : this.channel.unreadMessageCount.toString();\n      return this.channel.isOpenChannel() ? 0 : count;\n    }\n  }], [{\n    key: 'updateUnreadCount',\n    value: function updateUnreadCount() {\n      var items = _ChatLeftMenu.ChatLeftMenu.getInstance().groupChannelList.getElementsByClassName(_listItem2.default['item-message-unread']);\n      if (items && items.length > 0) {\n        Array.prototype.slice.call(items).forEach(function (targetItemEl) {\n          var originTs = targetItemEl.textContent;\n          if (originTs === '0') {\n            (0, _utils.removeClass)(targetItemEl, _listItem2.default.active);\n          } else {\n            (0, _utils.addClass)(targetItemEl, _listItem2.default.active);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'updateLastMessageTime',\n    value: function updateLastMessageTime() {\n      var items = _ChatLeftMenu.ChatLeftMenu.getInstance().groupChannelList.getElementsByClassName(_listItem2.default['item-time']);\n      if (items && items.length > 0) {\n        Array.prototype.slice.call(items).forEach(function (targetItemEl) {\n          var originTs = parseInt((0, _utils.getDataInElement)(targetItemEl, KEY_MESSAGE_LAST_TIME));\n          if (originTs) {\n            targetItemEl.innerHTML = LeftListItem.getTimeFromNow(originTs);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'getTimeFromNow',\n    value: function getTimeFromNow(timestamp) {\n      return (0, _utils.timestampFromNow)(timestamp);\n    }\n  }, {\n    key: 'getItemRootClassName',\n    value: function getItemRootClassName() {\n      return _listItem2.default['list-item'];\n    }\n  }]);\n\n  return LeftListItem;\n}();\n\nexports.LeftListItem = LeftListItem;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = __webpack_require__(0);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nvar _Chat = __webpack_require__(4);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _const = __webpack_require__(2);\n\nvar _SendBirdConnection = __webpack_require__(34);\n\nvar _SendBirdEvent = __webpack_require__(35);\n\nvar _LeftListItem = __webpack_require__(9);\n\nvar _AppState = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar view = _lodash2.default.template(\'\\n  <div class="ambisie-sendbird-messenger">\\n    <div class="body">\\n      <div class="body-left">\\n        <div class="body-left-list">\\n          <div class="chat-type">\\n            <div>CHATS</div>\\n            <div>\\n              <div class="icon-create-chat" id="group_chat_add"></div>\\n            </div>\\n          </div>\\n          <div id="group_list" class="chat-list chat-list-group">\\n            <div id="default_item_group" class="default-item">Start by inviting user to create a channel.</div>\\n          </div>\\n        </div>\\n        <div class="body-left-bottom" id="user_info">\\n          <div class="bottom-nickname">\\n            <div class="nickname-title">username</div>\\n            <div class="nickname-content"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class="body-center"></div>\\n    </div>\\n  </div>\');\n\nvar instance = null;\n\nvar Messenger = function () {\n  _createClass(Messenger, null, [{\n    key: \'getInstance\',\n    value: function getInstance() {\n      return instance;\n    }\n  }]);\n\n  function Messenger(_ref) {\n    var sendBirdAppId = _ref.sendBirdAppId,\n        userAccessToken = _ref.userAccessToken,\n        userId = _ref.userId,\n        nickname = _ref.nickname,\n        targetUserId = _ref.targetUserId,\n        containerEl = _ref.containerEl,\n        placeholderAvatarUrl = _ref.placeholderAvatarUrl,\n        noMessagePlaceholder = _ref.noMessagePlaceholder;\n\n    _classCallCheck(this, Messenger);\n\n    if (instance) {\n      return instance;\n    }\n\n    instance = this;\n    (0, _AppState.setAppState)({ currentUserId: userId, currentUserNickname: nickname, placeholderAvatarUrl: placeholderAvatarUrl, noMessagePlaceholder: noMessagePlaceholder });\n\n    this.containerEl = containerEl;\n    this.containerEl.innerHTML = view();\n\n    this.bodyEl = this.containerEl.querySelector(\'.body\');\n\n    this.sb = new _SendBirdAction.SendBirdAction(sendBirdAppId);\n    this.chatLeft = new _ChatLeftMenu.ChatLeftMenu(this.bodyEl);\n    this.chat = new _Chat.Chat(this.bodyEl);\n\n    this.connect({ userAccessToken: userAccessToken, userId: userId, nickname: nickname, targetUserId: targetUserId });\n  }\n\n  _createClass(Messenger, [{\n    key: \'isPhone\',\n    value: function isPhone() {\n      var type = window.getComputedStyle(this.bodyEl).getPropertyValue(\'--device-type\');\n      return _lodash2.default.trim(type) === \'phone\';\n    }\n  }, {\n    key: \'connect\',\n    value: function connect(_ref2) {\n      var _this = this;\n\n      var userAccessToken = _ref2.userAccessToken,\n          userId = _ref2.userId,\n          nickname = _ref2.nickname,\n          targetUserId = _ref2.targetUserId;\n\n      if ((0, _utils.isEmpty)(userId) || (0, _utils.isEmpty)(nickname)) {\n        alert(\'Messenger UserID and Nickname are required.\');\n      }\n\n      _Spinner.Spinner.start(this.bodyEl);\n\n      this.sb.connect(userId, userAccessToken, nickname).then(function (user) {\n        _this.chatLeft.updateUserInfo(user);\n        _this.createConnectionHandler();\n        _this.createChannelEvent();\n        _this.updateGroupChannelTime();\n        _this.chatLeft.getGroupChannelList(true).then(function () {\n          if (targetUserId) {\n            _this.sb.findOrCreateGroupChannelWithUsers([targetUserId]).then(function (channel) {\n              _this.chat.render(channel.url, false);\n              if (!_this.isPhone()) _this.chatLeft.show();\n\n              // HACK: allow queued background events to be processed in the event loop\n              _lodash2.default.defer(function () {\n                _this.chatLeft.activeChannelItem(channel.url);\n              });\n            });\n          } else {\n            if (_this.chatLeft.hasChannels()) _this.chatLeft.show();\n          }\n        });\n      }).catch(function (e) {\n        console.error("ERROR:", e);\n        alert(\'Messenger connection failed.\');\n      });\n    }\n  }, {\n    key: \'createConnectionHandler\',\n    value: function createConnectionHandler() {\n      var _this2 = this;\n\n      var connectionManager = new _SendBirdConnection.SendBirdConnection();\n      connectionManager.onReconnectStarted = function () {\n        _Spinner.Spinner.start(_const.body);\n        console.log(\'[SendBird JS SDK] Reconnect : Started\');\n        connectionManager.channel = _this2.chat.channel;\n      };\n      connectionManager.onReconnectSucceeded = function () {\n        console.log(\'[SendBird JS SDK] Reconnect : Succeeded\');\n        _this2.chatLeft.clear();\n        _this2.chatLeft.updateUserInfo(_SendBirdAction.SendBirdAction.getInstance().getCurrentUser());\n        _this2.chatLeft.getGroupChannelList(true);\n        _Spinner.Spinner.start(_const.body);\n        _this2.chat.refresh(connectionManager.channel);\n      };\n      connectionManager.onReconnectFailed = function () {\n        console.log(\'[SendBird JS SDK] Reconnect : Failed\');\n        connectionManager.remove();\n        console.error(\'Messenger Reconnect Failed...\');\n      };\n    }\n  }, {\n    key: \'createChannelEvent\',\n    value: function createChannelEvent() {\n      var _this3 = this;\n\n      var channelEvent = new _SendBirdEvent.SendBirdEvent();\n      channelEvent.onChannelChanged = function (channel) {\n        if (channel._autoMarkAsRead) {\n          channel.markAsRead();\n        }\n        _this3.chatLeft.updateItem(channel, true);\n      };\n      channelEvent.onUserEntered = function (openChannel, user) {\n        if (_SendBirdAction.SendBirdAction.getInstance().isCurrentUser(user)) {\n          var handler = function handler() {\n            _this3.chat.render(openChannel.url);\n            _ChatLeftMenu.ChatLeftMenu.getInstance().activeChannelItem(openChannel.url);\n          };\n          var item = new _LeftListItem.LeftListItem({ channel: openChannel, handler: handler });\n          _this3.chatLeft.addOpenChannelItem(item.element);\n          _this3.chat.render(openChannel.url);\n        }\n      };\n      channelEvent.onUserJoined = function (groupChannel, user) {\n        var handler = function handler() {\n          _this3.chat.render(groupChannel.url, false);\n          _ChatLeftMenu.ChatLeftMenu.getInstance().activeChannelItem(groupChannel.url);\n        };\n        var item = new _LeftListItem.LeftListItem({ channel: groupChannel, handler: handler });\n        _this3.chatLeft.addGroupChannelItem(item.element);\n        _this3.chat.updateChatInfo(groupChannel);\n\n        if (_this3.isPhone()) _this3.chatLeft.hide();\n      };\n      channelEvent.onUserLeft = function (groupChannel, user) {\n        if (_SendBirdAction.SendBirdAction.getInstance().isCurrentUser(user)) {\n          _this3.chatLeft.removeGroupChannelItem(groupChannel.url);\n        } else {\n          _this3.chatLeft.updateItem(groupChannel);\n        }\n        _this3.chat.updateChatInfo(groupChannel);\n      };\n      channelEvent.onChannelHidden = function (groupChannel) {\n        _this3.chatLeft.removeGroupChannelItem(groupChannel.url);\n      };\n    }\n  }, {\n    key: \'updateGroupChannelTime\',\n    value: function updateGroupChannelTime() {\n      setInterval(function () {\n        _LeftListItem.LeftListItem.updateLastMessageTime();\n      }, _const.UPDATE_INTERVAL_TIME);\n    }\n  }]);\n\n  return Messenger;\n}();\n\nexports.default = Messenger;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL01lc3Nlbmdlci5qcz9hZDc0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9sb2Rhc2ggPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxudmFyIF9sb2Rhc2gyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9kYXNoKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIF9TZW5kQmlyZEFjdGlvbiA9IHJlcXVpcmUoJy4vU2VuZEJpcmRBY3Rpb24nKTtcblxudmFyIF9DaGF0TGVmdE1lbnUgPSByZXF1aXJlKCcuL0NoYXRMZWZ0TWVudScpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuL0NoYXQnKTtcblxudmFyIF9TcGlubmVyID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL1NwaW5uZXInKTtcblxudmFyIF9jb25zdCA9IHJlcXVpcmUoJy4vY29uc3QnKTtcblxudmFyIF9TZW5kQmlyZENvbm5lY3Rpb24gPSByZXF1aXJlKCcuL1NlbmRCaXJkQ29ubmVjdGlvbicpO1xuXG52YXIgX1NlbmRCaXJkRXZlbnQgPSByZXF1aXJlKCcuL1NlbmRCaXJkRXZlbnQnKTtcblxudmFyIF9MZWZ0TGlzdEl0ZW0gPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvTGVmdExpc3RJdGVtJyk7XG5cbnZhciBfQXBwU3RhdGUgPSByZXF1aXJlKCcuL0FwcFN0YXRlJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciB2aWV3ID0gX2xvZGFzaDIuZGVmYXVsdC50ZW1wbGF0ZSgnXFxuICA8ZGl2IGNsYXNzPVwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIj5cXG4gICAgPGRpdiBjbGFzcz1cImJvZHlcIj5cXG4gICAgICA8ZGl2IGNsYXNzPVwiYm9keS1sZWZ0XCI+XFxuICAgICAgICA8ZGl2IGNsYXNzPVwiYm9keS1sZWZ0LWxpc3RcIj5cXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNoYXQtdHlwZVwiPlxcbiAgICAgICAgICAgIDxkaXY+Q0hBVFM8L2Rpdj5cXG4gICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImljb24tY3JlYXRlLWNoYXRcIiBpZD1cImdyb3VwX2NoYXRfYWRkXCI+PC9kaXY+XFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICA8ZGl2IGlkPVwiZ3JvdXBfbGlzdFwiIGNsYXNzPVwiY2hhdC1saXN0IGNoYXQtbGlzdC1ncm91cFwiPlxcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJkZWZhdWx0X2l0ZW1fZ3JvdXBcIiBjbGFzcz1cImRlZmF1bHQtaXRlbVwiPlN0YXJ0IGJ5IGludml0aW5nIHVzZXIgdG8gY3JlYXRlIGEgY2hhbm5lbC48L2Rpdj5cXG4gICAgICAgICAgPC9kaXY+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XCJib2R5LWxlZnQtYm90dG9tXCIgaWQ9XCJ1c2VyX2luZm9cIj5cXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJvdHRvbS1uaWNrbmFtZVwiPlxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuaWNrbmFtZS10aXRsZVwiPnVzZXJuYW1lPC9kaXY+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5pY2tuYW1lLWNvbnRlbnRcIj48L2Rpdj5cXG4gICAgICAgICAgPC9kaXY+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICA8L2Rpdj5cXG4gICAgICA8ZGl2IGNsYXNzPVwiYm9keS1jZW50ZXJcIj48L2Rpdj5cXG4gICAgPC9kaXY+XFxuICA8L2Rpdj4nKTtcblxudmFyIGluc3RhbmNlID0gbnVsbDtcblxudmFyIE1lc3NlbmdlciA9IGZ1bmN0aW9uICgpIHtcbiAgX2NyZWF0ZUNsYXNzKE1lc3NlbmdlciwgbnVsbCwgW3tcbiAgICBrZXk6ICdnZXRJbnN0YW5jZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEluc3RhbmNlKCkge1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cbiAgfV0pO1xuXG4gIGZ1bmN0aW9uIE1lc3NlbmdlcihfcmVmKSB7XG4gICAgdmFyIHNlbmRCaXJkQXBwSWQgPSBfcmVmLnNlbmRCaXJkQXBwSWQsXG4gICAgICAgIHVzZXJBY2Nlc3NUb2tlbiA9IF9yZWYudXNlckFjY2Vzc1Rva2VuLFxuICAgICAgICB1c2VySWQgPSBfcmVmLnVzZXJJZCxcbiAgICAgICAgbmlja25hbWUgPSBfcmVmLm5pY2tuYW1lLFxuICAgICAgICB0YXJnZXRVc2VySWQgPSBfcmVmLnRhcmdldFVzZXJJZCxcbiAgICAgICAgY29udGFpbmVyRWwgPSBfcmVmLmNvbnRhaW5lckVsLFxuICAgICAgICBwbGFjZWhvbGRlckF2YXRhclVybCA9IF9yZWYucGxhY2Vob2xkZXJBdmF0YXJVcmwsXG4gICAgICAgIG5vTWVzc2FnZVBsYWNlaG9sZGVyID0gX3JlZi5ub01lc3NhZ2VQbGFjZWhvbGRlcjtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZXNzZW5nZXIpO1xuXG4gICAgaWYgKGluc3RhbmNlKSB7XG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgaW5zdGFuY2UgPSB0aGlzO1xuICAgICgwLCBfQXBwU3RhdGUuc2V0QXBwU3RhdGUpKHsgY3VycmVudFVzZXJJZDogdXNlcklkLCBjdXJyZW50VXNlck5pY2tuYW1lOiBuaWNrbmFtZSwgcGxhY2Vob2xkZXJBdmF0YXJVcmw6IHBsYWNlaG9sZGVyQXZhdGFyVXJsLCBub01lc3NhZ2VQbGFjZWhvbGRlcjogbm9NZXNzYWdlUGxhY2Vob2xkZXIgfSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lckVsID0gY29udGFpbmVyRWw7XG4gICAgdGhpcy5jb250YWluZXJFbC5pbm5lckhUTUwgPSB2aWV3KCk7XG5cbiAgICB0aGlzLmJvZHlFbCA9IHRoaXMuY29udGFpbmVyRWwucXVlcnlTZWxlY3RvcignLmJvZHknKTtcblxuICAgIHRoaXMuc2IgPSBuZXcgX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uKHNlbmRCaXJkQXBwSWQpO1xuICAgIHRoaXMuY2hhdExlZnQgPSBuZXcgX0NoYXRMZWZ0TWVudS5DaGF0TGVmdE1lbnUodGhpcy5ib2R5RWwpO1xuICAgIHRoaXMuY2hhdCA9IG5ldyBfQ2hhdC5DaGF0KHRoaXMuYm9keUVsKTtcblxuICAgIHRoaXMuY29ubmVjdCh7IHVzZXJBY2Nlc3NUb2tlbjogdXNlckFjY2Vzc1Rva2VuLCB1c2VySWQ6IHVzZXJJZCwgbmlja25hbWU6IG5pY2tuYW1lLCB0YXJnZXRVc2VySWQ6IHRhcmdldFVzZXJJZCB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhNZXNzZW5nZXIsIFt7XG4gICAga2V5OiAnaXNQaG9uZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzUGhvbmUoKSB7XG4gICAgICB2YXIgdHlwZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuYm9keUVsKS5nZXRQcm9wZXJ0eVZhbHVlKCctLWRldmljZS10eXBlJyk7XG4gICAgICByZXR1cm4gX2xvZGFzaDIuZGVmYXVsdC50cmltKHR5cGUpID09PSAncGhvbmUnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Nvbm5lY3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb25uZWN0KF9yZWYyKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgdXNlckFjY2Vzc1Rva2VuID0gX3JlZjIudXNlckFjY2Vzc1Rva2VuLFxuICAgICAgICAgIHVzZXJJZCA9IF9yZWYyLnVzZXJJZCxcbiAgICAgICAgICBuaWNrbmFtZSA9IF9yZWYyLm5pY2tuYW1lLFxuICAgICAgICAgIHRhcmdldFVzZXJJZCA9IF9yZWYyLnRhcmdldFVzZXJJZDtcblxuICAgICAgaWYgKCgwLCBfdXRpbHMuaXNFbXB0eSkodXNlcklkKSB8fCAoMCwgX3V0aWxzLmlzRW1wdHkpKG5pY2tuYW1lKSkge1xuICAgICAgICBhbGVydCgnTWVzc2VuZ2VyIFVzZXJJRCBhbmQgTmlja25hbWUgYXJlIHJlcXVpcmVkLicpO1xuICAgICAgfVxuXG4gICAgICBfU3Bpbm5lci5TcGlubmVyLnN0YXJ0KHRoaXMuYm9keUVsKTtcblxuICAgICAgdGhpcy5zYi5jb25uZWN0KHVzZXJJZCwgdXNlckFjY2Vzc1Rva2VuLCBuaWNrbmFtZSkudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICBfdGhpcy5jaGF0TGVmdC51cGRhdGVVc2VySW5mbyh1c2VyKTtcbiAgICAgICAgX3RoaXMuY3JlYXRlQ29ubmVjdGlvbkhhbmRsZXIoKTtcbiAgICAgICAgX3RoaXMuY3JlYXRlQ2hhbm5lbEV2ZW50KCk7XG4gICAgICAgIF90aGlzLnVwZGF0ZUdyb3VwQ2hhbm5lbFRpbWUoKTtcbiAgICAgICAgX3RoaXMuY2hhdExlZnQuZ2V0R3JvdXBDaGFubmVsTGlzdCh0cnVlKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAodGFyZ2V0VXNlcklkKSB7XG4gICAgICAgICAgICBfdGhpcy5zYi5maW5kT3JDcmVhdGVHcm91cENoYW5uZWxXaXRoVXNlcnMoW3RhcmdldFVzZXJJZF0pLnRoZW4oZnVuY3Rpb24gKGNoYW5uZWwpIHtcbiAgICAgICAgICAgICAgX3RoaXMuY2hhdC5yZW5kZXIoY2hhbm5lbC51cmwsIGZhbHNlKTtcbiAgICAgICAgICAgICAgaWYgKCFfdGhpcy5pc1Bob25lKCkpIF90aGlzLmNoYXRMZWZ0LnNob3coKTtcblxuICAgICAgICAgICAgICAvLyBIQUNLOiBhbGxvdyBxdWV1ZWQgYmFja2dyb3VuZCBldmVudHMgdG8gYmUgcHJvY2Vzc2VkIGluIHRoZSBldmVudCBsb29wXG4gICAgICAgICAgICAgIF9sb2Rhc2gyLmRlZmF1bHQuZGVmZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmNoYXRMZWZ0LmFjdGl2ZUNoYW5uZWxJdGVtKGNoYW5uZWwudXJsKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKF90aGlzLmNoYXRMZWZ0Lmhhc0NoYW5uZWxzKCkpIF90aGlzLmNoYXRMZWZ0LnNob3coKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVSUk9SOlwiLCBlKTtcbiAgICAgICAgYWxlcnQoJ01lc3NlbmdlciBjb25uZWN0aW9uIGZhaWxlZC4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NyZWF0ZUNvbm5lY3Rpb25IYW5kbGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbkhhbmRsZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGNvbm5lY3Rpb25NYW5hZ2VyID0gbmV3IF9TZW5kQmlyZENvbm5lY3Rpb24uU2VuZEJpcmRDb25uZWN0aW9uKCk7XG4gICAgICBjb25uZWN0aW9uTWFuYWdlci5vblJlY29ubmVjdFN0YXJ0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9TcGlubmVyLlNwaW5uZXIuc3RhcnQoX2NvbnN0LmJvZHkpO1xuICAgICAgICBjb25zb2xlLmxvZygnW1NlbmRCaXJkIEpTIFNES10gUmVjb25uZWN0IDogU3RhcnRlZCcpO1xuICAgICAgICBjb25uZWN0aW9uTWFuYWdlci5jaGFubmVsID0gX3RoaXMyLmNoYXQuY2hhbm5lbDtcbiAgICAgIH07XG4gICAgICBjb25uZWN0aW9uTWFuYWdlci5vblJlY29ubmVjdFN1Y2NlZWRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tTZW5kQmlyZCBKUyBTREtdIFJlY29ubmVjdCA6IFN1Y2NlZWRlZCcpO1xuICAgICAgICBfdGhpczIuY2hhdExlZnQuY2xlYXIoKTtcbiAgICAgICAgX3RoaXMyLmNoYXRMZWZ0LnVwZGF0ZVVzZXJJbmZvKF9TZW5kQmlyZEFjdGlvbi5TZW5kQmlyZEFjdGlvbi5nZXRJbnN0YW5jZSgpLmdldEN1cnJlbnRVc2VyKCkpO1xuICAgICAgICBfdGhpczIuY2hhdExlZnQuZ2V0R3JvdXBDaGFubmVsTGlzdCh0cnVlKTtcbiAgICAgICAgX1NwaW5uZXIuU3Bpbm5lci5zdGFydChfY29uc3QuYm9keSk7XG4gICAgICAgIF90aGlzMi5jaGF0LnJlZnJlc2goY29ubmVjdGlvbk1hbmFnZXIuY2hhbm5lbCk7XG4gICAgICB9O1xuICAgICAgY29ubmVjdGlvbk1hbmFnZXIub25SZWNvbm5lY3RGYWlsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbU2VuZEJpcmQgSlMgU0RLXSBSZWNvbm5lY3QgOiBGYWlsZWQnKTtcbiAgICAgICAgY29ubmVjdGlvbk1hbmFnZXIucmVtb3ZlKCk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01lc3NlbmdlciBSZWNvbm5lY3QgRmFpbGVkLi4uJyk7XG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NyZWF0ZUNoYW5uZWxFdmVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUNoYW5uZWxFdmVudCgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgY2hhbm5lbEV2ZW50ID0gbmV3IF9TZW5kQmlyZEV2ZW50LlNlbmRCaXJkRXZlbnQoKTtcbiAgICAgIGNoYW5uZWxFdmVudC5vbkNoYW5uZWxDaGFuZ2VkID0gZnVuY3Rpb24gKGNoYW5uZWwpIHtcbiAgICAgICAgaWYgKGNoYW5uZWwuX2F1dG9NYXJrQXNSZWFkKSB7XG4gICAgICAgICAgY2hhbm5lbC5tYXJrQXNSZWFkKCk7XG4gICAgICAgIH1cbiAgICAgICAgX3RoaXMzLmNoYXRMZWZ0LnVwZGF0ZUl0ZW0oY2hhbm5lbCwgdHJ1ZSk7XG4gICAgICB9O1xuICAgICAgY2hhbm5lbEV2ZW50Lm9uVXNlckVudGVyZWQgPSBmdW5jdGlvbiAob3BlbkNoYW5uZWwsIHVzZXIpIHtcbiAgICAgICAgaWYgKF9TZW5kQmlyZEFjdGlvbi5TZW5kQmlyZEFjdGlvbi5nZXRJbnN0YW5jZSgpLmlzQ3VycmVudFVzZXIodXNlcikpIHtcbiAgICAgICAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIoKSB7XG4gICAgICAgICAgICBfdGhpczMuY2hhdC5yZW5kZXIob3BlbkNoYW5uZWwudXJsKTtcbiAgICAgICAgICAgIF9DaGF0TGVmdE1lbnUuQ2hhdExlZnRNZW51LmdldEluc3RhbmNlKCkuYWN0aXZlQ2hhbm5lbEl0ZW0ob3BlbkNoYW5uZWwudXJsKTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIHZhciBpdGVtID0gbmV3IF9MZWZ0TGlzdEl0ZW0uTGVmdExpc3RJdGVtKHsgY2hhbm5lbDogb3BlbkNoYW5uZWwsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgICAgICAgX3RoaXMzLmNoYXRMZWZ0LmFkZE9wZW5DaGFubmVsSXRlbShpdGVtLmVsZW1lbnQpO1xuICAgICAgICAgIF90aGlzMy5jaGF0LnJlbmRlcihvcGVuQ2hhbm5lbC51cmwpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY2hhbm5lbEV2ZW50Lm9uVXNlckpvaW5lZCA9IGZ1bmN0aW9uIChncm91cENoYW5uZWwsIHVzZXIpIHtcbiAgICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgICAgIF90aGlzMy5jaGF0LnJlbmRlcihncm91cENoYW5uZWwudXJsLCBmYWxzZSk7XG4gICAgICAgICAgX0NoYXRMZWZ0TWVudS5DaGF0TGVmdE1lbnUuZ2V0SW5zdGFuY2UoKS5hY3RpdmVDaGFubmVsSXRlbShncm91cENoYW5uZWwudXJsKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGl0ZW0gPSBuZXcgX0xlZnRMaXN0SXRlbS5MZWZ0TGlzdEl0ZW0oeyBjaGFubmVsOiBncm91cENoYW5uZWwsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgICAgIF90aGlzMy5jaGF0TGVmdC5hZGRHcm91cENoYW5uZWxJdGVtKGl0ZW0uZWxlbWVudCk7XG4gICAgICAgIF90aGlzMy5jaGF0LnVwZGF0ZUNoYXRJbmZvKGdyb3VwQ2hhbm5lbCk7XG5cbiAgICAgICAgaWYgKF90aGlzMy5pc1Bob25lKCkpIF90aGlzMy5jaGF0TGVmdC5oaWRlKCk7XG4gICAgICB9O1xuICAgICAgY2hhbm5lbEV2ZW50Lm9uVXNlckxlZnQgPSBmdW5jdGlvbiAoZ3JvdXBDaGFubmVsLCB1c2VyKSB7XG4gICAgICAgIGlmIChfU2VuZEJpcmRBY3Rpb24uU2VuZEJpcmRBY3Rpb24uZ2V0SW5zdGFuY2UoKS5pc0N1cnJlbnRVc2VyKHVzZXIpKSB7XG4gICAgICAgICAgX3RoaXMzLmNoYXRMZWZ0LnJlbW92ZUdyb3VwQ2hhbm5lbEl0ZW0oZ3JvdXBDaGFubmVsLnVybCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMzLmNoYXRMZWZ0LnVwZGF0ZUl0ZW0oZ3JvdXBDaGFubmVsKTtcbiAgICAgICAgfVxuICAgICAgICBfdGhpczMuY2hhdC51cGRhdGVDaGF0SW5mbyhncm91cENoYW5uZWwpO1xuICAgICAgfTtcbiAgICAgIGNoYW5uZWxFdmVudC5vbkNoYW5uZWxIaWRkZW4gPSBmdW5jdGlvbiAoZ3JvdXBDaGFubmVsKSB7XG4gICAgICAgIF90aGlzMy5jaGF0TGVmdC5yZW1vdmVHcm91cENoYW5uZWxJdGVtKGdyb3VwQ2hhbm5lbC51cmwpO1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGVHcm91cENoYW5uZWxUaW1lJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlR3JvdXBDaGFubmVsVGltZSgpIHtcbiAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX0xlZnRMaXN0SXRlbS5MZWZ0TGlzdEl0ZW0udXBkYXRlTGFzdE1lc3NhZ2VUaW1lKCk7XG4gICAgICB9LCBfY29uc3QuVVBEQVRFX0lOVEVSVkFMX1RJTUUpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNZXNzZW5nZXI7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE1lc3NlbmdlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = XMLHttpRequest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vbm9kZV9tb2R1bGVzL3hocjIvbGliL2Jyb3dzZXIuanM/ZDdlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBYTUxIdHRwUmVxdWVzdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = function () {\n  throw new Error('ws does not work in the browser. Browser clients must use the native ' + 'WebSocket object');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vbm9kZV9tb2R1bGVzL3dzL2Jyb3dzZXIuanM/ZjIxNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ3dzIGRvZXMgbm90IHdvcmsgaW4gdGhlIGJyb3dzZXIuIEJyb3dzZXIgY2xpZW50cyBtdXN0IHVzZSB0aGUgbmF0aXZlICcgKyAnV2ViU29ja2V0IG9iamVjdCcpO1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenChannelList = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(0);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _OpenChannelItem = __webpack_require__(22);\n\nvar _List2 = __webpack_require__(14);\n\nvar _const = __webpack_require__(2);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar instance = null;\n\nvar OpenChannelList = function (_List) {\n  _inherits(OpenChannelList, _List);\n\n  function OpenChannelList() {\n    _classCallCheck(this, OpenChannelList);\n\n    var _this = _possibleConstructorReturn(this, (OpenChannelList.__proto__ || Object.getPrototypeOf(OpenChannelList)).call(this, 'Open Channel List', true));\n\n    if (instance) {\n      var _ret;\n\n      return _ret = instance, _possibleConstructorReturn(_this, _ret);\n    }\n\n    _this.scrollEventHandler = _this._getOpenChannelList;\n    _this.searchKeyword = '';\n    instance = _this;\n    return _this;\n  }\n\n  _createClass(OpenChannelList, [{\n    key: '_getOpenChannelList',\n    value: function _getOpenChannelList() {\n      var _this2 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var urlKeyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      _Spinner.Spinner.start(this.element);\n\n      if (urlKeyword !== this.searchKeyword) {\n        this.searchKeyword = urlKeyword;\n        isInit = true;\n      }\n\n      var listContent = this.getContentElement();\n      if (isInit) {\n        listContent.innerHTML = '';\n      }\n\n      _SendBirdAction.SendBirdAction.getInstance().getOpenChannelList(isInit, urlKeyword).then(function (openChannelList) {\n        openChannelList.forEach(function (channel) {\n          var handler = function handler() {\n            var existItem = _ChatLeftMenu.ChatLeftMenu.getInstance().getChannelItem(channel.url);\n            if (existItem) {\n              existItem.click();\n              _this2.close();\n            } else {\n              _SendBirdAction.SendBirdAction.getInstance().enter(item.channelUrl).then(function () {\n                _this2.close();\n              }).catch(function (error) {\n                (0, _utils.errorAlert)(error.message);\n              });\n            }\n          };\n          var item = new _OpenChannelItem.OpenChannelItem({ channel: channel, handler: handler });\n          listContent.appendChild(item.element);\n        });\n        _Spinner.Spinner.remove();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!_const.body.querySelector('.' + this.getRootClassName())) {\n        _const.body.appendChild(this.element);\n        this._getOpenChannelList(true);\n      }\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new OpenChannelList();\n    }\n  }]);\n\n  return OpenChannelList;\n}(_List2.List);\n\nexports.OpenChannelList = OpenChannelList;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvT3BlbkNoYW5uZWxMaXN0LmpzP2U5MDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5PcGVuQ2hhbm5lbExpc3QgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX1NwaW5uZXIgPSByZXF1aXJlKCcuL1NwaW5uZXInKTtcblxudmFyIF9TZW5kQmlyZEFjdGlvbiA9IHJlcXVpcmUoJy4uL1NlbmRCaXJkQWN0aW9uJyk7XG5cbnZhciBfT3BlbkNoYW5uZWxJdGVtID0gcmVxdWlyZSgnLi9PcGVuQ2hhbm5lbEl0ZW0nKTtcblxudmFyIF9MaXN0MiA9IHJlcXVpcmUoJy4vTGlzdCcpO1xuXG52YXIgX2NvbnN0ID0gcmVxdWlyZSgnLi4vY29uc3QnKTtcblxudmFyIF9DaGF0TGVmdE1lbnUgPSByZXF1aXJlKCcuLi9DaGF0TGVmdE1lbnUnKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgaW5zdGFuY2UgPSBudWxsO1xuXG52YXIgT3BlbkNoYW5uZWxMaXN0ID0gZnVuY3Rpb24gKF9MaXN0KSB7XG4gIF9pbmhlcml0cyhPcGVuQ2hhbm5lbExpc3QsIF9MaXN0KTtcblxuICBmdW5jdGlvbiBPcGVuQ2hhbm5lbExpc3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9wZW5DaGFubmVsTGlzdCk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoT3BlbkNoYW5uZWxMaXN0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoT3BlbkNoYW5uZWxMaXN0KSkuY2FsbCh0aGlzLCAnT3BlbiBDaGFubmVsIExpc3QnLCB0cnVlKSk7XG5cbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIHZhciBfcmV0O1xuXG4gICAgICByZXR1cm4gX3JldCA9IGluc3RhbmNlLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gICAgfVxuXG4gICAgX3RoaXMuc2Nyb2xsRXZlbnRIYW5kbGVyID0gX3RoaXMuX2dldE9wZW5DaGFubmVsTGlzdDtcbiAgICBfdGhpcy5zZWFyY2hLZXl3b3JkID0gJyc7XG4gICAgaW5zdGFuY2UgPSBfdGhpcztcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoT3BlbkNoYW5uZWxMaXN0LCBbe1xuICAgIGtleTogJ19nZXRPcGVuQ2hhbm5lbExpc3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0T3BlbkNoYW5uZWxMaXN0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBpc0luaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuICAgICAgdmFyIHVybEtleXdvcmQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gICAgICBfU3Bpbm5lci5TcGlubmVyLnN0YXJ0KHRoaXMuZWxlbWVudCk7XG5cbiAgICAgIGlmICh1cmxLZXl3b3JkICE9PSB0aGlzLnNlYXJjaEtleXdvcmQpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hLZXl3b3JkID0gdXJsS2V5d29yZDtcbiAgICAgICAgaXNJbml0ID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGxpc3RDb250ZW50ID0gdGhpcy5nZXRDb250ZW50RWxlbWVudCgpO1xuICAgICAgaWYgKGlzSW5pdCkge1xuICAgICAgICBsaXN0Q29udGVudC5pbm5lckhUTUwgPSAnJztcbiAgICAgIH1cblxuICAgICAgX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uLmdldEluc3RhbmNlKCkuZ2V0T3BlbkNoYW5uZWxMaXN0KGlzSW5pdCwgdXJsS2V5d29yZCkudGhlbihmdW5jdGlvbiAob3BlbkNoYW5uZWxMaXN0KSB7XG4gICAgICAgIG9wZW5DaGFubmVsTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChjaGFubmVsKSB7XG4gICAgICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiBoYW5kbGVyKCkge1xuICAgICAgICAgICAgdmFyIGV4aXN0SXRlbSA9IF9DaGF0TGVmdE1lbnUuQ2hhdExlZnRNZW51LmdldEluc3RhbmNlKCkuZ2V0Q2hhbm5lbEl0ZW0oY2hhbm5lbC51cmwpO1xuICAgICAgICAgICAgaWYgKGV4aXN0SXRlbSkge1xuICAgICAgICAgICAgICBleGlzdEl0ZW0uY2xpY2soKTtcbiAgICAgICAgICAgICAgX3RoaXMyLmNsb3NlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBfU2VuZEJpcmRBY3Rpb24uU2VuZEJpcmRBY3Rpb24uZ2V0SW5zdGFuY2UoKS5lbnRlcihpdGVtLmNoYW5uZWxVcmwpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzMi5jbG9zZSgpO1xuICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAoMCwgX3V0aWxzLmVycm9yQWxlcnQpKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICAgIHZhciBpdGVtID0gbmV3IF9PcGVuQ2hhbm5lbEl0ZW0uT3BlbkNoYW5uZWxJdGVtKHsgY2hhbm5lbDogY2hhbm5lbCwgaGFuZGxlcjogaGFuZGxlciB9KTtcbiAgICAgICAgICBsaXN0Q29udGVudC5hcHBlbmRDaGlsZChpdGVtLmVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgX1NwaW5uZXIuU3Bpbm5lci5yZW1vdmUoKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAoMCwgX3V0aWxzLmVycm9yQWxlcnQpKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgaWYgKCFfY29uc3QuYm9keS5xdWVyeVNlbGVjdG9yKCcuJyArIHRoaXMuZ2V0Um9vdENsYXNzTmFtZSgpKSkge1xuICAgICAgICBfY29uc3QuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICAgICAgICB0aGlzLl9nZXRPcGVuQ2hhbm5lbExpc3QodHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6ICdnZXRJbnN0YW5jZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEluc3RhbmNlKCkge1xuICAgICAgcmV0dXJuIG5ldyBPcGVuQ2hhbm5lbExpc3QoKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gT3BlbkNoYW5uZWxMaXN0O1xufShfTGlzdDIuTGlzdCk7XG5cbmV4cG9ydHMuT3BlbkNoYW5uZWxMaXN0ID0gT3BlbkNoYW5uZWxMaXN0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.List = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _list = __webpack_require__(47);\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _utils = __webpack_require__(0);\n\nvar _OpenChannelSearchBox = __webpack_require__(23);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar List = function () {\n  function List(title) {\n    var createSearchBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, List);\n\n    if (instance) {\n      return instance;\n    }\n    this.createSearchBox = createSearchBox;\n    this.element = this._create(title);\n    this.scrollEventHandler = null;\n    this.closeEventHandler = null;\n    this.searchKeyword = '';\n  }\n\n  _createClass(List, [{\n    key: '_create',\n    value: function _create(title) {\n      var _this = this;\n\n      var root = (0, _utils.createDivEl)({ className: _list2.default['list-root'] });\n\n      var listBody = (0, _utils.createDivEl)({ className: _list2.default['list-body'] });\n      root.appendChild(listBody);\n\n      var listTop = (0, _utils.createDivEl)({ className: _list2.default['list-top'] });\n      listBody.appendChild(listTop);\n\n      var listTopTitle = (0, _utils.createDivEl)({ className: _list2.default['list-title'], content: title });\n      listTop.appendChild(listTopTitle);\n      var listTopButton = (0, _utils.createDivEl)({ className: _list2.default['list-button'] });\n      listTop.appendChild(listTopButton);\n      var listTopButtonExit = (0, _utils.createDivEl)({ className: _list2.default['button-exit'] });\n      listTopButton.appendChild(listTopButtonExit);\n      listTopButtonExit.addEventListener('click', function () {\n        _this.searchKeyword = '';\n        _OpenChannelSearchBox.OpenChannelSearchBox.clearText();\n        var listContent = document.querySelector('.' + _list2.default['list-content']);\n        if (_this.closeEventHandler) {\n          _this.closeEventHandler();\n        }\n        listContent.innerHTML = '';\n        root.parentElement.removeChild(_this.element);\n      });\n      this.buttonRootElement = listTopButton;\n\n      if (this.createSearchBox) {\n        var searchBox = new _OpenChannelSearchBox.OpenChannelSearchBox();\n        listBody.appendChild(searchBox.element);\n      }\n\n      var hr = (0, _utils.createDivEl)({ className: _list2.default['list-hr'] });\n      listBody.appendChild(hr);\n\n      var listContent = (0, _utils.createDivEl)({ className: _list2.default['list-content'] });\n      listBody.appendChild(listContent);\n      listContent.addEventListener('scroll', function () {\n        if ((0, _utils.isScrollBottom)(listContent)) {\n          if (_this.scrollEventHandler) {\n            _this.scrollEventHandler(false, _this.searchKeyword);\n          }\n        }\n      });\n\n      return root;\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      var btnExit = document.querySelector('.' + _list2.default['button-exit']);\n      if (btnExit) {\n        document.querySelector('.' + _list2.default['button-exit']).click();\n      }\n    }\n  }, {\n    key: 'getRootElement',\n    value: function getRootElement() {\n      return document.querySelector('.' + _list2.default['list-root']);\n    }\n  }, {\n    key: 'getRootClassName',\n    value: function getRootClassName() {\n      return _list2.default['list-root'];\n    }\n  }, {\n    key: 'getContentElement',\n    value: function getContentElement() {\n      return document.querySelector('.' + _list2.default['list-content']);\n    }\n  }]);\n\n  return List;\n}();\n\nexports.List = List;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvTGlzdC5qcz9mYTk3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuTGlzdCA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9saXN0ID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9saXN0LnNjc3MnKTtcblxudmFyIF9saXN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xpc3QpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxudmFyIF9PcGVuQ2hhbm5lbFNlYXJjaEJveCA9IHJlcXVpcmUoJy4vT3BlbkNoYW5uZWxTZWFyY2hCb3gnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIGluc3RhbmNlID0gbnVsbDtcblxudmFyIExpc3QgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExpc3QodGl0bGUpIHtcbiAgICB2YXIgY3JlYXRlU2VhcmNoQm94ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaXN0KTtcblxuICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cbiAgICB0aGlzLmNyZWF0ZVNlYXJjaEJveCA9IGNyZWF0ZVNlYXJjaEJveDtcbiAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLl9jcmVhdGUodGl0bGUpO1xuICAgIHRoaXMuc2Nyb2xsRXZlbnRIYW5kbGVyID0gbnVsbDtcbiAgICB0aGlzLmNsb3NlRXZlbnRIYW5kbGVyID0gbnVsbDtcbiAgICB0aGlzLnNlYXJjaEtleXdvcmQgPSAnJztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMaXN0LCBbe1xuICAgIGtleTogJ19jcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlKHRpdGxlKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgcm9vdCA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfbGlzdDIuZGVmYXVsdFsnbGlzdC1yb290J10gfSk7XG5cbiAgICAgIHZhciBsaXN0Qm9keSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfbGlzdDIuZGVmYXVsdFsnbGlzdC1ib2R5J10gfSk7XG4gICAgICByb290LmFwcGVuZENoaWxkKGxpc3RCb2R5KTtcblxuICAgICAgdmFyIGxpc3RUb3AgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2xpc3QyLmRlZmF1bHRbJ2xpc3QtdG9wJ10gfSk7XG4gICAgICBsaXN0Qm9keS5hcHBlbmRDaGlsZChsaXN0VG9wKTtcblxuICAgICAgdmFyIGxpc3RUb3BUaXRsZSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfbGlzdDIuZGVmYXVsdFsnbGlzdC10aXRsZSddLCBjb250ZW50OiB0aXRsZSB9KTtcbiAgICAgIGxpc3RUb3AuYXBwZW5kQ2hpbGQobGlzdFRvcFRpdGxlKTtcbiAgICAgIHZhciBsaXN0VG9wQnV0dG9uID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9saXN0Mi5kZWZhdWx0WydsaXN0LWJ1dHRvbiddIH0pO1xuICAgICAgbGlzdFRvcC5hcHBlbmRDaGlsZChsaXN0VG9wQnV0dG9uKTtcbiAgICAgIHZhciBsaXN0VG9wQnV0dG9uRXhpdCA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfbGlzdDIuZGVmYXVsdFsnYnV0dG9uLWV4aXQnXSB9KTtcbiAgICAgIGxpc3RUb3BCdXR0b24uYXBwZW5kQ2hpbGQobGlzdFRvcEJ1dHRvbkV4aXQpO1xuICAgICAgbGlzdFRvcEJ1dHRvbkV4aXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLnNlYXJjaEtleXdvcmQgPSAnJztcbiAgICAgICAgX09wZW5DaGFubmVsU2VhcmNoQm94Lk9wZW5DaGFubmVsU2VhcmNoQm94LmNsZWFyVGV4dCgpO1xuICAgICAgICB2YXIgbGlzdENvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIF9saXN0Mi5kZWZhdWx0WydsaXN0LWNvbnRlbnQnXSk7XG4gICAgICAgIGlmIChfdGhpcy5jbG9zZUV2ZW50SGFuZGxlcikge1xuICAgICAgICAgIF90aGlzLmNsb3NlRXZlbnRIYW5kbGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGlzdENvbnRlbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIHJvb3QucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChfdGhpcy5lbGVtZW50KTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5idXR0b25Sb290RWxlbWVudCA9IGxpc3RUb3BCdXR0b247XG5cbiAgICAgIGlmICh0aGlzLmNyZWF0ZVNlYXJjaEJveCkge1xuICAgICAgICB2YXIgc2VhcmNoQm94ID0gbmV3IF9PcGVuQ2hhbm5lbFNlYXJjaEJveC5PcGVuQ2hhbm5lbFNlYXJjaEJveCgpO1xuICAgICAgICBsaXN0Qm9keS5hcHBlbmRDaGlsZChzZWFyY2hCb3guZWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBociA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfbGlzdDIuZGVmYXVsdFsnbGlzdC1ociddIH0pO1xuICAgICAgbGlzdEJvZHkuYXBwZW5kQ2hpbGQoaHIpO1xuXG4gICAgICB2YXIgbGlzdENvbnRlbnQgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2xpc3QyLmRlZmF1bHRbJ2xpc3QtY29udGVudCddIH0pO1xuICAgICAgbGlzdEJvZHkuYXBwZW5kQ2hpbGQobGlzdENvbnRlbnQpO1xuICAgICAgbGlzdENvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoKDAsIF91dGlscy5pc1Njcm9sbEJvdHRvbSkobGlzdENvbnRlbnQpKSB7XG4gICAgICAgICAgaWYgKF90aGlzLnNjcm9sbEV2ZW50SGFuZGxlcikge1xuICAgICAgICAgICAgX3RoaXMuc2Nyb2xsRXZlbnRIYW5kbGVyKGZhbHNlLCBfdGhpcy5zZWFyY2hLZXl3b3JkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbG9zZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgdmFyIGJ0bkV4aXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIF9saXN0Mi5kZWZhdWx0WydidXR0b24tZXhpdCddKTtcbiAgICAgIGlmIChidG5FeGl0KSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy4nICsgX2xpc3QyLmRlZmF1bHRbJ2J1dHRvbi1leGl0J10pLmNsaWNrKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0Um9vdEVsZW1lbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSb290RWxlbWVudCgpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuJyArIF9saXN0Mi5kZWZhdWx0WydsaXN0LXJvb3QnXSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0Um9vdENsYXNzTmFtZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJvb3RDbGFzc05hbWUoKSB7XG4gICAgICByZXR1cm4gX2xpc3QyLmRlZmF1bHRbJ2xpc3Qtcm9vdCddO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldENvbnRlbnRFbGVtZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29udGVudEVsZW1lbnQoKSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLicgKyBfbGlzdDIuZGVmYXVsdFsnbGlzdC1jb250ZW50J10pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMaXN0O1xufSgpO1xuXG5leHBvcnRzLkxpc3QgPSBMaXN0OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserList = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _userList = __webpack_require__(49);\n\nvar _userList2 = _interopRequireDefault(_userList);\n\nvar _utils = __webpack_require__(0);\n\nvar _List2 = __webpack_require__(14);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _UserItem = __webpack_require__(24);\n\nvar _const = __webpack_require__(2);\n\nvar _Chat = __webpack_require__(4);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nvar _LeftListItem = __webpack_require__(9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar instance = null;\n\nvar UserList = function (_List) {\n  _inherits(UserList, _List);\n\n  function UserList() {\n    _classCallCheck(this, UserList);\n\n    var _this = _possibleConstructorReturn(this, (UserList.__proto__ || Object.getPrototypeOf(UserList)).call(this, 'User List'));\n\n    if (instance) {\n      var _ret;\n\n      return _ret = instance, _possibleConstructorReturn(_this, _ret);\n    }\n\n    _this.scrollEventHandler = _this._getUserList;\n    _this.closeEventHandler = _this._close;\n    _this.createBtn = _this._addCreateBtn();\n    _this.selectedUserIds = [];\n    instance = _this;\n    return _this;\n  }\n\n  _createClass(UserList, [{\n    key: '_addCreateBtn',\n    value: function _addCreateBtn() {\n      var createBtn = (0, _utils.createDivEl)({ className: _userList2.default['button-create'], content: 'CREATE' });\n      var oldCreateBtn = this.buttonRootElement.getElementsByClassName(_userList2.default['button-create'])[0];\n      if (oldCreateBtn) {\n        this.buttonRootElement.removeChild(oldCreateBtn);\n      }\n      (0, _utils.appendToFirst)(this.buttonRootElement, createBtn);\n      return createBtn;\n    }\n  }, {\n    key: '_createChannel',\n    value: function _createChannel() {\n      var _this2 = this;\n\n      _SendBirdAction.SendBirdAction.getInstance().createGroupChannel(this.selectedUserIds).then(function (channel) {\n        _Chat.Chat.getInstance().render(channel.url, false);\n        var handler = function handler() {\n          _Chat.Chat.getInstance().render(channel.url, false);\n          _ChatLeftMenu.ChatLeftMenu.getInstance().activeChannelItem(channel.url);\n        };\n        var item = new _LeftListItem.LeftListItem({ channel: channel, handler: handler });\n        _ChatLeftMenu.ChatLeftMenu.getInstance().addGroupChannelItem(item.element, true);\n        _ChatLeftMenu.ChatLeftMenu.getInstance().activeChannelItem(channel.url);\n        _Spinner.Spinner.remove();\n        _this2.close();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: '_inviteChannel',\n    value: function _inviteChannel() {\n      var _this3 = this;\n\n      var channelUrl = _Chat.Chat.getInstance().channel.url;\n      _SendBirdAction.SendBirdAction.getInstance().inviteGroupChannel(channelUrl, this.selectedUserIds).then(function () {\n        _Spinner.Spinner.remove();\n        _this3.close();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: '_updateCreateType',\n    value: function _updateCreateType(isInvite) {\n      var _this4 = this;\n\n      this.createBtn = this._addCreateBtn();\n      this.createBtn.innerHTML = isInvite ? 'INVITE' : 'CREATE';\n      this.createBtn.addEventListener('click', function () {\n        _Spinner.Spinner.start(_this4.element);\n        if (isInvite) {\n          _this4._inviteChannel();\n        } else {\n          _this4._createChannel();\n        }\n      });\n    }\n  }, {\n    key: '_getUserList',\n    value: function _getUserList() {\n      var _this5 = this;\n\n      var isInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _Spinner.Spinner.start(this.element);\n      var sendbirdAction = _SendBirdAction.SendBirdAction.getInstance();\n      var listContent = this.getContentElement();\n      sendbirdAction.getUserList(isInit).then(function (userList) {\n        userList.forEach(function (user) {\n          if (!sendbirdAction.isCurrentUser(user)) {\n            var handler = function handler() {\n              _this5._toggleUserId(_item.userId);\n            };\n            var _item = new _UserItem.UserItem({ user: user, handler: handler });\n            listContent.appendChild(_item.element);\n          }\n        });\n        _Spinner.Spinner.remove();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: '_toggleUserId',\n    value: function _toggleUserId(userId) {\n      var index = this.selectedUserIds.indexOf(userId);\n      if (index > -1) {\n        this.selectedUserIds.splice(index, 1);\n      } else {\n        this.selectedUserIds.push(userId);\n      }\n    }\n  }, {\n    key: '_close',\n    value: function _close() {\n      this.selectedUserIds = [];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var isInvite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var targetEl = _Chat.Chat.getInstance().bodyEl;\n      if (!targetEl.querySelector('.' + this.getRootClassName())) {\n        this._updateCreateType(isInvite);\n        targetEl.appendChild(this.element);\n        this._getUserList(true);\n      }\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new UserList();\n    }\n  }]);\n\n  return UserList;\n}(_List2.List);\n\nexports.UserList = UserList;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Modal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _modal = __webpack_require__(65);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nvar _utils = __webpack_require__(0);\n\nvar _Spinner = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Modal = function () {\n  function Modal(_ref) {\n    var title = _ref.title,\n        description = _ref.description,\n        submitText = _ref.submitText,\n        widgetContainerEl = _ref.widgetContainerEl;\n\n    _classCallCheck(this, Modal);\n\n    this.widgetContainerEl = widgetContainerEl;\n    this.contentElement = null;\n    this.cancelHandler = null;\n    this.submitHandler = null;\n    this.element = this._create({ title: title, description: description, submitText: submitText });\n  }\n\n  _createClass(Modal, [{\n    key: '_create',\n    value: function _create(_ref2) {\n      var _this = this;\n\n      var title = _ref2.title,\n          description = _ref2.description,\n          submitText = _ref2.submitText;\n\n      var root = (0, _utils.createDivEl)({ className: _modal2.default['modal-root'] });\n      var modal = (0, _utils.createDivEl)({ className: _modal2.default['modal-body'] });\n      root.appendChild(modal);\n\n      var titleText = (0, _utils.createDivEl)({ className: _modal2.default['modal-title'], content: title });\n      modal.appendChild(titleText);\n\n      var desc = (0, _utils.createDivEl)({ className: _modal2.default['modal-desc'], content: description });\n      modal.appendChild(desc);\n\n      this.contentElement = (0, _utils.createDivEl)({ className: _modal2.default['modal-content'] });\n      modal.appendChild(this.contentElement);\n\n      var bottom = (0, _utils.createDivEl)({ className: _modal2.default['modal-bottom'] });\n      modal.appendChild(bottom);\n      var cancel = (0, _utils.createDivEl)({ className: _modal2.default['modal-cancel'], content: 'CANCEL' });\n      cancel.addEventListener('click', function () {\n        if (_this.cancelHandler) {\n          _this.cancelHandler();\n        }\n        _this.close();\n      });\n      bottom.appendChild(cancel);\n      var submit = (0, _utils.createDivEl)({ className: _modal2.default['modal-submit'], content: submitText });\n      submit.addEventListener('click', function () {\n        _Spinner.Spinner.start(modal);\n        if (_this.submitHandler) {\n          _this.submitHandler();\n        }\n      });\n      bottom.appendChild(submit);\n\n      return root;\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (this.widgetContainerEl.contains(this.element)) {\n        this.widgetContainerEl.removeChild(this.element);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (!this.widgetContainerEl.querySelector('.' + _modal2.default['modal-root'])) {\n        this.widgetContainerEl.appendChild(this.element);\n      }\n    }\n  }]);\n\n  return Modal;\n}();\n\nexports.Modal = Modal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvTW9kYWwuanM/MzNlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk1vZGFsID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX21vZGFsID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9tb2RhbC5zY3NzJyk7XG5cbnZhciBfbW9kYWwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbW9kYWwpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxudmFyIF9TcGlubmVyID0gcmVxdWlyZSgnLi9TcGlubmVyJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTW9kYWwoX3JlZikge1xuICAgIHZhciB0aXRsZSA9IF9yZWYudGl0bGUsXG4gICAgICAgIGRlc2NyaXB0aW9uID0gX3JlZi5kZXNjcmlwdGlvbixcbiAgICAgICAgc3VibWl0VGV4dCA9IF9yZWYuc3VibWl0VGV4dCxcbiAgICAgICAgd2lkZ2V0Q29udGFpbmVyRWwgPSBfcmVmLndpZGdldENvbnRhaW5lckVsO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1vZGFsKTtcblxuICAgIHRoaXMud2lkZ2V0Q29udGFpbmVyRWwgPSB3aWRnZXRDb250YWluZXJFbDtcbiAgICB0aGlzLmNvbnRlbnRFbGVtZW50ID0gbnVsbDtcbiAgICB0aGlzLmNhbmNlbEhhbmRsZXIgPSBudWxsO1xuICAgIHRoaXMuc3VibWl0SGFuZGxlciA9IG51bGw7XG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5fY3JlYXRlKHsgdGl0bGU6IHRpdGxlLCBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sIHN1Ym1pdFRleHQ6IHN1Ym1pdFRleHQgfSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTW9kYWwsIFt7XG4gICAga2V5OiAnX2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGUoX3JlZjIpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciB0aXRsZSA9IF9yZWYyLnRpdGxlLFxuICAgICAgICAgIGRlc2NyaXB0aW9uID0gX3JlZjIuZGVzY3JpcHRpb24sXG4gICAgICAgICAgc3VibWl0VGV4dCA9IF9yZWYyLnN1Ym1pdFRleHQ7XG5cbiAgICAgIHZhciByb290ID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9tb2RhbDIuZGVmYXVsdFsnbW9kYWwtcm9vdCddIH0pO1xuICAgICAgdmFyIG1vZGFsID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9tb2RhbDIuZGVmYXVsdFsnbW9kYWwtYm9keSddIH0pO1xuICAgICAgcm9vdC5hcHBlbmRDaGlsZChtb2RhbCk7XG5cbiAgICAgIHZhciB0aXRsZVRleHQgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX21vZGFsMi5kZWZhdWx0Wydtb2RhbC10aXRsZSddLCBjb250ZW50OiB0aXRsZSB9KTtcbiAgICAgIG1vZGFsLmFwcGVuZENoaWxkKHRpdGxlVGV4dCk7XG5cbiAgICAgIHZhciBkZXNjID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9tb2RhbDIuZGVmYXVsdFsnbW9kYWwtZGVzYyddLCBjb250ZW50OiBkZXNjcmlwdGlvbiB9KTtcbiAgICAgIG1vZGFsLmFwcGVuZENoaWxkKGRlc2MpO1xuXG4gICAgICB0aGlzLmNvbnRlbnRFbGVtZW50ID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9tb2RhbDIuZGVmYXVsdFsnbW9kYWwtY29udGVudCddIH0pO1xuICAgICAgbW9kYWwuYXBwZW5kQ2hpbGQodGhpcy5jb250ZW50RWxlbWVudCk7XG5cbiAgICAgIHZhciBib3R0b20gPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX21vZGFsMi5kZWZhdWx0Wydtb2RhbC1ib3R0b20nXSB9KTtcbiAgICAgIG1vZGFsLmFwcGVuZENoaWxkKGJvdHRvbSk7XG4gICAgICB2YXIgY2FuY2VsID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9tb2RhbDIuZGVmYXVsdFsnbW9kYWwtY2FuY2VsJ10sIGNvbnRlbnQ6ICdDQU5DRUwnIH0pO1xuICAgICAgY2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMuY2FuY2VsSGFuZGxlcikge1xuICAgICAgICAgIF90aGlzLmNhbmNlbEhhbmRsZXIoKTtcbiAgICAgICAgfVxuICAgICAgICBfdGhpcy5jbG9zZSgpO1xuICAgICAgfSk7XG4gICAgICBib3R0b20uYXBwZW5kQ2hpbGQoY2FuY2VsKTtcbiAgICAgIHZhciBzdWJtaXQgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX21vZGFsMi5kZWZhdWx0Wydtb2RhbC1zdWJtaXQnXSwgY29udGVudDogc3VibWl0VGV4dCB9KTtcbiAgICAgIHN1Ym1pdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX1NwaW5uZXIuU3Bpbm5lci5zdGFydChtb2RhbCk7XG4gICAgICAgIGlmIChfdGhpcy5zdWJtaXRIYW5kbGVyKSB7XG4gICAgICAgICAgX3RoaXMuc3VibWl0SGFuZGxlcigpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGJvdHRvbS5hcHBlbmRDaGlsZChzdWJtaXQpO1xuXG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbG9zZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgaWYgKHRoaXMud2lkZ2V0Q29udGFpbmVyRWwuY29udGFpbnModGhpcy5lbGVtZW50KSkge1xuICAgICAgICB0aGlzLndpZGdldENvbnRhaW5lckVsLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgaWYgKCF0aGlzLndpZGdldENvbnRhaW5lckVsLnF1ZXJ5U2VsZWN0b3IoJy4nICsgX21vZGFsMi5kZWZhdWx0Wydtb2RhbC1yb290J10pKSB7XG4gICAgICAgIHRoaXMud2lkZ2V0Q29udGFpbmVyRWwuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTW9kYWw7XG59KCk7XG5cbmV4cG9ydHMuTW9kYWwgPSBNb2RhbDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserBlockModal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _userBlockModal = __webpack_require__(67);\n\nvar _userBlockModal2 = _interopRequireDefault(_userBlockModal);\n\nvar _utils = __webpack_require__(0);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _Modal2 = __webpack_require__(16);\n\nvar _Chat = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar blockTitle = 'Block User';\nvar blockDescription = 'Are you Sure? Do you want to block this user?';\nvar blockSubmitText = 'BLOCK';\n\nvar unblockTitle = 'Unblock User';\nvar unblockDescription = 'Are you Sure? Do you want to unblock this user?';\nvar unblockSubmitText = 'UNBLOCK';\n\nvar UserBlockModal = function (_Modal) {\n  _inherits(UserBlockModal, _Modal);\n\n  function UserBlockModal(_ref) {\n    var _this, _this;\n\n    var user = _ref.user,\n        _ref$isBlock = _ref.isBlock,\n        isBlock = _ref$isBlock === undefined ? true : _ref$isBlock;\n\n    _classCallCheck(this, UserBlockModal);\n\n    isBlock ? (_this = _possibleConstructorReturn(this, (UserBlockModal.__proto__ || Object.getPrototypeOf(UserBlockModal)).call(this, { title: blockTitle, description: blockDescription, submitText: blockSubmitText })), _this) : (_this = _possibleConstructorReturn(this, (UserBlockModal.__proto__ || Object.getPrototypeOf(UserBlockModal)).call(this, { title: unblockTitle, description: unblockDescription, submitText: unblockSubmitText })), _this);\n    _this.isBlock = isBlock;\n    _this.user = user;\n    _this._createElement();\n    _this._createHandler();\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(UserBlockModal, [{\n    key: '_createElement',\n    value: function _createElement() {\n      var content = (0, _utils.createDivEl)({ className: _userBlockModal2.default['modal-user'] });\n\n      var image = (0, _utils.createDivEl)({ className: _userBlockModal2.default['user-profile'], background: (0, _utils.protectFromXSS)(this.user.profileUrl) });\n      content.appendChild(image);\n\n      var nickname = (0, _utils.createDivEl)({ className: _userBlockModal2.default['user-nickname'], content: (0, _utils.protectFromXSS)(this.user.nickname) });\n      content.appendChild(nickname);\n\n      this.contentElement.appendChild(content);\n    }\n  }, {\n    key: '_createHandler',\n    value: function _createHandler() {\n      var _this2 = this;\n\n      this.submitHandler = function () {\n        _SendBirdAction.SendBirdAction.getInstance().blockUser(_this2.user, _this2.isBlock).then(function () {\n          _Chat.Chat.getInstance().main.updateBlockedList(_this2.user, _this2.isBlock);\n          _Spinner.Spinner.remove();\n          _this2.close();\n        }).catch(function (error) {\n          (0, _utils.errorAlert)(error.message);\n        });\n      };\n    }\n  }]);\n\n  return UserBlockModal;\n}(_Modal2.Modal);\n\nexports.UserBlockModal = UserBlockModal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvVXNlckJsb2NrTW9kYWwuanM/MWZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlVzZXJCbG9ja01vZGFsID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3VzZXJCbG9ja01vZGFsID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy91c2VyLWJsb2NrLW1vZGFsLnNjc3MnKTtcblxudmFyIF91c2VyQmxvY2tNb2RhbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyQmxvY2tNb2RhbCk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX1NlbmRCaXJkQWN0aW9uID0gcmVxdWlyZSgnLi4vU2VuZEJpcmRBY3Rpb24nKTtcblxudmFyIF9TcGlubmVyID0gcmVxdWlyZSgnLi9TcGlubmVyJyk7XG5cbnZhciBfTW9kYWwyID0gcmVxdWlyZSgnLi9Nb2RhbCcpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuLi9DaGF0Jyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGJsb2NrVGl0bGUgPSAnQmxvY2sgVXNlcic7XG52YXIgYmxvY2tEZXNjcmlwdGlvbiA9ICdBcmUgeW91IFN1cmU/IERvIHlvdSB3YW50IHRvIGJsb2NrIHRoaXMgdXNlcj8nO1xudmFyIGJsb2NrU3VibWl0VGV4dCA9ICdCTE9DSyc7XG5cbnZhciB1bmJsb2NrVGl0bGUgPSAnVW5ibG9jayBVc2VyJztcbnZhciB1bmJsb2NrRGVzY3JpcHRpb24gPSAnQXJlIHlvdSBTdXJlPyBEbyB5b3Ugd2FudCB0byB1bmJsb2NrIHRoaXMgdXNlcj8nO1xudmFyIHVuYmxvY2tTdWJtaXRUZXh0ID0gJ1VOQkxPQ0snO1xuXG52YXIgVXNlckJsb2NrTW9kYWwgPSBmdW5jdGlvbiAoX01vZGFsKSB7XG4gIF9pbmhlcml0cyhVc2VyQmxvY2tNb2RhbCwgX01vZGFsKTtcblxuICBmdW5jdGlvbiBVc2VyQmxvY2tNb2RhbChfcmVmKSB7XG4gICAgdmFyIF90aGlzLCBfdGhpcztcblxuICAgIHZhciB1c2VyID0gX3JlZi51c2VyLFxuICAgICAgICBfcmVmJGlzQmxvY2sgPSBfcmVmLmlzQmxvY2ssXG4gICAgICAgIGlzQmxvY2sgPSBfcmVmJGlzQmxvY2sgPT09IHVuZGVmaW5lZCA/IHRydWUgOiBfcmVmJGlzQmxvY2s7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVXNlckJsb2NrTW9kYWwpO1xuXG4gICAgaXNCbG9jayA/IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChVc2VyQmxvY2tNb2RhbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFVzZXJCbG9ja01vZGFsKSkuY2FsbCh0aGlzLCB7IHRpdGxlOiBibG9ja1RpdGxlLCBkZXNjcmlwdGlvbjogYmxvY2tEZXNjcmlwdGlvbiwgc3VibWl0VGV4dDogYmxvY2tTdWJtaXRUZXh0IH0pKSwgX3RoaXMpIDogKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFVzZXJCbG9ja01vZGFsLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVXNlckJsb2NrTW9kYWwpKS5jYWxsKHRoaXMsIHsgdGl0bGU6IHVuYmxvY2tUaXRsZSwgZGVzY3JpcHRpb246IHVuYmxvY2tEZXNjcmlwdGlvbiwgc3VibWl0VGV4dDogdW5ibG9ja1N1Ym1pdFRleHQgfSkpLCBfdGhpcyk7XG4gICAgX3RoaXMuaXNCbG9jayA9IGlzQmxvY2s7XG4gICAgX3RoaXMudXNlciA9IHVzZXI7XG4gICAgX3RoaXMuX2NyZWF0ZUVsZW1lbnQoKTtcbiAgICBfdGhpcy5fY3JlYXRlSGFuZGxlcigpO1xuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVXNlckJsb2NrTW9kYWwsIFt7XG4gICAga2V5OiAnX2NyZWF0ZUVsZW1lbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlRWxlbWVudCgpIHtcbiAgICAgIHZhciBjb250ZW50ID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VyQmxvY2tNb2RhbDIuZGVmYXVsdFsnbW9kYWwtdXNlciddIH0pO1xuXG4gICAgICB2YXIgaW1hZ2UgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX3VzZXJCbG9ja01vZGFsMi5kZWZhdWx0Wyd1c2VyLXByb2ZpbGUnXSwgYmFja2dyb3VuZDogKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykodGhpcy51c2VyLnByb2ZpbGVVcmwpIH0pO1xuICAgICAgY29udGVudC5hcHBlbmRDaGlsZChpbWFnZSk7XG5cbiAgICAgIHZhciBuaWNrbmFtZSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfdXNlckJsb2NrTW9kYWwyLmRlZmF1bHRbJ3VzZXItbmlja25hbWUnXSwgY29udGVudDogKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykodGhpcy51c2VyLm5pY2tuYW1lKSB9KTtcbiAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQobmlja25hbWUpO1xuXG4gICAgICB0aGlzLmNvbnRlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19jcmVhdGVIYW5kbGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZUhhbmRsZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5zdWJtaXRIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfU2VuZEJpcmRBY3Rpb24uU2VuZEJpcmRBY3Rpb24uZ2V0SW5zdGFuY2UoKS5ibG9ja1VzZXIoX3RoaXMyLnVzZXIsIF90aGlzMi5pc0Jsb2NrKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfQ2hhdC5DaGF0LmdldEluc3RhbmNlKCkubWFpbi51cGRhdGVCbG9ja2VkTGlzdChfdGhpczIudXNlciwgX3RoaXMyLmlzQmxvY2spO1xuICAgICAgICAgIF9TcGlubmVyLlNwaW5uZXIucmVtb3ZlKCk7XG4gICAgICAgICAgX3RoaXMyLmNsb3NlKCk7XG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICgwLCBfdXRpbHMuZXJyb3JBbGVydCkoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVXNlckJsb2NrTW9kYWw7XG59KF9Nb2RhbDIuTW9kYWwpO1xuXG5leHBvcnRzLlVzZXJCbG9ja01vZGFsID0gVXNlckJsb2NrTW9kYWw7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},function(I,g,n){n(36),I.exports=n(19)},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _Messenger = __webpack_require__(10);\n\nvar _Messenger2 = _interopRequireDefault(_Messenger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Messenger2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL21haW4uanM/Y2RkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfTWVzc2VuZ2VyID0gcmVxdWlyZSgnLi9NZXNzZW5nZXInKTtcblxudmFyIF9NZXNzZW5nZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTWVzc2VuZ2VyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX01lc3NlbmdlcjIuZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n')},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE__20__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyL2V4dGVybmFsIHtcImNvbW1vbmpzXCI6XCJtb21lbnRcIixcImNvbW1vbmpzMlwiOlwibW9tZW50XCIsXCJhbWRcIjpcIm1vbWVudFwiLFwicm9vdFwiOlwibW9tZW50XCJ9P2U2ZDUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18yMF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenChannelItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _openChannelItem = __webpack_require__(45);\n\nvar _openChannelItem2 = _interopRequireDefault(_openChannelItem);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OpenChannelItem = function () {\n  function OpenChannelItem(_ref) {\n    var channel = _ref.channel,\n        handler = _ref.handler;\n\n    _classCallCheck(this, OpenChannelItem);\n\n    this.channel = channel;\n    this.element = this._createElement(handler);\n  }\n\n  _createClass(OpenChannelItem, [{\n    key: '_createElement',\n    value: function _createElement(handler) {\n      var item = (0, _utils.createDivEl)({ className: _openChannelItem2.default['channel-item'], id: this.channelUrl });\n      var title = (0, _utils.createDivEl)({ className: _openChannelItem2.default['item-title'], content: this.title });\n      item.appendChild(title);\n      var desc = (0, _utils.createDivEl)({ className: _openChannelItem2.default['item-desc'], content: this.createTimeString });\n      item.appendChild(desc);\n      item.addEventListener('click', function () {\n        if (handler) handler();\n      });\n      return item;\n    }\n  }, {\n    key: 'title',\n    get: function get() {\n      return '# ' + this.channel.name;\n    }\n  }, {\n    key: 'channelUrl',\n    get: function get() {\n      return this.channel.url;\n    }\n  }, {\n    key: 'createTimeString',\n    get: function get() {\n      return 'Created on ' + (0, _utils.timestampToDateString)(this.channel.createdAt);\n    }\n  }]);\n\n  return OpenChannelItem;\n}();\n\nexports.OpenChannelItem = OpenChannelItem;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvT3BlbkNoYW5uZWxJdGVtLmpzP2NmMmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5PcGVuQ2hhbm5lbEl0ZW0gPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfb3BlbkNoYW5uZWxJdGVtID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9vcGVuLWNoYW5uZWwtaXRlbS5zY3NzJyk7XG5cbnZhciBfb3BlbkNoYW5uZWxJdGVtMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX29wZW5DaGFubmVsSXRlbSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgT3BlbkNoYW5uZWxJdGVtID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBPcGVuQ2hhbm5lbEl0ZW0oX3JlZikge1xuICAgIHZhciBjaGFubmVsID0gX3JlZi5jaGFubmVsLFxuICAgICAgICBoYW5kbGVyID0gX3JlZi5oYW5kbGVyO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9wZW5DaGFubmVsSXRlbSk7XG5cbiAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMuX2NyZWF0ZUVsZW1lbnQoaGFuZGxlcik7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoT3BlbkNoYW5uZWxJdGVtLCBbe1xuICAgIGtleTogJ19jcmVhdGVFbGVtZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZUVsZW1lbnQoaGFuZGxlcikge1xuICAgICAgdmFyIGl0ZW0gPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX29wZW5DaGFubmVsSXRlbTIuZGVmYXVsdFsnY2hhbm5lbC1pdGVtJ10sIGlkOiB0aGlzLmNoYW5uZWxVcmwgfSk7XG4gICAgICB2YXIgdGl0bGUgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX29wZW5DaGFubmVsSXRlbTIuZGVmYXVsdFsnaXRlbS10aXRsZSddLCBjb250ZW50OiB0aGlzLnRpdGxlIH0pO1xuICAgICAgaXRlbS5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICB2YXIgZGVzYyA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfb3BlbkNoYW5uZWxJdGVtMi5kZWZhdWx0WydpdGVtLWRlc2MnXSwgY29udGVudDogdGhpcy5jcmVhdGVUaW1lU3RyaW5nIH0pO1xuICAgICAgaXRlbS5hcHBlbmRDaGlsZChkZXNjKTtcbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChoYW5kbGVyKSBoYW5kbGVyKCk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3RpdGxlJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiAnIyAnICsgdGhpcy5jaGFubmVsLm5hbWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY2hhbm5lbFVybCcsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5jaGFubmVsLnVybDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVUaW1lU3RyaW5nJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiAnQ3JlYXRlZCBvbiAnICsgKDAsIF91dGlscy50aW1lc3RhbXBUb0RhdGVTdHJpbmcpKHRoaXMuY2hhbm5lbC5jcmVhdGVkQXQpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBPcGVuQ2hhbm5lbEl0ZW07XG59KCk7XG5cbmV4cG9ydHMuT3BlbkNoYW5uZWxJdGVtID0gT3BlbkNoYW5uZWxJdGVtOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpenChannelSearchBox = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _list = __webpack_require__(47);\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _utils = __webpack_require__(0);\n\nvar _const = __webpack_require__(2);\n\nvar _OpenChannelList = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OpenChannelSearchBox = function () {\n  function OpenChannelSearchBox() {\n    _classCallCheck(this, OpenChannelSearchBox);\n\n    this.element = this._create();\n  }\n\n  _createClass(OpenChannelSearchBox, [{\n    key: '_create',\n    value: function _create() {\n      var searchChannelBox = (0, _utils.createDivEl)({ className: _list2.default['list-search'] });\n      var searchInputBox = document.createElement('input');\n      searchInputBox.type = 'text';\n      searchInputBox.id = _const.OPEN_CHANNEL_SEARCH_URL;\n      searchInputBox.className = _list2.default['search-input'];\n      searchInputBox.placeholder = 'Search by ChannelUrl...';\n      searchInputBox.addEventListener('keydown', function (e) {\n        if (e.keyCode === _const.KEY_ENTER) {\n          _OpenChannelList.OpenChannelList.getInstance().scrollEventHandler(true, searchInputBox.value);\n        }\n      });\n\n      searchChannelBox.appendChild(searchInputBox);\n      return searchChannelBox;\n    }\n  }], [{\n    key: 'clearText',\n    value: function clearText() {\n      var textBox = document.querySelector('#' + _const.OPEN_CHANNEL_SEARCH_URL);\n      if (textBox) {\n        textBox.value = '';\n      }\n    }\n  }]);\n\n  return OpenChannelSearchBox;\n}();\n\nexports.OpenChannelSearchBox = OpenChannelSearchBox;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvT3BlbkNoYW5uZWxTZWFyY2hCb3guanM/ODYzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLk9wZW5DaGFubmVsU2VhcmNoQm94ID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2xpc3QgPSByZXF1aXJlKCcuLi8uLi9zY3NzL2xpc3Quc2NzcycpO1xuXG52YXIgX2xpc3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbGlzdCk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX2NvbnN0ID0gcmVxdWlyZSgnLi4vY29uc3QnKTtcblxudmFyIF9PcGVuQ2hhbm5lbExpc3QgPSByZXF1aXJlKCcuL09wZW5DaGFubmVsTGlzdCcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgT3BlbkNoYW5uZWxTZWFyY2hCb3ggPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE9wZW5DaGFubmVsU2VhcmNoQm94KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPcGVuQ2hhbm5lbFNlYXJjaEJveCk7XG5cbiAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLl9jcmVhdGUoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhPcGVuQ2hhbm5lbFNlYXJjaEJveCwgW3tcbiAgICBrZXk6ICdfY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZSgpIHtcbiAgICAgIHZhciBzZWFyY2hDaGFubmVsQm94ID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9saXN0Mi5kZWZhdWx0WydsaXN0LXNlYXJjaCddIH0pO1xuICAgICAgdmFyIHNlYXJjaElucHV0Qm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgIHNlYXJjaElucHV0Qm94LnR5cGUgPSAndGV4dCc7XG4gICAgICBzZWFyY2hJbnB1dEJveC5pZCA9IF9jb25zdC5PUEVOX0NIQU5ORUxfU0VBUkNIX1VSTDtcbiAgICAgIHNlYXJjaElucHV0Qm94LmNsYXNzTmFtZSA9IF9saXN0Mi5kZWZhdWx0WydzZWFyY2gtaW5wdXQnXTtcbiAgICAgIHNlYXJjaElucHV0Qm94LnBsYWNlaG9sZGVyID0gJ1NlYXJjaCBieSBDaGFubmVsVXJsLi4uJztcbiAgICAgIHNlYXJjaElucHV0Qm94LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSBfY29uc3QuS0VZX0VOVEVSKSB7XG4gICAgICAgICAgX09wZW5DaGFubmVsTGlzdC5PcGVuQ2hhbm5lbExpc3QuZ2V0SW5zdGFuY2UoKS5zY3JvbGxFdmVudEhhbmRsZXIodHJ1ZSwgc2VhcmNoSW5wdXRCb3gudmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgc2VhcmNoQ2hhbm5lbEJveC5hcHBlbmRDaGlsZChzZWFyY2hJbnB1dEJveCk7XG4gICAgICByZXR1cm4gc2VhcmNoQ2hhbm5lbEJveDtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2NsZWFyVGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyVGV4dCgpIHtcbiAgICAgIHZhciB0ZXh0Qm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycgKyBfY29uc3QuT1BFTl9DSEFOTkVMX1NFQVJDSF9VUkwpO1xuICAgICAgaWYgKHRleHRCb3gpIHtcbiAgICAgICAgdGV4dEJveC52YWx1ZSA9ICcnO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBPcGVuQ2hhbm5lbFNlYXJjaEJveDtcbn0oKTtcblxuZXhwb3J0cy5PcGVuQ2hhbm5lbFNlYXJjaEJveCA9IE9wZW5DaGFubmVsU2VhcmNoQm94OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _userItem = __webpack_require__(51);\n\nvar _userItem2 = _interopRequireDefault(_userItem);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UserItem = function () {\n  function UserItem(_ref) {\n    var user = _ref.user,\n        handler = _ref.handler;\n\n    _classCallCheck(this, UserItem);\n\n    this.user = user;\n    this.element = this._createElement(handler);\n  }\n\n  _createClass(UserItem, [{\n    key: '_createElement',\n    value: function _createElement(handler) {\n      var item = (0, _utils.createDivEl)({ className: _userItem2.default['user-item'], id: this.userId });\n\n      var userInfo = (0, _utils.createDivEl)({ className: _userItem2.default['user-info'] });\n      item.appendChild(userInfo);\n      var profile = (0, _utils.createDivEl)({ className: _userItem2.default['user-profile'], background: this.profileUrl });\n      userInfo.appendChild(profile);\n      var nickname = (0, _utils.createDivEl)({ className: _userItem2.default['user-nickname'], content: this.nickname });\n      userInfo.appendChild(nickname);\n      var isOnline = (0, _utils.createDivEl)({\n        className: this.isOnline ? [_userItem2.default['user-online'], _userItem2.default.active] : _userItem2.default['user-online']\n      });\n      userInfo.appendChild(isOnline);\n\n      var userState = (0, _utils.createDivEl)({ className: _userItem2.default['user-state'] });\n      item.appendChild(userState);\n      var lastSeenTime = (0, _utils.createDivEl)({ className: _userItem2.default['user-time'], content: this.lastSeenTimeString });\n      userState.appendChild(lastSeenTime);\n      var selectIcon = (0, _utils.createDivEl)({ className: _userItem2.default['user-select'] });\n      userState.appendChild(selectIcon);\n      item.addEventListener('click', function () {\n        (0, _utils.toggleClass)(item.querySelector('.' + UserItem.selectIconClassName), _userItem2.default.active);\n        if (handler) handler();\n      });\n\n      return item;\n    }\n  }, {\n    key: 'userId',\n    get: function get() {\n      return this.user.userId;\n    }\n  }, {\n    key: 'nickname',\n    get: function get() {\n      return (0, _utils.protectFromXSS)(this.user.nickname);\n    }\n  }, {\n    key: 'profileUrl',\n    get: function get() {\n      return (0, _utils.protectFromXSS)(this.user.profileUrl);\n    }\n  }, {\n    key: 'lastSeenTimeString',\n    get: function get() {\n      return this.user.lastSeenAt ? (0, _utils.timestampFromNow)(this.user.lastSeenAt) : '';\n    }\n  }, {\n    key: 'isOnline',\n    get: function get() {\n      return this.user.connectionStatus === 'online';\n    }\n  }], [{\n    key: 'selectIconClassName',\n    get: function get() {\n      return _userItem2.default['user-select'];\n    }\n  }]);\n\n  return UserItem;\n}();\n\nexports.UserItem = UserItem;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvVXNlckl0ZW0uanM/Njc4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlVzZXJJdGVtID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3VzZXJJdGVtID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy91c2VyLWl0ZW0uc2NzcycpO1xuXG52YXIgX3VzZXJJdGVtMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJJdGVtKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBVc2VySXRlbSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gVXNlckl0ZW0oX3JlZikge1xuICAgIHZhciB1c2VyID0gX3JlZi51c2VyLFxuICAgICAgICBoYW5kbGVyID0gX3JlZi5oYW5kbGVyO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXJJdGVtKTtcblxuICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5fY3JlYXRlRWxlbWVudChoYW5kbGVyKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhVc2VySXRlbSwgW3tcbiAgICBrZXk6ICdfY3JlYXRlRWxlbWVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGVFbGVtZW50KGhhbmRsZXIpIHtcbiAgICAgIHZhciBpdGVtID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1pdGVtJ10sIGlkOiB0aGlzLnVzZXJJZCB9KTtcblxuICAgICAgdmFyIHVzZXJJbmZvID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1pbmZvJ10gfSk7XG4gICAgICBpdGVtLmFwcGVuZENoaWxkKHVzZXJJbmZvKTtcbiAgICAgIHZhciBwcm9maWxlID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1wcm9maWxlJ10sIGJhY2tncm91bmQ6IHRoaXMucHJvZmlsZVVybCB9KTtcbiAgICAgIHVzZXJJbmZvLmFwcGVuZENoaWxkKHByb2ZpbGUpO1xuICAgICAgdmFyIG5pY2tuYW1lID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1uaWNrbmFtZSddLCBjb250ZW50OiB0aGlzLm5pY2tuYW1lIH0pO1xuICAgICAgdXNlckluZm8uYXBwZW5kQ2hpbGQobmlja25hbWUpO1xuICAgICAgdmFyIGlzT25saW5lID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoe1xuICAgICAgICBjbGFzc05hbWU6IHRoaXMuaXNPbmxpbmUgPyBbX3VzZXJJdGVtMi5kZWZhdWx0Wyd1c2VyLW9ubGluZSddLCBfdXNlckl0ZW0yLmRlZmF1bHQuYWN0aXZlXSA6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1vbmxpbmUnXVxuICAgICAgfSk7XG4gICAgICB1c2VySW5mby5hcHBlbmRDaGlsZChpc09ubGluZSk7XG5cbiAgICAgIHZhciB1c2VyU3RhdGUgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX3VzZXJJdGVtMi5kZWZhdWx0Wyd1c2VyLXN0YXRlJ10gfSk7XG4gICAgICBpdGVtLmFwcGVuZENoaWxkKHVzZXJTdGF0ZSk7XG4gICAgICB2YXIgbGFzdFNlZW5UaW1lID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF91c2VySXRlbTIuZGVmYXVsdFsndXNlci10aW1lJ10sIGNvbnRlbnQ6IHRoaXMubGFzdFNlZW5UaW1lU3RyaW5nIH0pO1xuICAgICAgdXNlclN0YXRlLmFwcGVuZENoaWxkKGxhc3RTZWVuVGltZSk7XG4gICAgICB2YXIgc2VsZWN0SWNvbiA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHsgY2xhc3NOYW1lOiBfdXNlckl0ZW0yLmRlZmF1bHRbJ3VzZXItc2VsZWN0J10gfSk7XG4gICAgICB1c2VyU3RhdGUuYXBwZW5kQ2hpbGQoc2VsZWN0SWNvbik7XG4gICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAoMCwgX3V0aWxzLnRvZ2dsZUNsYXNzKShpdGVtLnF1ZXJ5U2VsZWN0b3IoJy4nICsgVXNlckl0ZW0uc2VsZWN0SWNvbkNsYXNzTmFtZSksIF91c2VySXRlbTIuZGVmYXVsdC5hY3RpdmUpO1xuICAgICAgICBpZiAoaGFuZGxlcikgaGFuZGxlcigpO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VzZXJJZCcsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy51c2VyLnVzZXJJZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICduaWNrbmFtZScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykodGhpcy51c2VyLm5pY2tuYW1lKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwcm9maWxlVXJsJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiAoMCwgX3V0aWxzLnByb3RlY3RGcm9tWFNTKSh0aGlzLnVzZXIucHJvZmlsZVVybCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbGFzdFNlZW5UaW1lU3RyaW5nJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnVzZXIubGFzdFNlZW5BdCA/ICgwLCBfdXRpbHMudGltZXN0YW1wRnJvbU5vdykodGhpcy51c2VyLmxhc3RTZWVuQXQpIDogJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaXNPbmxpbmUnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMudXNlci5jb25uZWN0aW9uU3RhdHVzID09PSAnb25saW5lJztcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ3NlbGVjdEljb25DbGFzc05hbWUnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF91c2VySXRlbTIuZGVmYXVsdFsndXNlci1zZWxlY3QnXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVXNlckl0ZW07XG59KCk7XG5cbmV4cG9ydHMuVXNlckl0ZW0gPSBVc2VySXRlbTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatTopMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lodash = __webpack_require__(5);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _chatTopMenu = __webpack_require__(55);\n\nvar _chatTopMenu2 = _interopRequireDefault(_chatTopMenu);\n\nvar _utils = __webpack_require__(0);\n\nvar _Chat = __webpack_require__(4);\n\nvar _ChatLeftMenu = __webpack_require__(6);\n\nvar _UserList = __webpack_require__(15);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChatTopMenu = function () {\n  function ChatTopMenu(channel) {\n    _classCallCheck(this, ChatTopMenu);\n\n    this.channel = channel;\n    this.element = this._createElement(channel);\n  }\n\n  _createClass(ChatTopMenu, [{\n    key: '_createElement',\n    value: function _createElement(channel) {\n      var _this = this;\n\n      var isOpenChannel = channel.isOpenChannel();\n\n      var root = (0, _utils.createDivEl)({ className: _chatTopMenu2.default['chat-top'] });\n\n      this.title = (0, _utils.createDivEl)({\n        className: isOpenChannel ? _chatTopMenu2.default['chat-title'] : [_chatTopMenu2.default['chat-title'], _chatTopMenu2.default['is-group']],\n        content: this.chatTitle\n      });\n      var menuBtn = (0, _utils.createDivEl)({ className: _chatTopMenu2.default['menu-button'], content: '<' });\n\n      menuBtn.addEventListener('click', function () {\n        _ChatLeftMenu.ChatLeftMenu.getInstance().show();\n      });\n\n      root.appendChild(menuBtn);\n      root.appendChild(this.title);\n\n      var button = (0, _utils.createDivEl)({ className: _chatTopMenu2.default['chat-button'] });\n      if (!isOpenChannel) {\n        var invite = (0, _utils.createDivEl)({ className: _chatTopMenu2.default['button-invite'] });\n        invite.addEventListener('click', function () {\n          _UserList.UserList.getInstance().render(true);\n        });\n        button.appendChild(invite);\n      }\n      var leave = (0, _utils.createDivEl)({ className: _chatTopMenu2.default['button-leave'] });\n      leave.addEventListener('click', function () {\n        if (isOpenChannel) {\n          _ChatLeftMenu.ChatLeftMenu.getInstance().removeOpenChannelItem(_this.channel.url);\n          _SendBirdAction.SendBirdAction.getInstance().exit(channel.url).then(function () {\n            _Chat.Chat.getInstance().renderEmptyElement();\n          }).catch(function (error) {\n            (0, _utils.errorAlert)(error.message);\n          });\n        } else {\n          _SendBirdAction.SendBirdAction.getInstance().leave(channel.url).then(function () {\n            _ChatLeftMenu.ChatLeftMenu.getInstance().removeGroupChannelItem(_this.channel.url);\n            _Chat.Chat.getInstance().renderEmptyElement();\n          }).catch(function (error) {\n            (0, _utils.errorAlert)(error.message);\n          });\n        }\n      });\n      button.appendChild(leave);\n      root.appendChild(button);\n      return root;\n    }\n  }, {\n    key: 'updateTitle',\n    value: function updateTitle(channel) {\n      this.channel = channel;\n      this.title.innerHTML = this.chatTitle;\n    }\n  }, {\n    key: 'chatTitle',\n    get: function get() {\n      var isOpenChannel = this.channel.isOpenChannel();\n      if (isOpenChannel) {\n        return '# ' + this.channel.name;\n      } else {\n        return (0, _utils.membersExcludingCurrentUserIn)(this.channel).map(function (member) {\n          return (0, _utils.protectFromXSS)(member.nickname);\n        }).join(', ');\n      }\n    }\n  }]);\n\n  return ChatTopMenu;\n}();\n\nexports.ChatTopMenu = ChatTopMenu;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvQ2hhdFRvcE1lbnUuanM/MzVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkNoYXRUb3BNZW51ID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2xvZGFzaCA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG52YXIgX2xvZGFzaDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2Rhc2gpO1xuXG52YXIgX2NoYXRUb3BNZW51ID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9jaGF0LXRvcC1tZW51LnNjc3MnKTtcblxudmFyIF9jaGF0VG9wTWVudTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGF0VG9wTWVudSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuLi9DaGF0Jyk7XG5cbnZhciBfQ2hhdExlZnRNZW51ID0gcmVxdWlyZSgnLi4vQ2hhdExlZnRNZW51Jyk7XG5cbnZhciBfVXNlckxpc3QgPSByZXF1aXJlKCcuL1VzZXJMaXN0Jyk7XG5cbnZhciBfU2VuZEJpcmRBY3Rpb24gPSByZXF1aXJlKCcuLi9TZW5kQmlyZEFjdGlvbicpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQ2hhdFRvcE1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENoYXRUb3BNZW51KGNoYW5uZWwpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2hhdFRvcE1lbnUpO1xuXG4gICAgdGhpcy5jaGFubmVsID0gY2hhbm5lbDtcbiAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLl9jcmVhdGVFbGVtZW50KGNoYW5uZWwpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENoYXRUb3BNZW51LCBbe1xuICAgIGtleTogJ19jcmVhdGVFbGVtZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZUVsZW1lbnQoY2hhbm5lbCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGlzT3BlbkNoYW5uZWwgPSBjaGFubmVsLmlzT3BlbkNoYW5uZWwoKTtcblxuICAgICAgdmFyIHJvb3QgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2NoYXRUb3BNZW51Mi5kZWZhdWx0WydjaGF0LXRvcCddIH0pO1xuXG4gICAgICB0aGlzLnRpdGxlID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoe1xuICAgICAgICBjbGFzc05hbWU6IGlzT3BlbkNoYW5uZWwgPyBfY2hhdFRvcE1lbnUyLmRlZmF1bHRbJ2NoYXQtdGl0bGUnXSA6IFtfY2hhdFRvcE1lbnUyLmRlZmF1bHRbJ2NoYXQtdGl0bGUnXSwgX2NoYXRUb3BNZW51Mi5kZWZhdWx0Wydpcy1ncm91cCddXSxcbiAgICAgICAgY29udGVudDogdGhpcy5jaGF0VGl0bGVcbiAgICAgIH0pO1xuICAgICAgdmFyIG1lbnVCdG4gPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2NoYXRUb3BNZW51Mi5kZWZhdWx0WydtZW51LWJ1dHRvbiddLCBjb250ZW50OiAnPCcgfSk7XG5cbiAgICAgIG1lbnVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9DaGF0TGVmdE1lbnUuQ2hhdExlZnRNZW51LmdldEluc3RhbmNlKCkuc2hvdygpO1xuICAgICAgfSk7XG5cbiAgICAgIHJvb3QuYXBwZW5kQ2hpbGQobWVudUJ0bik7XG4gICAgICByb290LmFwcGVuZENoaWxkKHRoaXMudGl0bGUpO1xuXG4gICAgICB2YXIgYnV0dG9uID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9jaGF0VG9wTWVudTIuZGVmYXVsdFsnY2hhdC1idXR0b24nXSB9KTtcbiAgICAgIGlmICghaXNPcGVuQ2hhbm5lbCkge1xuICAgICAgICB2YXIgaW52aXRlID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9jaGF0VG9wTWVudTIuZGVmYXVsdFsnYnV0dG9uLWludml0ZSddIH0pO1xuICAgICAgICBpbnZpdGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX1VzZXJMaXN0LlVzZXJMaXN0LmdldEluc3RhbmNlKCkucmVuZGVyKHRydWUpO1xuICAgICAgICB9KTtcbiAgICAgICAgYnV0dG9uLmFwcGVuZENoaWxkKGludml0ZSk7XG4gICAgICB9XG4gICAgICB2YXIgbGVhdmUgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2NoYXRUb3BNZW51Mi5kZWZhdWx0WydidXR0b24tbGVhdmUnXSB9KTtcbiAgICAgIGxlYXZlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoaXNPcGVuQ2hhbm5lbCkge1xuICAgICAgICAgIF9DaGF0TGVmdE1lbnUuQ2hhdExlZnRNZW51LmdldEluc3RhbmNlKCkucmVtb3ZlT3BlbkNoYW5uZWxJdGVtKF90aGlzLmNoYW5uZWwudXJsKTtcbiAgICAgICAgICBfU2VuZEJpcmRBY3Rpb24uU2VuZEJpcmRBY3Rpb24uZ2V0SW5zdGFuY2UoKS5leGl0KGNoYW5uZWwudXJsKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF9DaGF0LkNoYXQuZ2V0SW5zdGFuY2UoKS5yZW5kZXJFbXB0eUVsZW1lbnQoKTtcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICgwLCBfdXRpbHMuZXJyb3JBbGVydCkoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uLmdldEluc3RhbmNlKCkubGVhdmUoY2hhbm5lbC51cmwpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX0NoYXRMZWZ0TWVudS5DaGF0TGVmdE1lbnUuZ2V0SW5zdGFuY2UoKS5yZW1vdmVHcm91cENoYW5uZWxJdGVtKF90aGlzLmNoYW5uZWwudXJsKTtcbiAgICAgICAgICAgIF9DaGF0LkNoYXQuZ2V0SW5zdGFuY2UoKS5yZW5kZXJFbXB0eUVsZW1lbnQoKTtcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICgwLCBfdXRpbHMuZXJyb3JBbGVydCkoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgYnV0dG9uLmFwcGVuZENoaWxkKGxlYXZlKTtcbiAgICAgIHJvb3QuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAgIHJldHVybiByb290O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZVRpdGxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlVGl0bGUoY2hhbm5lbCkge1xuICAgICAgdGhpcy5jaGFubmVsID0gY2hhbm5lbDtcbiAgICAgIHRoaXMudGl0bGUuaW5uZXJIVE1MID0gdGhpcy5jaGF0VGl0bGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY2hhdFRpdGxlJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHZhciBpc09wZW5DaGFubmVsID0gdGhpcy5jaGFubmVsLmlzT3BlbkNoYW5uZWwoKTtcbiAgICAgIGlmIChpc09wZW5DaGFubmVsKSB7XG4gICAgICAgIHJldHVybiAnIyAnICsgdGhpcy5jaGFubmVsLm5hbWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKDAsIF91dGlscy5tZW1iZXJzRXhjbHVkaW5nQ3VycmVudFVzZXJJbikodGhpcy5jaGFubmVsKS5tYXAoZnVuY3Rpb24gKG1lbWJlcikge1xuICAgICAgICAgIHJldHVybiAoMCwgX3V0aWxzLnByb3RlY3RGcm9tWFNTKShtZW1iZXIubmlja25hbWUpO1xuICAgICAgICB9KS5qb2luKCcsICcpO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDaGF0VG9wTWVudTtcbn0oKTtcblxuZXhwb3J0cy5DaGF0VG9wTWVudSA9IENoYXRUb3BNZW51OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatMain = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chatMain = __webpack_require__(57);\n\nvar _chatMain2 = _interopRequireDefault(_chatMain);\n\nvar _ChatBody = __webpack_require__(27);\n\nvar _ChatInput = __webpack_require__(30);\n\nvar _Chat = __webpack_require__(4);\n\nvar _utils = __webpack_require__(0);\n\nvar _ChatMenu = __webpack_require__(31);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChatMain = function () {\n  function ChatMain(channel, widgetContainerEl) {\n    _classCallCheck(this, ChatMain);\n\n    this.widgetContainerEl = widgetContainerEl;\n    this.channel = channel;\n    this.body = null;\n    this.input = null;\n    this.menu = null;\n    this._create();\n  }\n\n  _createClass(ChatMain, [{\n    key: '_create',\n    value: function _create() {\n      var root = (0, _utils.createDivEl)({ className: _chatMain2.default['chat-main-root'] });\n\n      var main = (0, _utils.createDivEl)({ className: _chatMain2.default['chat-main'] });\n      root.appendChild(main);\n\n      this.body = new _ChatBody.ChatBody(this.channel, this.widgetContainerEl);\n      main.appendChild(this.body.element);\n\n      this.input = new _ChatInput.ChatInput(this.channel);\n      main.appendChild(this.input.element);\n\n      this.menu = new _ChatMenu.ChatMenu(this.channel);\n      root.appendChild(this.menu.element);\n\n      _Chat.Chat.getInstance().element.appendChild(root);\n    }\n  }, {\n    key: 'renderMessages',\n    value: function renderMessages(messageList) {\n      var goToBottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var isPastMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      this.body.renderMessages(messageList, goToBottom, isPastMessage);\n    }\n  }, {\n    key: 'removeMessage',\n    value: function removeMessage(messageId) {\n      var isRequestId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this.body.removeMessage(messageId, isRequestId);\n    }\n  }, {\n    key: 'updateReadReceipt',\n    value: function updateReadReceipt() {\n      this.body.updateReadReceipt();\n    }\n  }, {\n    key: 'updateTyping',\n    value: function updateTyping(memberList) {\n      this.input.updateTyping(memberList);\n    }\n  }, {\n    key: 'repositionScroll',\n    value: function repositionScroll(height) {\n      this.body.repositionScroll(height);\n    }\n  }, {\n    key: 'updateBlockedList',\n    value: function updateBlockedList(user, isBlock) {\n      this.menu.updateBlockedList(user, isBlock);\n    }\n  }, {\n    key: 'updateMenu',\n    value: function updateMenu(channel) {\n      this.menu.updateMenu(channel);\n    }\n  }]);\n\n  return ChatMain;\n}();\n\nexports.ChatMain = ChatMain;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvQ2hhdE1haW4uanM/ZGJlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkNoYXRNYWluID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2NoYXRNYWluID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9jaGF0LW1haW4uc2NzcycpO1xuXG52YXIgX2NoYXRNYWluMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYXRNYWluKTtcblxudmFyIF9DaGF0Qm9keSA9IHJlcXVpcmUoJy4vQ2hhdEJvZHknKTtcblxudmFyIF9DaGF0SW5wdXQgPSByZXF1aXJlKCcuL0NoYXRJbnB1dCcpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuLi9DaGF0Jyk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX0NoYXRNZW51ID0gcmVxdWlyZSgnLi9DaGF0TWVudScpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQ2hhdE1haW4gPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENoYXRNYWluKGNoYW5uZWwsIHdpZGdldENvbnRhaW5lckVsKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENoYXRNYWluKTtcblxuICAgIHRoaXMud2lkZ2V0Q29udGFpbmVyRWwgPSB3aWRnZXRDb250YWluZXJFbDtcbiAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xuICAgIHRoaXMuYm9keSA9IG51bGw7XG4gICAgdGhpcy5pbnB1dCA9IG51bGw7XG4gICAgdGhpcy5tZW51ID0gbnVsbDtcbiAgICB0aGlzLl9jcmVhdGUoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDaGF0TWFpbiwgW3tcbiAgICBrZXk6ICdfY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZSgpIHtcbiAgICAgIHZhciByb290ID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9jaGF0TWFpbjIuZGVmYXVsdFsnY2hhdC1tYWluLXJvb3QnXSB9KTtcblxuICAgICAgdmFyIG1haW4gPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2NoYXRNYWluMi5kZWZhdWx0WydjaGF0LW1haW4nXSB9KTtcbiAgICAgIHJvb3QuYXBwZW5kQ2hpbGQobWFpbik7XG5cbiAgICAgIHRoaXMuYm9keSA9IG5ldyBfQ2hhdEJvZHkuQ2hhdEJvZHkodGhpcy5jaGFubmVsLCB0aGlzLndpZGdldENvbnRhaW5lckVsKTtcbiAgICAgIG1haW4uYXBwZW5kQ2hpbGQodGhpcy5ib2R5LmVsZW1lbnQpO1xuXG4gICAgICB0aGlzLmlucHV0ID0gbmV3IF9DaGF0SW5wdXQuQ2hhdElucHV0KHRoaXMuY2hhbm5lbCk7XG4gICAgICBtYWluLmFwcGVuZENoaWxkKHRoaXMuaW5wdXQuZWxlbWVudCk7XG5cbiAgICAgIHRoaXMubWVudSA9IG5ldyBfQ2hhdE1lbnUuQ2hhdE1lbnUodGhpcy5jaGFubmVsKTtcbiAgICAgIHJvb3QuYXBwZW5kQ2hpbGQodGhpcy5tZW51LmVsZW1lbnQpO1xuXG4gICAgICBfQ2hhdC5DaGF0LmdldEluc3RhbmNlKCkuZWxlbWVudC5hcHBlbmRDaGlsZChyb290KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXJNZXNzYWdlcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlck1lc3NhZ2VzKG1lc3NhZ2VMaXN0KSB7XG4gICAgICB2YXIgZ29Ub0JvdHRvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdHJ1ZTtcbiAgICAgIHZhciBpc1Bhc3RNZXNzYWdlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICAgICAgdGhpcy5ib2R5LnJlbmRlck1lc3NhZ2VzKG1lc3NhZ2VMaXN0LCBnb1RvQm90dG9tLCBpc1Bhc3RNZXNzYWdlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmVNZXNzYWdlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlTWVzc2FnZShtZXNzYWdlSWQpIHtcbiAgICAgIHZhciBpc1JlcXVlc3RJZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIHRoaXMuYm9keS5yZW1vdmVNZXNzYWdlKG1lc3NhZ2VJZCwgaXNSZXF1ZXN0SWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZVJlYWRSZWNlaXB0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlUmVhZFJlY2VpcHQoKSB7XG4gICAgICB0aGlzLmJvZHkudXBkYXRlUmVhZFJlY2VpcHQoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGVUeXBpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVUeXBpbmcobWVtYmVyTGlzdCkge1xuICAgICAgdGhpcy5pbnB1dC51cGRhdGVUeXBpbmcobWVtYmVyTGlzdCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVwb3NpdGlvblNjcm9sbCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlcG9zaXRpb25TY3JvbGwoaGVpZ2h0KSB7XG4gICAgICB0aGlzLmJvZHkucmVwb3NpdGlvblNjcm9sbChoZWlnaHQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZUJsb2NrZWRMaXN0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQmxvY2tlZExpc3QodXNlciwgaXNCbG9jaykge1xuICAgICAgdGhpcy5tZW51LnVwZGF0ZUJsb2NrZWRMaXN0KHVzZXIsIGlzQmxvY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZU1lbnUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVNZW51KGNoYW5uZWwpIHtcbiAgICAgIHRoaXMubWVudS51cGRhdGVNZW51KGNoYW5uZWwpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDaGF0TWFpbjtcbn0oKTtcblxuZXhwb3J0cy5DaGF0TWFpbiA9IENoYXRNYWluOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatBody = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chatBody = __webpack_require__(59);\n\nvar _chatBody2 = _interopRequireDefault(_chatBody);\n\nvar _utils = __webpack_require__(0);\n\nvar _Message = __webpack_require__(28);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _const = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChatBody = function () {\n  function ChatBody(channel, widgetContainerEl) {\n    _classCallCheck(this, ChatBody);\n\n    this.widgetContainerEl = widgetContainerEl;\n    this.channel = channel;\n    this.readReceiptManageList = [];\n    this.scrollHeight = 0;\n    this.element = this._createElement();\n  }\n\n  _createClass(ChatBody, [{\n    key: '_createElement',\n    value: function _createElement() {\n      var _this = this;\n\n      var root = (0, _utils.createDivEl)({ className: _chatBody2.default['chat-body'] });\n      root.addEventListener('scroll', function () {\n        if (root.scrollTop === 0) {\n          _Spinner.Spinner.start(root);\n          _this.updateCurrentScrollHeight();\n          _SendBirdAction.SendBirdAction.getInstance().getMessageList(_this.channel).then(function (messageList) {\n            messageList.reverse();\n            _this.renderMessages(messageList, false, true);\n            _Spinner.Spinner.remove();\n          }).catch(function (error) {\n            (0, _utils.errorAlert)(error.message);\n          });\n        }\n      });\n      return root;\n    }\n  }, {\n    key: 'scrollToBottom',\n    value: function scrollToBottom() {\n      this.element.scrollTop = this.element.scrollHeight - this.element.offsetHeight;\n    }\n  }, {\n    key: 'updateCurrentScrollHeight',\n    value: function updateCurrentScrollHeight() {\n      this.scrollHeight = this.element.scrollHeight;\n    }\n  }, {\n    key: 'repositionScroll',\n    value: function repositionScroll(imageOffsetHeight) {\n      this.element.scrollTop += imageOffsetHeight;\n    }\n  }, {\n    key: 'updateReadReceipt',\n    value: function updateReadReceipt() {\n      var _this2 = this;\n\n      this.readReceiptManageList.forEach(function (message) {\n        if (message.messageId.toString() !== '0') {\n          var className = _Message.Message.getReadReceiptElementClassName();\n          var messageItem = _this2._getItem(message.messageId, false);\n          if (messageItem) {\n            var readItem = null;\n            try {\n              readItem = messageItem.getElementsByClassName(className)[0];\n            } catch (e) {\n              readItem = null;\n            }\n            var latestCount = _SendBirdAction.SendBirdAction.getInstance().getReadReceipt(_this2.channel, message);\n            if (readItem && latestCount.toString() !== readItem.textContent.toString()) {\n              // readItem.innerHTML = latestCount;\n              if (latestCount.toString() === '0') {\n                (0, _utils.removeClass)(readItem, className);\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: 'readReceiptManage',\n    value: function readReceiptManage(message) {\n      for (var i = 0; i < this.readReceiptManageList.length; i++) {\n        if (message.reqId) {\n          if (this.readReceiptManageList[i].reqId === message.reqId) {\n            this.readReceiptManageList.splice(i, 1);\n            break;\n          }\n        } else {\n          if (this.readReceiptManageList[i].messageId === message.messageId) {\n            this.readReceiptManageList.splice(i, 1);\n            break;\n          }\n        }\n      }\n      this.readReceiptManageList.push(message);\n      this.updateReadReceipt();\n    }\n  }, {\n    key: '_getItem',\n    value: function _getItem(messageId) {\n      var isRequestId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var items = this.element.childNodes;\n      for (var i = 0; i < items.length; i++) {\n        var elementId = isRequestId ? (0, _utils.getDataInElement)(items[i], _const.MESSAGE_REQ_ID) : items[i].id;\n        if (elementId === messageId.toString()) {\n          return items[i];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'renderMessages',\n    value: function renderMessages(messageList) {\n      var _this3 = this;\n\n      var goToBottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var isPastMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      messageList.forEach(function (message) {\n        var messageItem = new _Message.Message({ channel: _this3.channel, message: message, widgetContainerEl: _this3.widgetContainerEl });\n        var requestId = (0, _utils.getDataInElement)(messageItem.element, _const.MESSAGE_REQ_ID) ? (0, _utils.getDataInElement)(messageItem.element, _const.MESSAGE_REQ_ID) : '-1';\n        var requestItem = _this3._getItem(requestId, true);\n        var existItem = _this3._getItem(messageItem.element.id, false);\n\n        if (requestItem || existItem) {\n          _this3.element.replaceChild(messageItem.element, requestItem ? requestItem : existItem);\n        } else {\n          if (isPastMessage) {\n            (0, _utils.appendToFirst)(_this3.element, messageItem.element);\n            _this3.element.scrollTop = _this3.element.scrollHeight - _this3.scrollHeight;\n          } else {\n            var isBottom = (0, _utils.isScrollBottom)(_this3.element);\n            _this3.element.appendChild(messageItem.element);\n            if (isBottom) {\n              _this3.scrollToBottom();\n            }\n          }\n        }\n        if ((message.isUserMessage() || message.isFileMessage()) && _SendBirdAction.SendBirdAction.getInstance().isCurrentUser(message.sender) && _this3.channel.isGroupChannel()) {\n          _this3.readReceiptManage(message);\n        }\n      });\n      if (goToBottom) this.scrollToBottom();\n    }\n  }, {\n    key: 'removeMessage',\n    value: function removeMessage(messageId) {\n      var isRequestId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var removeElement = this._getItem(messageId, isRequestId);\n      if (removeElement) {\n        this.element.removeChild(removeElement);\n      }\n    }\n  }]);\n\n  return ChatBody;\n}();\n\nexports.ChatBody = ChatBody;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Message = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _message = __webpack_require__(61);\n\nvar _message2 = _interopRequireDefault(_message);\n\nvar _utils = __webpack_require__(0);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _const = __webpack_require__(2);\n\nvar _MessageDeleteModal = __webpack_require__(29);\n\nvar _UserBlockModal = __webpack_require__(17);\n\nvar _Chat = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Message = function () {\n  function Message(_ref) {\n    var channel = _ref.channel,\n        message = _ref.message,\n        widgetContainerEl = _ref.widgetContainerEl;\n\n    _classCallCheck(this, Message);\n\n    this.widgetContainerEl = widgetContainerEl;\n    this.channel = channel;\n    this.message = message;\n    this.element = this._createElement();\n  }\n\n  _createClass(Message, [{\n    key: '_createElement',\n    value: function _createElement() {\n      if (this.message.isUserMessage()) {\n        return this._createUserElement();\n      } else if (this.message.isFileMessage()) {\n        return this._createFileElement();\n      } else if (this.message.isAdminMessage()) {\n        return this._createAdminElement();\n      } else {\n        console.error('Message is invalid data.');\n        return null;\n      }\n    }\n  }, {\n    key: '_hoverOnNickname',\n    value: function _hoverOnNickname(nickname, hover) {\n      if (!_SendBirdAction.SendBirdAction.getInstance().isCurrentUser(this.message.sender)) {\n        nickname.innerHTML = hover ? 'BLOCK   ' : (0, _utils.protectFromXSS)(this.message.sender.nickname) + ' : ';\n        nickname.style.color = hover ? _const.COLOR_RED : '';\n        nickname.style.opacity = hover ? '1' : '';\n      }\n    }\n  }, {\n    key: '_hoverOnTime',\n    value: function _hoverOnTime(time, hover) {\n      if (_SendBirdAction.SendBirdAction.getInstance().isCurrentUser(this.message.sender)) {\n        time.innerHTML = hover ? 'DELETE' : (0, _utils.timestampToTime)(this.message.createdAt);\n        time.style.color = hover ? _const.COLOR_RED : '';\n        time.style.opacity = hover ? '1' : '';\n        time.style.fontWeight = hover ? '600' : '';\n      }\n    }\n  }, {\n    key: '_createUserElement',\n    value: function _createUserElement() {\n      var _this = this;\n\n      var sendbirdAction = _SendBirdAction.SendBirdAction.getInstance();\n      var isCurrentUser = sendbirdAction.isCurrentUser(this.message.sender);\n      var root = (0, _utils.createDivEl)({ className: _message2.default['chat-message'], id: this.message.messageId });\n      (0, _utils.setDataInElement)(root, _const.MESSAGE_REQ_ID, this.message.reqId);\n\n      var messageContent = (0, _utils.createDivEl)({ className: _message2.default['message-content'] });\n\n      var avatar = (0, _utils.createDivEl)({\n        className: _message2.default['message-avatar'],\n        background: (0, _utils.avatarFor)(this.message.sender)\n      });\n      var messageBody = (0, _utils.createDivEl)({\n        className: _message2.default['message-body']\n      });\n      var nickname = (0, _utils.createDivEl)({\n        className: isCurrentUser ? [_message2.default['message-nickname'], _message2.default['is-user']] : _message2.default['message-nickname'],\n        content: (0, _utils.protectFromXSS)(this.message.sender.nickname) + ' : '\n      });\n      var msg = (0, _utils.createDivEl)({ className: _message2.default['message-content'], content: (0, _utils.protectFromXSS)(this.message.message) });\n\n      var time = (0, _utils.createDivEl)({\n        className: isCurrentUser ? [_message2.default.time, _message2.default['is-user']] : _message2.default.time,\n        content: (0, _utils.timestampToTime)(this.message.createdAt)\n      });\n      time.addEventListener('mouseover', function () {\n        _this._hoverOnTime(time, true);\n      });\n      time.addEventListener('mouseleave', function () {\n        _this._hoverOnTime(time, false);\n      });\n      time.addEventListener('click', function () {\n        if (isCurrentUser) {\n          var messageDeleteModal = new _MessageDeleteModal.MessageDeleteModal({\n            channel: _this.channel,\n            message: _this.message,\n            widgetContainerEl: _this.widgetContainerEl\n          });\n          messageDeleteModal.render();\n        }\n      });\n\n      var messageFooter = (0, _utils.createDivEl)({ className: _message2.default['message-footer'] });\n\n      messageBody.appendChild(nickname);\n      messageBody.appendChild(msg);\n      messageBody.appendChild(messageFooter);\n      messageFooter.appendChild(time);\n      messageContent.appendChild(avatar);\n      messageContent.appendChild(messageBody);\n\n      if (this.channel.isGroupChannel()) {\n        var count = sendbirdAction.getReadReceipt(this.channel, this.message);\n        var read = (0, _utils.createDivEl)({\n          className: count ? [_message2.default.read, _message2.default.active] : _message2.default.read\n          // content: count ? '' : '[ ✓ ]'\n        });\n        messageFooter.appendChild(read);\n      }\n\n      root.appendChild(messageContent);\n      return root;\n    }\n  }, {\n    key: '_createFileElement',\n    value: function _createFileElement() {\n      var _this2 = this;\n\n      var sendbirdAction = _SendBirdAction.SendBirdAction.getInstance();\n      var root = (0, _utils.createDivEl)({ className: _message2.default['chat-message'], id: this.message.messageId });\n      (0, _utils.setDataInElement)(root, _const.MESSAGE_REQ_ID, this.message.reqId);\n\n      var messageContent = (0, _utils.createDivEl)({ className: _message2.default['message-content'] });\n      var avatar = (0, _utils.createDivEl)({\n        className: _message2.default['message-avatar'],\n        background: (0, _utils.avatarFor)(this.message.sender)\n      });\n      var messageBody = (0, _utils.createDivEl)({\n        className: _message2.default['message-body']\n      });\n      var nickname = (0, _utils.createDivEl)({\n        className: sendbirdAction.isCurrentUser(this.message.sender) ? [_message2.default['message-nickname'], _message2.default['is-user']] : _message2.default['message-nickname'],\n        content: (0, _utils.protectFromXSS)(this.message.sender.nickname) + ' : '\n      });\n\n      var msg = (0, _utils.createDivEl)({\n        className: [_message2.default['message-content'], _message2.default['is-file']],\n        content: '[ ' + (0, _utils.protectFromXSS)(this.message.name) + ' ]'\n      });\n      msg.addEventListener('click', function () {\n        window.open(_this2.message.url);\n      });\n\n      var messageFooter = (0, _utils.createDivEl)({ className: _message2.default['message-footer'] });\n\n      var time = (0, _utils.createDivEl)({ className: _message2.default.time, content: (0, _utils.timestampToTime)(this.message.createdAt) });\n      time.addEventListener('mouseover', function () {\n        _this2._hoverOnTime(time, true);\n      });\n      time.addEventListener('mouseleave', function () {\n        _this2._hoverOnTime(time, false);\n      });\n      time.addEventListener('click', function () {\n        var messageDeleteModal = new _MessageDeleteModal.MessageDeleteModal({\n          channel: _this2.channel,\n          message: _this2.message,\n          widgetContainerEl: _this2.widgetContainerEl\n        });\n        messageDeleteModal.render();\n      });\n\n      messageFooter.appendChild(time);\n\n      if (this.channel.isGroupChannel()) {\n        var count = sendbirdAction.getReadReceipt(this.channel, this.message);\n        var read = (0, _utils.createDivEl)({\n          className: count ? [_message2.default.read, _message2.default.active] : _message2.default.read\n          // content: count ? '' : '[ ✓ ]'\n        });\n        messageFooter.appendChild(read);\n      }\n\n      root.appendChild(messageContent);\n      messageBody.appendChild(nickname);\n\n      if ((0, _utils.isImage)(this.message.type) && this.message.messageId) {\n        var imageContent = (0, _utils.createDivEl)({ className: _message2.default['image-content'] });\n        imageContent.addEventListener('click', function () {\n          window.open(_this2.message.url);\n        });\n        var imageRender = document.createElement('img');\n        imageRender.className = _message2.default['image-render'];\n        imageRender.src = (0, _utils.protectFromXSS)(this.message.url);\n        imageRender.onload = function () {\n          _Chat.Chat.getInstance().main.repositionScroll(imageRender.offsetHeight);\n        };\n        imageContent.appendChild(imageRender);\n        messageBody.appendChild(imageContent);\n      }\n\n      messageBody.appendChild(msg);\n      messageBody.appendChild(messageFooter);\n      messageContent.appendChild(avatar);\n      messageContent.appendChild(messageBody);\n\n      return root;\n    }\n  }, {\n    key: '_createAdminElement',\n    value: function _createAdminElement() {\n      var root = (0, _utils.createDivEl)({ className: _message2.default['chat-message'], id: this.message.messageId });\n      var msg = (0, _utils.createDivEl)({ className: _message2.default['message-admin'], content: (0, _utils.protectFromXSS)(this.message.message) });\n      root.appendChild(msg);\n      return root;\n    }\n  }], [{\n    key: 'getRootElementClasasName',\n    value: function getRootElementClasasName() {\n      return _message2.default['chat-message'];\n    }\n  }, {\n    key: 'getReadReceiptElementClassName',\n    value: function getReadReceiptElementClassName() {\n      return _message2.default.active;\n    }\n  }]);\n\n  return Message;\n}();\n\nexports.Message = Message;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.MessageDeleteModal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _messageDeleteModal = __webpack_require__(63);\n\nvar _messageDeleteModal2 = _interopRequireDefault(_messageDeleteModal);\n\nvar _utils = __webpack_require__(0);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _Modal2 = __webpack_require__(16);\n\nvar _Chat = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar title = \'Delete Message\';\nvar description = \'Are you Sure? Do you want to delete message?\';\nvar submitText = \'DELETE\';\n\nvar MessageDeleteModal = function (_Modal) {\n  _inherits(MessageDeleteModal, _Modal);\n\n  function MessageDeleteModal(_ref) {\n    var channel = _ref.channel,\n        message = _ref.message,\n        widgetContainerEl = _ref.widgetContainerEl;\n\n    _classCallCheck(this, MessageDeleteModal);\n\n    var _this = _possibleConstructorReturn(this, (MessageDeleteModal.__proto__ || Object.getPrototypeOf(MessageDeleteModal)).call(this, { title: title, description: description, submitText: submitText, widgetContainerEl: widgetContainerEl }));\n\n    _this.channel = channel;\n    _this.message = message;\n    _this._createElement();\n    _this._createHandler();\n    return _this;\n  }\n\n  _createClass(MessageDeleteModal, [{\n    key: \'_createElement\',\n    value: function _createElement() {\n      var content = (0, _utils.createDivEl)({\n        className: _messageDeleteModal2.default[\'modal-message\'],\n        content: this.message.isFileMessage() ? (0, _utils.protectFromXSS)(this.message.name) : (0, _utils.protectFromXSS)(this.message.message)\n      });\n      this.contentElement.appendChild(content);\n    }\n  }, {\n    key: \'_createHandler\',\n    value: function _createHandler() {\n      var _this2 = this;\n\n      this.submitHandler = function () {\n        _SendBirdAction.SendBirdAction.getInstance().deleteMessage({ channel: _this2.channel, message: _this2.message }).then(function () {\n          _Spinner.Spinner.remove();\n          _this2.close();\n          _Chat.Chat.getInstance().main.removeMessage(_this2.message.messageId);\n        }).catch(function (error) {\n          (0, _utils.errorAlert)(error.message);\n        });\n      };\n    }\n  }]);\n\n  return MessageDeleteModal;\n}(_Modal2.Modal);\n\nexports.MessageDeleteModal = MessageDeleteModal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvTWVzc2FnZURlbGV0ZU1vZGFsLmpzPzZjZWQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5NZXNzYWdlRGVsZXRlTW9kYWwgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfbWVzc2FnZURlbGV0ZU1vZGFsID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9tZXNzYWdlLWRlbGV0ZS1tb2RhbC5zY3NzJyk7XG5cbnZhciBfbWVzc2FnZURlbGV0ZU1vZGFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21lc3NhZ2VEZWxldGVNb2RhbCk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX1NlbmRCaXJkQWN0aW9uID0gcmVxdWlyZSgnLi4vU2VuZEJpcmRBY3Rpb24nKTtcblxudmFyIF9TcGlubmVyID0gcmVxdWlyZSgnLi9TcGlubmVyJyk7XG5cbnZhciBfTW9kYWwyID0gcmVxdWlyZSgnLi9Nb2RhbCcpO1xuXG52YXIgX0NoYXQgPSByZXF1aXJlKCcuLi9DaGF0Jyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIHRpdGxlID0gJ0RlbGV0ZSBNZXNzYWdlJztcbnZhciBkZXNjcmlwdGlvbiA9ICdBcmUgeW91IFN1cmU/IERvIHlvdSB3YW50IHRvIGRlbGV0ZSBtZXNzYWdlPyc7XG52YXIgc3VibWl0VGV4dCA9ICdERUxFVEUnO1xuXG52YXIgTWVzc2FnZURlbGV0ZU1vZGFsID0gZnVuY3Rpb24gKF9Nb2RhbCkge1xuICBfaW5oZXJpdHMoTWVzc2FnZURlbGV0ZU1vZGFsLCBfTW9kYWwpO1xuXG4gIGZ1bmN0aW9uIE1lc3NhZ2VEZWxldGVNb2RhbChfcmVmKSB7XG4gICAgdmFyIGNoYW5uZWwgPSBfcmVmLmNoYW5uZWwsXG4gICAgICAgIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICAgIHdpZGdldENvbnRhaW5lckVsID0gX3JlZi53aWRnZXRDb250YWluZXJFbDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZXNzYWdlRGVsZXRlTW9kYWwpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKE1lc3NhZ2VEZWxldGVNb2RhbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1lc3NhZ2VEZWxldGVNb2RhbCkpLmNhbGwodGhpcywgeyB0aXRsZTogdGl0bGUsIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwgc3VibWl0VGV4dDogc3VibWl0VGV4dCwgd2lkZ2V0Q29udGFpbmVyRWw6IHdpZGdldENvbnRhaW5lckVsIH0pKTtcblxuICAgIF90aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xuICAgIF90aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIF90aGlzLl9jcmVhdGVFbGVtZW50KCk7XG4gICAgX3RoaXMuX2NyZWF0ZUhhbmRsZXIoKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWVzc2FnZURlbGV0ZU1vZGFsLCBbe1xuICAgIGtleTogJ19jcmVhdGVFbGVtZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2NyZWF0ZUVsZW1lbnQoKSB7XG4gICAgICB2YXIgY29udGVudCA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHtcbiAgICAgICAgY2xhc3NOYW1lOiBfbWVzc2FnZURlbGV0ZU1vZGFsMi5kZWZhdWx0Wydtb2RhbC1tZXNzYWdlJ10sXG4gICAgICAgIGNvbnRlbnQ6IHRoaXMubWVzc2FnZS5pc0ZpbGVNZXNzYWdlKCkgPyAoMCwgX3V0aWxzLnByb3RlY3RGcm9tWFNTKSh0aGlzLm1lc3NhZ2UubmFtZSkgOiAoMCwgX3V0aWxzLnByb3RlY3RGcm9tWFNTKSh0aGlzLm1lc3NhZ2UubWVzc2FnZSlcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb250ZW50RWxlbWVudC5hcHBlbmRDaGlsZChjb250ZW50KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfY3JlYXRlSGFuZGxlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGVIYW5kbGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuc3VibWl0SGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX1NlbmRCaXJkQWN0aW9uLlNlbmRCaXJkQWN0aW9uLmdldEluc3RhbmNlKCkuZGVsZXRlTWVzc2FnZSh7IGNoYW5uZWw6IF90aGlzMi5jaGFubmVsLCBtZXNzYWdlOiBfdGhpczIubWVzc2FnZSB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfU3Bpbm5lci5TcGlubmVyLnJlbW92ZSgpO1xuICAgICAgICAgIF90aGlzMi5jbG9zZSgpO1xuICAgICAgICAgIF9DaGF0LkNoYXQuZ2V0SW5zdGFuY2UoKS5tYWluLnJlbW92ZU1lc3NhZ2UoX3RoaXMyLm1lc3NhZ2UubWVzc2FnZUlkKTtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgKDAsIF91dGlscy5lcnJvckFsZXJ0KShlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNZXNzYWdlRGVsZXRlTW9kYWw7XG59KF9Nb2RhbDIuTW9kYWwpO1xuXG5leHBvcnRzLk1lc3NhZ2VEZWxldGVNb2RhbCA9IE1lc3NhZ2VEZWxldGVNb2RhbDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatInput = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chatInput = __webpack_require__(69);\n\nvar _chatInput2 = _interopRequireDefault(_chatInput);\n\nvar _utils = __webpack_require__(0);\n\nvar _const = __webpack_require__(2);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nvar _Chat = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChatInput = function () {\n  function ChatInput(channel) {\n    _classCallCheck(this, ChatInput);\n\n    this.channel = channel;\n    this.input = null;\n    this.typing = null;\n    this.element = this._createElement(channel);\n  }\n\n  _createClass(ChatInput, [{\n    key: '_createElement',\n    value: function _createElement(channel) {\n      var _this = this;\n\n      var root = (0, _utils.createDivEl)({ className: _chatInput2.default['chat-input'] });\n      var inputPanel = (0, _utils.createDivEl)({ className: _chatInput2.default['input-panel'] });\n      var buttonPanel = (0, _utils.createDivEl)({ className: _chatInput2.default['button-panel'] });\n\n      root.appendChild(inputPanel);\n      root.appendChild(buttonPanel);\n\n      this.typing = (0, _utils.createDivEl)({ className: _chatInput2.default['typing-field'] });\n      buttonPanel.appendChild(this.typing);\n\n      var file = document.createElement('label');\n      file.className = _chatInput2.default['input-file'];\n      file.for = _const.FILE_ID;\n      file.addEventListener('click', function () {\n        if (_this.channel.isGroupChannel()) {\n          _SendBirdAction.SendBirdAction.getInstance().markAsRead(_this.channel);\n        }\n      });\n\n      var fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.id = _const.FILE_ID;\n      fileInput.style.display = _const.DISPLAY_NONE;\n      fileInput.addEventListener('change', function () {\n        var sendFile = fileInput.files[0];\n        if (sendFile) {\n          var tempMessage = _SendBirdAction.SendBirdAction.getInstance().sendFileMessage({\n            channel: _this.channel,\n            file: sendFile,\n            handler: function handler(message, error) {\n              error ? _Chat.Chat.getInstance().main.removeMessage(tempMessage.reqId, true) : _Chat.Chat.getInstance().main.renderMessages([message]);\n            }\n          });\n          _Chat.Chat.getInstance().main.renderMessages([tempMessage]);\n        }\n      });\n\n      file.appendChild(fileInput);\n      inputPanel.appendChild(file);\n\n      var inputText = (0, _utils.createDivEl)({ className: _chatInput2.default['input-text'] });\n\n      this.input = document.createElement('textarea');\n      this.input.className = _chatInput2.default['input-text-area'];\n      this.input.placeholder = 'Write a chat...';\n      this.input.addEventListener('click', function () {\n        if (_this.channel.isGroupChannel()) {\n          _SendBirdAction.SendBirdAction.getInstance().markAsRead(_this.channel);\n        }\n      });\n      this.input.addEventListener('keypress', function () {\n        if (channel.isGroupChannel()) channel.startTyping();\n      });\n      this.input.addEventListener('focusin', function () {\n        _this.channel._autoMarkAsRead = true;\n        inputText.style.border = '1px solid #2C2D30';\n      });\n      this.input.addEventListener('focusout', function () {\n        _this.channel._autoMarkAsRead = false;\n        inputText.style.border = '';\n      });\n\n      inputText.appendChild(this.input);\n      inputPanel.appendChild(inputText);\n\n      var sendButton = document.createElement('button');\n      sendButton.innerHTML = \"Send\";\n      sendButton.className = _chatInput2.default['send-button'];\n      sendButton.addEventListener('click', function () {\n        _this.postMessageFromInput();\n      });\n      buttonPanel.appendChild(sendButton);\n\n      return root;\n    }\n  }, {\n    key: 'postMessageFromInput',\n    value: function postMessageFromInput() {\n      var message = this.input.value;\n      this.input.value = '';\n      if (message) {\n        var tempMessage = _SendBirdAction.SendBirdAction.getInstance().sendUserMessage({\n          channel: this.channel,\n          message: message,\n          handler: function handler(message, error) {\n            error ? _Chat.Chat.getInstance().main.removeMessage(tempMessage.reqId, true) : _Chat.Chat.getInstance().main.renderMessages([message]);\n          }\n        });\n        _Chat.Chat.getInstance().main.renderMessages([tempMessage]);\n        if (this.channel.isGroupChannel()) {\n          this.channel.endTyping();\n        }\n      }\n    }\n  }, {\n    key: 'updateTyping',\n    value: function updateTyping(memberList) {\n      var nicknames = '';\n      if (memberList.length === 1) {\n        nicknames = (0, _utils.protectFromXSS)(memberList[0].nickname) + ' is';\n      } else if (memberList.length === 2) {\n        nicknames = memberList.map(function (member) {\n          return (0, _utils.protectFromXSS)(member.nickname);\n        }).join(', ') + ' are';\n      } else if (memberList.length !== 0) {\n        nicknames = 'Several are';\n      }\n      this.typing.style.display = nicknames ? _const.DISPLAY_BLOCK : _const.DISPLAY_NONE;\n      this.typing.innerHTML = nicknames + ' typing...';\n    }\n  }]);\n\n  return ChatInput;\n}();\n\nexports.ChatInput = ChatInput;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatMenu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chatMenu = __webpack_require__(71);\n\nvar _chatMenu2 = _interopRequireDefault(_chatMenu);\n\nvar _utils = __webpack_require__(0);\n\nvar _const = __webpack_require__(2);\n\nvar _Spinner = __webpack_require__(3);\n\nvar _ChatUserItem = __webpack_require__(32);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Type = {\n  PARTICIPANTS: 'PARTICIPANTS',\n  MEMBERS: 'MEMBERS',\n  BLOCKED: 'BLOCKED'\n};\n\nvar ChatMenu = function () {\n  function ChatMenu(channel) {\n    _classCallCheck(this, ChatMenu);\n\n    this.channel = channel;\n    this.element = (0, _utils.createDivEl)({ className: _chatMenu2.default['chat-menu-root'] });\n    this.listElement = null;\n    this.type = null;\n    this._createListElement();\n    this._createElement();\n  }\n\n  _createClass(ChatMenu, [{\n    key: '_createListElement',\n    value: function _createListElement() {\n      var _this = this;\n\n      this.listElement = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-list'] });\n\n      var title = (0, _utils.createDivEl)({ className: _chatMenu2.default['list-title'] });\n      title.addEventListener('click', function () {\n        _this.type = null;\n        _this.list.innerHTML = '';\n        _this.listElement.style.display = _const.DISPLAY_NONE;\n      });\n      this.listElement.appendChild(title);\n      var backBtn = (0, _utils.createDivEl)({ className: _chatMenu2.default['list-back'] });\n      title.appendChild(backBtn);\n      this.titleText = (0, _utils.createDivEl)({ className: _chatMenu2.default['list-text'] });\n      title.appendChild(this.titleText);\n\n      this.list = (0, _utils.createDivEl)({ className: _chatMenu2.default['list-body'] });\n      this.list.addEventListener('scroll', function () {\n        if (_this.type === Type.PARTICIPANTS) {\n          if ((0, _utils.isScrollBottom)(_this.list)) {\n            _this._getParticipantList(_this.type);\n          }\n        } else if (_this.type === Type.BLOCKED) {\n          _this._getBlockedList(_this.type);\n        }\n      });\n      this.listElement.appendChild(this.list);\n\n      this.element.appendChild(this.listElement);\n    }\n  }, {\n    key: '_createElement',\n    value: function _createElement() {\n      var _this2 = this;\n\n      var usersItem = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-item'] });\n      var users = (0, _utils.createDivEl)({\n        className: _chatMenu2.default['menu-users'],\n        content: this.channel.isOpenChannel() ? Type.PARTICIPANTS : Type.MEMBERS\n      });\n      usersItem.appendChild(users);\n      var arrowUser = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-arrow'] });\n      usersItem.appendChild(arrowUser);\n      usersItem.addEventListener('click', function () {\n        _this2._renderList(users.textContent);\n      });\n      this.element.appendChild(usersItem);\n\n      var blockedItem = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-item'] });\n      var blocked = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-blocked'], content: Type.BLOCKED });\n      blockedItem.appendChild(blocked);\n      var arrowBlocked = (0, _utils.createDivEl)({ className: _chatMenu2.default['menu-arrow'] });\n      blockedItem.appendChild(arrowBlocked);\n      blockedItem.addEventListener('click', function () {\n        _this2._renderList(blocked.textContent);\n      });\n      this.element.appendChild(blockedItem);\n    }\n  }, {\n    key: '_renderList',\n    value: function _renderList(listTitle) {\n      switch (listTitle) {\n        case Type.PARTICIPANTS:\n          this.type = Type.PARTICIPANTS;\n          this._getParticipantList(listTitle, true);\n          break;\n        case Type.MEMBERS:\n          this.type = Type.MEMBERS;\n          this._getMemberList(listTitle);\n          break;\n        case Type.BLOCKED:\n          this.type = Type.BLOCKED;\n          this._getBlockedList(listTitle, true);\n          break;\n        default:\n          this.titleText.innerHTML = '';\n          break;\n      }\n    }\n  }, {\n    key: '_getParticipantList',\n    value: function _getParticipantList(listTitle) {\n      var _this3 = this;\n\n      var isInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.channel.isOpenChannel()) {\n        _Spinner.Spinner.start(this.listElement);\n        if (isInit) {\n          this.titleText.innerHTML = listTitle;\n          this.listElement.style.display = _const.DISPLAY_FLEX;\n        }\n        _SendBirdAction.SendBirdAction.getInstance().getParticipantList(this.channel.url, isInit).then(function (participantList) {\n          participantList.forEach(function (user) {\n            var participantItem = new _ChatUserItem.ChatUserItem({ user: user, hasEvent: false });\n            _this3.list.appendChild(participantItem.element);\n          });\n          _Spinner.Spinner.remove();\n        }).catch(function (error) {\n          (0, _utils.errorAlert)(error.message);\n        });\n      }\n    }\n  }, {\n    key: '_getMemberList',\n    value: function _getMemberList(listTitle) {\n      var _this4 = this;\n\n      if (this.channel.isGroupChannel()) {\n        _Spinner.Spinner.start(this.listElement);\n        this.list.innerHTML = '';\n        this.titleText.innerHTML = listTitle;\n        this.listElement.style.display = _const.DISPLAY_FLEX;\n        this.channel.members.forEach(function (user) {\n          var memberItem = new _ChatUserItem.ChatUserItem({ user: user, hasEvent: false });\n          _this4.list.appendChild(memberItem.element);\n        });\n        _Spinner.Spinner.remove();\n      }\n    }\n  }, {\n    key: '_getBlockedList',\n    value: function _getBlockedList(listTitle) {\n      var _this5 = this;\n\n      var isInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _Spinner.Spinner.start(this.listElement);\n      if (isInit) {\n        this.list.innerHTML = '';\n        this.titleText.innerHTML = listTitle;\n        this.listElement.style.display = _const.DISPLAY_FLEX;\n      }\n      _SendBirdAction.SendBirdAction.getInstance().getBlockedList(isInit).then(function (blockedList) {\n        blockedList.forEach(function (user) {\n          var blockedItem = new _ChatUserItem.ChatUserItem({ user: user, hasEvent: true });\n          _this5.list.appendChild(blockedItem.element);\n        });\n        _Spinner.Spinner.remove();\n      }).catch(function (error) {\n        (0, _utils.errorAlert)(error.message);\n      });\n    }\n  }, {\n    key: 'updateBlockedList',\n    value: function updateBlockedList(user, isBlock) {\n      if (this.list) {\n        if (isBlock) {\n          var blockedItem = new _ChatUserItem.ChatUserItem({ user: user, hasEvent: true });\n          (0, _utils.appendToFirst)(this.list, blockedItem.element);\n        } else {\n          var items = this.list.childNodes;\n          for (var i = 0; i < items.length; i++) {\n            if (items[0].id === user.userId) {\n              this.list.removeChild(items[0]);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'updateMenu',\n    value: function updateMenu(channel) {\n      if (this.type === Type.MEMBERS) {\n        this.channel = channel;\n        this._getMemberList(this.type);\n      }\n    }\n  }], [{\n    key: 'Type',\n    get: function get() {\n      return Type;\n    }\n  }]);\n\n  return ChatMenu;\n}();\n\nexports.ChatMenu = ChatMenu;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///31\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatUserItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _chatUserItem = __webpack_require__(73);\n\nvar _chatUserItem2 = _interopRequireDefault(_chatUserItem);\n\nvar _utils = __webpack_require__(0);\n\nvar _const = __webpack_require__(2);\n\nvar _UserBlockModal = __webpack_require__(17);\n\nvar _SendBirdAction = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChatUserItem = function () {\n  function ChatUserItem(_ref) {\n    var user = _ref.user,\n        hasEvent = _ref.hasEvent;\n\n    _classCallCheck(this, ChatUserItem);\n\n    this.user = user;\n    this.hasEvent = hasEvent;\n    this.element = null;\n    this._create();\n  }\n\n  _createClass(ChatUserItem, [{\n    key: '_create',\n    value: function _create() {\n      var _this = this;\n\n      this.element = (0, _utils.createDivEl)({ className: _chatUserItem2.default['chat-user-item'], id: this.user.userId });\n      if (this.hasEvent) {\n        this.element.addEventListener('mouseover', function () {\n          _this._hoverOnUser(_this.user.nickname, true);\n        });\n        this.element.addEventListener('mouseleave', function () {\n          _this._hoverOnUser(_this.user.nickname, false);\n        });\n        this.element.addEventListener('click', function () {\n          var userBlockModal = new _UserBlockModal.UserBlockModal({ user: _this.user, isBlock: false });\n          userBlockModal.render();\n        });\n      }\n\n      var image = (0, _utils.createDivEl)({ className: _chatUserItem2.default['user-image'], background: (0, _utils.protectFromXSS)(this.user.profileUrl) });\n      this.element.appendChild(image);\n\n      this.nickname = (0, _utils.createDivEl)({\n        className: _SendBirdAction.SendBirdAction.getInstance().isCurrentUser(this.user) ? [_chatUserItem2.default['user-nickname'], _chatUserItem2.default['is-user']] : _chatUserItem2.default['user-nickname'],\n        content: (0, _utils.protectFromXSS)(this.user.nickname)\n      });\n      this.element.appendChild(this.nickname);\n    }\n  }, {\n    key: '_hoverOnUser',\n    value: function _hoverOnUser(nickname, hover) {\n      this.nickname.innerHTML = hover ? 'UNBLOCK' : (0, _utils.protectFromXSS)(nickname);\n      this.nickname.style.color = hover ? _const.COLOR_RED : '';\n      this.nickname.style.opacity = hover ? '1' : '';\n    }\n  }]);\n\n  return ChatUserItem;\n}();\n\nexports.ChatUserItem = ChatUserItem;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL2NvbXBvbmVudHMvQ2hhdFVzZXJJdGVtLmpzP2ZhZmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5DaGF0VXNlckl0ZW0gPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfY2hhdFVzZXJJdGVtID0gcmVxdWlyZSgnLi4vLi4vc2Nzcy9jaGF0LXVzZXItaXRlbS5zY3NzJyk7XG5cbnZhciBfY2hhdFVzZXJJdGVtMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYXRVc2VySXRlbSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX2NvbnN0ID0gcmVxdWlyZSgnLi4vY29uc3QnKTtcblxudmFyIF9Vc2VyQmxvY2tNb2RhbCA9IHJlcXVpcmUoJy4vVXNlckJsb2NrTW9kYWwnKTtcblxudmFyIF9TZW5kQmlyZEFjdGlvbiA9IHJlcXVpcmUoJy4uL1NlbmRCaXJkQWN0aW9uJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBDaGF0VXNlckl0ZW0gPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENoYXRVc2VySXRlbShfcmVmKSB7XG4gICAgdmFyIHVzZXIgPSBfcmVmLnVzZXIsXG4gICAgICAgIGhhc0V2ZW50ID0gX3JlZi5oYXNFdmVudDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDaGF0VXNlckl0ZW0pO1xuXG4gICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICB0aGlzLmhhc0V2ZW50ID0gaGFzRXZlbnQ7XG4gICAgdGhpcy5lbGVtZW50ID0gbnVsbDtcbiAgICB0aGlzLl9jcmVhdGUoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDaGF0VXNlckl0ZW0sIFt7XG4gICAga2V5OiAnX2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGUoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB0aGlzLmVsZW1lbnQgPSAoMCwgX3V0aWxzLmNyZWF0ZURpdkVsKSh7IGNsYXNzTmFtZTogX2NoYXRVc2VySXRlbTIuZGVmYXVsdFsnY2hhdC11c2VyLWl0ZW0nXSwgaWQ6IHRoaXMudXNlci51c2VySWQgfSk7XG4gICAgICBpZiAodGhpcy5oYXNFdmVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzLl9ob3Zlck9uVXNlcihfdGhpcy51c2VyLm5pY2tuYW1lLCB0cnVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzLl9ob3Zlck9uVXNlcihfdGhpcy51c2VyLm5pY2tuYW1lLCBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIHVzZXJCbG9ja01vZGFsID0gbmV3IF9Vc2VyQmxvY2tNb2RhbC5Vc2VyQmxvY2tNb2RhbCh7IHVzZXI6IF90aGlzLnVzZXIsIGlzQmxvY2s6IGZhbHNlIH0pO1xuICAgICAgICAgIHVzZXJCbG9ja01vZGFsLnJlbmRlcigpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGltYWdlID0gKDAsIF91dGlscy5jcmVhdGVEaXZFbCkoeyBjbGFzc05hbWU6IF9jaGF0VXNlckl0ZW0yLmRlZmF1bHRbJ3VzZXItaW1hZ2UnXSwgYmFja2dyb3VuZDogKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykodGhpcy51c2VyLnByb2ZpbGVVcmwpIH0pO1xuICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGltYWdlKTtcblxuICAgICAgdGhpcy5uaWNrbmFtZSA9ICgwLCBfdXRpbHMuY3JlYXRlRGl2RWwpKHtcbiAgICAgICAgY2xhc3NOYW1lOiBfU2VuZEJpcmRBY3Rpb24uU2VuZEJpcmRBY3Rpb24uZ2V0SW5zdGFuY2UoKS5pc0N1cnJlbnRVc2VyKHRoaXMudXNlcikgPyBbX2NoYXRVc2VySXRlbTIuZGVmYXVsdFsndXNlci1uaWNrbmFtZSddLCBfY2hhdFVzZXJJdGVtMi5kZWZhdWx0Wydpcy11c2VyJ11dIDogX2NoYXRVc2VySXRlbTIuZGVmYXVsdFsndXNlci1uaWNrbmFtZSddLFxuICAgICAgICBjb250ZW50OiAoMCwgX3V0aWxzLnByb3RlY3RGcm9tWFNTKSh0aGlzLnVzZXIubmlja25hbWUpXG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLm5pY2tuYW1lKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfaG92ZXJPblVzZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaG92ZXJPblVzZXIobmlja25hbWUsIGhvdmVyKSB7XG4gICAgICB0aGlzLm5pY2tuYW1lLmlubmVySFRNTCA9IGhvdmVyID8gJ1VOQkxPQ0snIDogKDAsIF91dGlscy5wcm90ZWN0RnJvbVhTUykobmlja25hbWUpO1xuICAgICAgdGhpcy5uaWNrbmFtZS5zdHlsZS5jb2xvciA9IGhvdmVyID8gX2NvbnN0LkNPTE9SX1JFRCA6ICcnO1xuICAgICAgdGhpcy5uaWNrbmFtZS5zdHlsZS5vcGFjaXR5ID0gaG92ZXIgPyAnMScgOiAnJztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2hhdFVzZXJJdGVtO1xufSgpO1xuXG5leHBvcnRzLkNoYXRVc2VySXRlbSA9IENoYXRVc2VySXRlbTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///32\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendBirdChatEvent = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _sendbird = __webpack_require__(8);\n\nvar _sendbird2 = _interopRequireDefault(_sendbird);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar SendBirdChatEvent = function () {\n  function SendBirdChatEvent() {\n    _classCallCheck(this, SendBirdChatEvent);\n\n    if (instance) {\n      return instance;\n    }\n\n    this.sb = _sendbird2.default.getInstance();\n    this.key = (0, _utils.uuid4)();\n    this._createChannelHandler();\n\n    this.onMessageReceived = null;\n    this.onMessageUpdated = null;\n    this.onMessageDeleted = null;\n\n    this.onReadReceiptUpdated = null;\n    this.onTypingStatusUpdated = null;\n    instance = this;\n  }\n\n  /**\n   * Channel Handler\n   */\n\n\n  _createClass(SendBirdChatEvent, [{\n    key: '_createChannelHandler',\n    value: function _createChannelHandler() {\n      var _this = this;\n\n      var handler = new this.sb.ChannelHandler();\n      handler.onMessageReceived = function (channel, message) {\n        if (_this.onMessageReceived) {\n          _this.onMessageReceived(channel, message);\n        }\n      };\n      handler.onMessageUpdated = function (channel, message) {\n        if (_this.onMessageUpdated) {\n          _this.onMessageUpdated(channel, message);\n        }\n      };\n      handler.onMessageDeleted = function (channel, messageId) {\n        if (_this.onMessageDeleted) {\n          _this.onMessageDeleted(channel, messageId);\n        }\n      };\n\n      handler.onReadReceiptUpdated = function (groupChannel) {\n        if (_this.onReadReceiptUpdated) {\n          _this.onReadReceiptUpdated(groupChannel);\n        }\n      };\n      handler.onTypingStatusUpdated = function (groupChannel) {\n        if (_this.onTypingStatusUpdated) {\n          _this.onTypingStatusUpdated(groupChannel);\n        }\n      };\n      this.sb.addChannelHandler(this.key, handler);\n    }\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.sb.removeChannelHandler(this.key);\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return instance;\n    }\n  }]);\n\n  return SendBirdChatEvent;\n}();\n\nexports.SendBirdChatEvent = SendBirdChatEvent;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL1NlbmRCaXJkQ2hhdEV2ZW50LmpzPzg1NzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TZW5kQmlyZENoYXRFdmVudCA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9zZW5kYmlyZCA9IHJlcXVpcmUoJ3NlbmRiaXJkJyk7XG5cbnZhciBfc2VuZGJpcmQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2VuZGJpcmQpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgaW5zdGFuY2UgPSBudWxsO1xuXG52YXIgU2VuZEJpcmRDaGF0RXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlbmRCaXJkQ2hhdEV2ZW50KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZW5kQmlyZENoYXRFdmVudCk7XG5cbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG5cbiAgICB0aGlzLnNiID0gX3NlbmRiaXJkMi5kZWZhdWx0LmdldEluc3RhbmNlKCk7XG4gICAgdGhpcy5rZXkgPSAoMCwgX3V0aWxzLnV1aWQ0KSgpO1xuICAgIHRoaXMuX2NyZWF0ZUNoYW5uZWxIYW5kbGVyKCk7XG5cbiAgICB0aGlzLm9uTWVzc2FnZVJlY2VpdmVkID0gbnVsbDtcbiAgICB0aGlzLm9uTWVzc2FnZVVwZGF0ZWQgPSBudWxsO1xuICAgIHRoaXMub25NZXNzYWdlRGVsZXRlZCA9IG51bGw7XG5cbiAgICB0aGlzLm9uUmVhZFJlY2VpcHRVcGRhdGVkID0gbnVsbDtcbiAgICB0aGlzLm9uVHlwaW5nU3RhdHVzVXBkYXRlZCA9IG51bGw7XG4gICAgaW5zdGFuY2UgPSB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5uZWwgSGFuZGxlclxuICAgKi9cblxuXG4gIF9jcmVhdGVDbGFzcyhTZW5kQmlyZENoYXRFdmVudCwgW3tcbiAgICBrZXk6ICdfY3JlYXRlQ2hhbm5lbEhhbmRsZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlQ2hhbm5lbEhhbmRsZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgaGFuZGxlciA9IG5ldyB0aGlzLnNiLkNoYW5uZWxIYW5kbGVyKCk7XG4gICAgICBoYW5kbGVyLm9uTWVzc2FnZVJlY2VpdmVkID0gZnVuY3Rpb24gKGNoYW5uZWwsIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKF90aGlzLm9uTWVzc2FnZVJlY2VpdmVkKSB7XG4gICAgICAgICAgX3RoaXMub25NZXNzYWdlUmVjZWl2ZWQoY2hhbm5lbCwgbWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBoYW5kbGVyLm9uTWVzc2FnZVVwZGF0ZWQgPSBmdW5jdGlvbiAoY2hhbm5lbCwgbWVzc2FnZSkge1xuICAgICAgICBpZiAoX3RoaXMub25NZXNzYWdlVXBkYXRlZCkge1xuICAgICAgICAgIF90aGlzLm9uTWVzc2FnZVVwZGF0ZWQoY2hhbm5lbCwgbWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBoYW5kbGVyLm9uTWVzc2FnZURlbGV0ZWQgPSBmdW5jdGlvbiAoY2hhbm5lbCwgbWVzc2FnZUlkKSB7XG4gICAgICAgIGlmIChfdGhpcy5vbk1lc3NhZ2VEZWxldGVkKSB7XG4gICAgICAgICAgX3RoaXMub25NZXNzYWdlRGVsZXRlZChjaGFubmVsLCBtZXNzYWdlSWQpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBoYW5kbGVyLm9uUmVhZFJlY2VpcHRVcGRhdGVkID0gZnVuY3Rpb24gKGdyb3VwQ2hhbm5lbCkge1xuICAgICAgICBpZiAoX3RoaXMub25SZWFkUmVjZWlwdFVwZGF0ZWQpIHtcbiAgICAgICAgICBfdGhpcy5vblJlYWRSZWNlaXB0VXBkYXRlZChncm91cENoYW5uZWwpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgaGFuZGxlci5vblR5cGluZ1N0YXR1c1VwZGF0ZWQgPSBmdW5jdGlvbiAoZ3JvdXBDaGFubmVsKSB7XG4gICAgICAgIGlmIChfdGhpcy5vblR5cGluZ1N0YXR1c1VwZGF0ZWQpIHtcbiAgICAgICAgICBfdGhpcy5vblR5cGluZ1N0YXR1c1VwZGF0ZWQoZ3JvdXBDaGFubmVsKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHRoaXMuc2IuYWRkQ2hhbm5lbEhhbmRsZXIodGhpcy5rZXksIGhhbmRsZXIpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbW92ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHRoaXMuc2IucmVtb3ZlQ2hhbm5lbEhhbmRsZXIodGhpcy5rZXkpO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnZ2V0SW5zdGFuY2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbnN0YW5jZSgpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2VuZEJpcmRDaGF0RXZlbnQ7XG59KCk7XG5cbmV4cG9ydHMuU2VuZEJpcmRDaGF0RXZlbnQgPSBTZW5kQmlyZENoYXRFdmVudDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///33\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendBirdConnection = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _sendbird = __webpack_require__(8);\n\nvar _sendbird2 = _interopRequireDefault(_sendbird);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar instance = null;\n\nvar SendBirdConnection = function () {\n  function SendBirdConnection() {\n    _classCallCheck(this, SendBirdConnection);\n\n    if (instance) {\n      return instance;\n    }\n\n    this.sb = _sendbird2.default.getInstance();\n    this.key = (0, _utils.uuid4)();\n    this.channel = null;\n    this._createConnectionHandler(this.key);\n\n    this.onReconnectStarted = null;\n    this.onReconnectSucceeded = null;\n    this.onReconnectFailed = null;\n\n    instance = this;\n  }\n\n  _createClass(SendBirdConnection, [{\n    key: '_createConnectionHandler',\n    value: function _createConnectionHandler(key) {\n      var _this = this;\n\n      var handler = new this.sb.ConnectionHandler();\n      handler.onReconnectStarted = function () {\n        if (_this.onReconnectStarted) {\n          _this.onReconnectStarted();\n        }\n      };\n      handler.onReconnectSucceeded = function () {\n        if (_this.onReconnectSucceeded) {\n          _this.onReconnectSucceeded();\n        }\n      };\n      handler.onReconnectFailed = function () {\n        if (_this.onReconnectFailed) {\n          _this.onReconnectFailed();\n        }\n      };\n      this.sb.addConnectionHandler(key, handler);\n    }\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.sb.removeConnectionHandler(this.key);\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance() {\n      return new SendBirdConnection();\n    }\n  }]);\n\n  return SendBirdConnection;\n}();\n\nexports.SendBirdConnection = SendBirdConnection;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL1NlbmRCaXJkQ29ubmVjdGlvbi5qcz9lMjVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuU2VuZEJpcmRDb25uZWN0aW9uID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3NlbmRiaXJkID0gcmVxdWlyZSgnc2VuZGJpcmQnKTtcblxudmFyIF9zZW5kYmlyZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZW5kYmlyZCk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBpbnN0YW5jZSA9IG51bGw7XG5cbnZhciBTZW5kQmlyZENvbm5lY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlbmRCaXJkQ29ubmVjdGlvbigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VuZEJpcmRDb25uZWN0aW9uKTtcblxuICAgIGlmIChpbnN0YW5jZSkge1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cblxuICAgIHRoaXMuc2IgPSBfc2VuZGJpcmQyLmRlZmF1bHQuZ2V0SW5zdGFuY2UoKTtcbiAgICB0aGlzLmtleSA9ICgwLCBfdXRpbHMudXVpZDQpKCk7XG4gICAgdGhpcy5jaGFubmVsID0gbnVsbDtcbiAgICB0aGlzLl9jcmVhdGVDb25uZWN0aW9uSGFuZGxlcih0aGlzLmtleSk7XG5cbiAgICB0aGlzLm9uUmVjb25uZWN0U3RhcnRlZCA9IG51bGw7XG4gICAgdGhpcy5vblJlY29ubmVjdFN1Y2NlZWRlZCA9IG51bGw7XG4gICAgdGhpcy5vblJlY29ubmVjdEZhaWxlZCA9IG51bGw7XG5cbiAgICBpbnN0YW5jZSA9IHRoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU2VuZEJpcmRDb25uZWN0aW9uLCBbe1xuICAgIGtleTogJ19jcmVhdGVDb25uZWN0aW9uSGFuZGxlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGVDb25uZWN0aW9uSGFuZGxlcihrZXkpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBoYW5kbGVyID0gbmV3IHRoaXMuc2IuQ29ubmVjdGlvbkhhbmRsZXIoKTtcbiAgICAgIGhhbmRsZXIub25SZWNvbm5lY3RTdGFydGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMub25SZWNvbm5lY3RTdGFydGVkKSB7XG4gICAgICAgICAgX3RoaXMub25SZWNvbm5lY3RTdGFydGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBoYW5kbGVyLm9uUmVjb25uZWN0U3VjY2VlZGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoX3RoaXMub25SZWNvbm5lY3RTdWNjZWVkZWQpIHtcbiAgICAgICAgICBfdGhpcy5vblJlY29ubmVjdFN1Y2NlZWRlZCgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgaGFuZGxlci5vblJlY29ubmVjdEZhaWxlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKF90aGlzLm9uUmVjb25uZWN0RmFpbGVkKSB7XG4gICAgICAgICAgX3RoaXMub25SZWNvbm5lY3RGYWlsZWQoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHRoaXMuc2IuYWRkQ29ubmVjdGlvbkhhbmRsZXIoa2V5LCBoYW5kbGVyKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICB0aGlzLnNiLnJlbW92ZUNvbm5lY3Rpb25IYW5kbGVyKHRoaXMua2V5KTtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2dldEluc3RhbmNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SW5zdGFuY2UoKSB7XG4gICAgICByZXR1cm4gbmV3IFNlbmRCaXJkQ29ubmVjdGlvbigpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTZW5kQmlyZENvbm5lY3Rpb247XG59KCk7XG5cbmV4cG9ydHMuU2VuZEJpcmRDb25uZWN0aW9uID0gU2VuZEJpcmRDb25uZWN0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.SendBirdEvent = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _sendbird = __webpack_require__(8);\n\nvar _sendbird2 = _interopRequireDefault(_sendbird);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar SendBirdEvent = function () {\n  function SendBirdEvent() {\n    _classCallCheck(this, SendBirdEvent);\n\n    this.sb = _sendbird2.default.getInstance();\n    this.key = (0, _utils.uuid4)();\n    this._createChannelHandler();\n\n    this.onChannelChanged = null;\n    this.onUserJoined = null;\n    this.onUserLeft = null;\n    this.onChannelHidden = null;\n    this.onUserEntered = null;\n  }\n\n  _createClass(SendBirdEvent, [{\n    key: \'_createChannelHandler\',\n    value: function _createChannelHandler() {\n      var _this = this;\n\n      var handler = new this.sb.ChannelHandler();\n      handler.onChannelChanged = function (channel) {\n        if (_this.onChannelChanged) {\n          _this.onChannelChanged(channel);\n        }\n      };\n      handler.onUserJoined = function (groupChannel, user) {\n        if (_this.onUserJoined) {\n          _this.onUserJoined(groupChannel, user);\n        }\n      };\n      handler.onUserLeft = function (groupChannel, user) {\n        if (_this.onUserLeft) {\n          _this.onUserLeft(groupChannel, user);\n        }\n      };\n      handler.onChannelHidden = function (groupChannel) {\n        if (_this.onChannelHidden) {\n          _this.onChannelHidden(groupChannel);\n        }\n      };\n      handler.onUserEntered = function (openChannel, user) {\n        if (_this.onUserEntered) {\n          _this.onUserEntered(openChannel, user);\n        }\n      };\n      this.sb.addChannelHandler(this.key, handler);\n    }\n  }, {\n    key: \'remove\',\n    value: function remove() {\n      this.sb.removeChannelHandler(this.key);\n    }\n  }]);\n\n  return SendBirdEvent;\n}();\n\nexports.SendBirdEvent = SendBirdEvent;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL2pzL1NlbmRCaXJkRXZlbnQuanM/ZmQ3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlNlbmRCaXJkRXZlbnQgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfc2VuZGJpcmQgPSByZXF1aXJlKCdzZW5kYmlyZCcpO1xuXG52YXIgX3NlbmRiaXJkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NlbmRiaXJkKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFNlbmRCaXJkRXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlbmRCaXJkRXZlbnQoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlbmRCaXJkRXZlbnQpO1xuXG4gICAgdGhpcy5zYiA9IF9zZW5kYmlyZDIuZGVmYXVsdC5nZXRJbnN0YW5jZSgpO1xuICAgIHRoaXMua2V5ID0gKDAsIF91dGlscy51dWlkNCkoKTtcbiAgICB0aGlzLl9jcmVhdGVDaGFubmVsSGFuZGxlcigpO1xuXG4gICAgdGhpcy5vbkNoYW5uZWxDaGFuZ2VkID0gbnVsbDtcbiAgICB0aGlzLm9uVXNlckpvaW5lZCA9IG51bGw7XG4gICAgdGhpcy5vblVzZXJMZWZ0ID0gbnVsbDtcbiAgICB0aGlzLm9uQ2hhbm5lbEhpZGRlbiA9IG51bGw7XG4gICAgdGhpcy5vblVzZXJFbnRlcmVkID0gbnVsbDtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZW5kQmlyZEV2ZW50LCBbe1xuICAgIGtleTogJ19jcmVhdGVDaGFubmVsSGFuZGxlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGVDaGFubmVsSGFuZGxlcigpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBoYW5kbGVyID0gbmV3IHRoaXMuc2IuQ2hhbm5lbEhhbmRsZXIoKTtcbiAgICAgIGhhbmRsZXIub25DaGFubmVsQ2hhbmdlZCA9IGZ1bmN0aW9uIChjaGFubmVsKSB7XG4gICAgICAgIGlmIChfdGhpcy5vbkNoYW5uZWxDaGFuZ2VkKSB7XG4gICAgICAgICAgX3RoaXMub25DaGFubmVsQ2hhbmdlZChjaGFubmVsKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGhhbmRsZXIub25Vc2VySm9pbmVkID0gZnVuY3Rpb24gKGdyb3VwQ2hhbm5lbCwgdXNlcikge1xuICAgICAgICBpZiAoX3RoaXMub25Vc2VySm9pbmVkKSB7XG4gICAgICAgICAgX3RoaXMub25Vc2VySm9pbmVkKGdyb3VwQ2hhbm5lbCwgdXNlcik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBoYW5kbGVyLm9uVXNlckxlZnQgPSBmdW5jdGlvbiAoZ3JvdXBDaGFubmVsLCB1c2VyKSB7XG4gICAgICAgIGlmIChfdGhpcy5vblVzZXJMZWZ0KSB7XG4gICAgICAgICAgX3RoaXMub25Vc2VyTGVmdChncm91cENoYW5uZWwsIHVzZXIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgaGFuZGxlci5vbkNoYW5uZWxIaWRkZW4gPSBmdW5jdGlvbiAoZ3JvdXBDaGFubmVsKSB7XG4gICAgICAgIGlmIChfdGhpcy5vbkNoYW5uZWxIaWRkZW4pIHtcbiAgICAgICAgICBfdGhpcy5vbkNoYW5uZWxIaWRkZW4oZ3JvdXBDaGFubmVsKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGhhbmRsZXIub25Vc2VyRW50ZXJlZCA9IGZ1bmN0aW9uIChvcGVuQ2hhbm5lbCwgdXNlcikge1xuICAgICAgICBpZiAoX3RoaXMub25Vc2VyRW50ZXJlZCkge1xuICAgICAgICAgIF90aGlzLm9uVXNlckVudGVyZWQob3BlbkNoYW5uZWwsIHVzZXIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdGhpcy5zYi5hZGRDaGFubmVsSGFuZGxlcih0aGlzLmtleSwgaGFuZGxlcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgdGhpcy5zYi5yZW1vdmVDaGFubmVsSGFuZGxlcih0aGlzLmtleSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNlbmRCaXJkRXZlbnQ7XG59KCk7XG5cbmV4cG9ydHMuU2VuZEJpcmRFdmVudCA9IFNlbmRCaXJkRXZlbnQ7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n')},function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","body":"body","body-left":"body-left","show":"show","body-left-list":"body-left-list","icon-create-chat":"icon-create-chat","chat-type":"chat-type","chat-type-title":"chat-type-title","chat-list":"chat-list","default-item":"default-item","chat-list-group":"chat-list-group","body-left-bottom":"body-left-bottom","bottom-profile":"bottom-profile","image-profile":"image-profile","bottom-nickname":"bottom-nickname","nickname-title":"nickname-title","nickname-content":"nickname-content","body-center":"body-center"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbWFpbi5zY3NzPzU0MTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJib2R5XCI6XCJib2R5XCIsXCJib2R5LWxlZnRcIjpcImJvZHktbGVmdFwiLFwic2hvd1wiOlwic2hvd1wiLFwiYm9keS1sZWZ0LWxpc3RcIjpcImJvZHktbGVmdC1saXN0XCIsXCJpY29uLWNyZWF0ZS1jaGF0XCI6XCJpY29uLWNyZWF0ZS1jaGF0XCIsXCJjaGF0LXR5cGVcIjpcImNoYXQtdHlwZVwiLFwiY2hhdC10eXBlLXRpdGxlXCI6XCJjaGF0LXR5cGUtdGl0bGVcIixcImNoYXQtbGlzdFwiOlwiY2hhdC1saXN0XCIsXCJkZWZhdWx0LWl0ZW1cIjpcImRlZmF1bHQtaXRlbVwiLFwiY2hhdC1saXN0LWdyb3VwXCI6XCJjaGF0LWxpc3QtZ3JvdXBcIixcImJvZHktbGVmdC1ib3R0b21cIjpcImJvZHktbGVmdC1ib3R0b21cIixcImJvdHRvbS1wcm9maWxlXCI6XCJib3R0b20tcHJvZmlsZVwiLFwiaW1hZ2UtcHJvZmlsZVwiOlwiaW1hZ2UtcHJvZmlsZVwiLFwiYm90dG9tLW5pY2tuYW1lXCI6XCJib3R0b20tbmlja25hbWVcIixcIm5pY2tuYW1lLXRpdGxlXCI6XCJuaWNrbmFtZS10aXRsZVwiLFwibmlja25hbWUtY29udGVudFwiOlwibmlja25hbWUtY29udGVudFwiLFwiYm9keS1jZW50ZXJcIjpcImJvZHktY2VudGVyXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n')},,,,,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","list-item":"list-item","item-top":"item-top","item-count":"item-count","item-title":"item-title","channel-member":"channel-member","avatar":"avatar","item-message-unread":"item-message-unread","active":"active","item-bottom":"item-bottom","item-message":"item-message","item-message-text":"item-message-text","item-time":"item-time"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbGlzdC1pdGVtLnNjc3M/YzZjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcImxpc3QtaXRlbVwiOlwibGlzdC1pdGVtXCIsXCJpdGVtLXRvcFwiOlwiaXRlbS10b3BcIixcIml0ZW0tY291bnRcIjpcIml0ZW0tY291bnRcIixcIml0ZW0tdGl0bGVcIjpcIml0ZW0tdGl0bGVcIixcImNoYW5uZWwtbWVtYmVyXCI6XCJjaGFubmVsLW1lbWJlclwiLFwiYXZhdGFyXCI6XCJhdmF0YXJcIixcIml0ZW0tbWVzc2FnZS11bnJlYWRcIjpcIml0ZW0tbWVzc2FnZS11bnJlYWRcIixcImFjdGl2ZVwiOlwiYWN0aXZlXCIsXCJpdGVtLWJvdHRvbVwiOlwiaXRlbS1ib3R0b21cIixcIml0ZW0tbWVzc2FnZVwiOlwiaXRlbS1tZXNzYWdlXCIsXCJpdGVtLW1lc3NhZ2UtdGV4dFwiOlwiaXRlbS1tZXNzYWdlLXRleHRcIixcIml0ZW0tdGltZVwiOlwiaXRlbS10aW1lXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///41\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","sb-spinner":"sb-spinner","sb-spinner-bubble":"sb-spinner-bubble","load7":"load7"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3Mvc3Bpbm5lci5zY3NzPzRlMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJzYi1zcGlubmVyXCI6XCJzYi1zcGlubmVyXCIsXCJzYi1zcGlubmVyLWJ1YmJsZVwiOlwic2Itc3Bpbm5lci1idWJibGVcIixcImxvYWQ3XCI6XCJsb2FkN1wifTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///43\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","channel-item":"channel-item","item-title":"item-title","item-desc":"item-desc"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3Mvb3Blbi1jaGFubmVsLWl0ZW0uc2Nzcz81NTMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCI6XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiLFwiY2hhbm5lbC1pdGVtXCI6XCJjaGFubmVsLWl0ZW1cIixcIml0ZW0tdGl0bGVcIjpcIml0ZW0tdGl0bGVcIixcIml0ZW0tZGVzY1wiOlwiaXRlbS1kZXNjXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","list-root":"list-root","list-body":"list-body","list-top":"list-top","list-title":"list-title","list-button":"list-button","button-exit":"button-exit","list-hr":"list-hr","list-search":"list-search","search-input":"search-input","list-content":"list-content"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbGlzdC5zY3NzPzFlYzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJsaXN0LXJvb3RcIjpcImxpc3Qtcm9vdFwiLFwibGlzdC1ib2R5XCI6XCJsaXN0LWJvZHlcIixcImxpc3QtdG9wXCI6XCJsaXN0LXRvcFwiLFwibGlzdC10aXRsZVwiOlwibGlzdC10aXRsZVwiLFwibGlzdC1idXR0b25cIjpcImxpc3QtYnV0dG9uXCIsXCJidXR0b24tZXhpdFwiOlwiYnV0dG9uLWV4aXRcIixcImxpc3QtaHJcIjpcImxpc3QtaHJcIixcImxpc3Qtc2VhcmNoXCI6XCJsaXN0LXNlYXJjaFwiLFwic2VhcmNoLWlucHV0XCI6XCJzZWFyY2gtaW5wdXRcIixcImxpc3QtY29udGVudFwiOlwibGlzdC1jb250ZW50XCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","button-create":"button-create"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvdXNlci1saXN0LnNjc3M/NjIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcImJ1dHRvbi1jcmVhdGVcIjpcImJ1dHRvbi1jcmVhdGVcIn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///49\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","user-item":"user-item","user-info":"user-info","user-profile":"user-profile","user-nickname":"user-nickname","user-online":"user-online","active":"active","user-state":"user-state","user-time":"user-time","user-select":"user-select"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvdXNlci1pdGVtLnNjc3M/NTYyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcInVzZXItaXRlbVwiOlwidXNlci1pdGVtXCIsXCJ1c2VyLWluZm9cIjpcInVzZXItaW5mb1wiLFwidXNlci1wcm9maWxlXCI6XCJ1c2VyLXByb2ZpbGVcIixcInVzZXItbmlja25hbWVcIjpcInVzZXItbmlja25hbWVcIixcInVzZXItb25saW5lXCI6XCJ1c2VyLW9ubGluZVwiLFwiYWN0aXZlXCI6XCJhY3RpdmVcIixcInVzZXItc3RhdGVcIjpcInVzZXItc3RhdGVcIixcInVzZXItdGltZVwiOlwidXNlci10aW1lXCIsXCJ1c2VyLXNlbGVjdFwiOlwidXNlci1zZWxlY3RcIn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-empty":"chat-empty","empty-content":"empty-content","content-title":"content-title","content-image":"content-image","content-desc":"content-desc","chat-root":"chat-root"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC5zY3NzPzFlMGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJjaGF0LWVtcHR5XCI6XCJjaGF0LWVtcHR5XCIsXCJlbXB0eS1jb250ZW50XCI6XCJlbXB0eS1jb250ZW50XCIsXCJjb250ZW50LXRpdGxlXCI6XCJjb250ZW50LXRpdGxlXCIsXCJjb250ZW50LWltYWdlXCI6XCJjb250ZW50LWltYWdlXCIsXCJjb250ZW50LWRlc2NcIjpcImNvbnRlbnQtZGVzY1wiLFwiY2hhdC1yb290XCI6XCJjaGF0LXJvb3RcIn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-top":"chat-top","menu-button":"menu-button","chat-title":"chat-title","chat-button":"chat-button","button-invite":"button-invite","button-hide":"button-hide","button-leave":"button-leave"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC10b3AtbWVudS5zY3NzPzhiMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJjaGF0LXRvcFwiOlwiY2hhdC10b3BcIixcIm1lbnUtYnV0dG9uXCI6XCJtZW51LWJ1dHRvblwiLFwiY2hhdC10aXRsZVwiOlwiY2hhdC10aXRsZVwiLFwiY2hhdC1idXR0b25cIjpcImNoYXQtYnV0dG9uXCIsXCJidXR0b24taW52aXRlXCI6XCJidXR0b24taW52aXRlXCIsXCJidXR0b24taGlkZVwiOlwiYnV0dG9uLWhpZGVcIixcImJ1dHRvbi1sZWF2ZVwiOlwiYnV0dG9uLWxlYXZlXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-main-root":"chat-main-root","chat-main":"chat-main"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC1tYWluLnNjc3M/YTViMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcImNoYXQtbWFpbi1yb290XCI6XCJjaGF0LW1haW4tcm9vdFwiLFwiY2hhdC1tYWluXCI6XCJjaGF0LW1haW5cIn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///57\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-body":"chat-body"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC1ib2R5LnNjc3M/ZDE4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcImNoYXQtYm9keVwiOlwiY2hhdC1ib2R5XCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///59\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-message":"chat-message","message-content":"message-content","message-avatar":"message-avatar","message-body":"message-body","message-nickname":"message-nickname","is-file":"is-file","image-content":"image-content","image-render":"image-render","message-footer":"message-footer","time":"time","is-user":"is-user","read":"read","active":"active","message-admin":"message-admin"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbWVzc2FnZS5zY3NzPzkzMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJjaGF0LW1lc3NhZ2VcIjpcImNoYXQtbWVzc2FnZVwiLFwibWVzc2FnZS1jb250ZW50XCI6XCJtZXNzYWdlLWNvbnRlbnRcIixcIm1lc3NhZ2UtYXZhdGFyXCI6XCJtZXNzYWdlLWF2YXRhclwiLFwibWVzc2FnZS1ib2R5XCI6XCJtZXNzYWdlLWJvZHlcIixcIm1lc3NhZ2Utbmlja25hbWVcIjpcIm1lc3NhZ2Utbmlja25hbWVcIixcImlzLWZpbGVcIjpcImlzLWZpbGVcIixcImltYWdlLWNvbnRlbnRcIjpcImltYWdlLWNvbnRlbnRcIixcImltYWdlLXJlbmRlclwiOlwiaW1hZ2UtcmVuZGVyXCIsXCJtZXNzYWdlLWZvb3RlclwiOlwibWVzc2FnZS1mb290ZXJcIixcInRpbWVcIjpcInRpbWVcIixcImlzLXVzZXJcIjpcImlzLXVzZXJcIixcInJlYWRcIjpcInJlYWRcIixcImFjdGl2ZVwiOlwiYWN0aXZlXCIsXCJtZXNzYWdlLWFkbWluXCI6XCJtZXNzYWdlLWFkbWluXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","modal-message":"modal-message"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbWVzc2FnZS1kZWxldGUtbW9kYWwuc2Nzcz85MjJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCI6XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiLFwibW9kYWwtbWVzc2FnZVwiOlwibW9kYWwtbWVzc2FnZVwifTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///63\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","modal-root":"modal-root","modal-body":"modal-body","modal-title":"modal-title","modal-desc":"modal-desc","modal-content":"modal-content","modal-bottom":"modal-bottom","modal-cancel":"modal-cancel","modal-submit":"modal-submit"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvbW9kYWwuc2Nzcz9iZDNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCI6XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiLFwibW9kYWwtcm9vdFwiOlwibW9kYWwtcm9vdFwiLFwibW9kYWwtYm9keVwiOlwibW9kYWwtYm9keVwiLFwibW9kYWwtdGl0bGVcIjpcIm1vZGFsLXRpdGxlXCIsXCJtb2RhbC1kZXNjXCI6XCJtb2RhbC1kZXNjXCIsXCJtb2RhbC1jb250ZW50XCI6XCJtb2RhbC1jb250ZW50XCIsXCJtb2RhbC1ib3R0b21cIjpcIm1vZGFsLWJvdHRvbVwiLFwibW9kYWwtY2FuY2VsXCI6XCJtb2RhbC1jYW5jZWxcIixcIm1vZGFsLXN1Ym1pdFwiOlwibW9kYWwtc3VibWl0XCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///65\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","modal-user":"modal-user","user-profile":"user-profile","user-nickname":"user-nickname"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvdXNlci1ibG9jay1tb2RhbC5zY3NzP2IwNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJtb2RhbC11c2VyXCI6XCJtb2RhbC11c2VyXCIsXCJ1c2VyLXByb2ZpbGVcIjpcInVzZXItcHJvZmlsZVwiLFwidXNlci1uaWNrbmFtZVwiOlwidXNlci1uaWNrbmFtZVwifTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-input":"chat-input","input-panel":"input-panel","input-file":"input-file","input-text":"input-text","input-text-area":"input-text-area","button-panel":"button-panel","typing-field":"typing-field","send-button":"send-button"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC1pbnB1dC5zY3NzPzQ1MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIjpcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCIsXCJjaGF0LWlucHV0XCI6XCJjaGF0LWlucHV0XCIsXCJpbnB1dC1wYW5lbFwiOlwiaW5wdXQtcGFuZWxcIixcImlucHV0LWZpbGVcIjpcImlucHV0LWZpbGVcIixcImlucHV0LXRleHRcIjpcImlucHV0LXRleHRcIixcImlucHV0LXRleHQtYXJlYVwiOlwiaW5wdXQtdGV4dC1hcmVhXCIsXCJidXR0b24tcGFuZWxcIjpcImJ1dHRvbi1wYW5lbFwiLFwidHlwaW5nLWZpZWxkXCI6XCJ0eXBpbmctZmllbGRcIixcInNlbmQtYnV0dG9uXCI6XCJzZW5kLWJ1dHRvblwifTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///69\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-menu-root":"chat-menu-root","menu-item":"menu-item","menu-users":"menu-users","menu-blocked":"menu-blocked","menu-arrow":"menu-arrow","menu-list":"menu-list","list-title":"list-title","list-back":"list-back","list-text":"list-text","list-body":"list-body"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC1tZW51LnNjc3M/NTcwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiOlwiYW1iaXNpZS1zZW5kYmlyZC1tZXNzZW5nZXJcIixcImNoYXQtbWVudS1yb290XCI6XCJjaGF0LW1lbnUtcm9vdFwiLFwibWVudS1pdGVtXCI6XCJtZW51LWl0ZW1cIixcIm1lbnUtdXNlcnNcIjpcIm1lbnUtdXNlcnNcIixcIm1lbnUtYmxvY2tlZFwiOlwibWVudS1ibG9ja2VkXCIsXCJtZW51LWFycm93XCI6XCJtZW51LWFycm93XCIsXCJtZW51LWxpc3RcIjpcIm1lbnUtbGlzdFwiLFwibGlzdC10aXRsZVwiOlwibGlzdC10aXRsZVwiLFwibGlzdC1iYWNrXCI6XCJsaXN0LWJhY2tcIixcImxpc3QtdGV4dFwiOlwibGlzdC10ZXh0XCIsXCJsaXN0LWJvZHlcIjpcImxpc3QtYm9keVwifTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///71\n')},,function(module,exports){eval('// removed by extract-text-webpack-plugin\nmodule.exports = {"ambisie-sendbird-messenger":"ambisie-sendbird-messenger","chat-user-item":"chat-user-item","user-image":"user-image","user-nickname":"user-nickname","is-user":"is-user"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbWJpc2llTWVzc2VuZ2VyLy4vc3JjL3Njc3MvY2hhdC11c2VyLWl0ZW0uc2Nzcz9lNmI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImFtYmlzaWUtc2VuZGJpcmQtbWVzc2VuZ2VyXCI6XCJhbWJpc2llLXNlbmRiaXJkLW1lc3NlbmdlclwiLFwiY2hhdC11c2VyLWl0ZW1cIjpcImNoYXQtdXNlci1pdGVtXCIsXCJ1c2VyLWltYWdlXCI6XCJ1c2VyLWltYWdlXCIsXCJ1c2VyLW5pY2tuYW1lXCI6XCJ1c2VyLW5pY2tuYW1lXCIsXCJpcy11c2VyXCI6XCJpcy11c2VyXCJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///73\n')}]).default}));